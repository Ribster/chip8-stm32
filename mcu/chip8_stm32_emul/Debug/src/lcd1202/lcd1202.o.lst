   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"lcd1202.c"
  23              	.Ltext0:
  24              		.file 1 "../src/lcd1202/lcd1202.c"
 18827              		.align	2
 18830              	font5x8:
 18831 0000 00       		.byte	0
 18832 0001 00       		.byte	0
 18833 0002 00       		.byte	0
 18834 0003 00       		.byte	0
 18835 0004 00       		.byte	0
 18836 0005 10       		.byte	16
 18837 0006 26       		.byte	38
 18838 0007 20       		.byte	32
 18839 0008 26       		.byte	38
 18840 0009 10       		.byte	16
 18841 000a 3E       		.byte	62
 18842 000b 6B       		.byte	107
 18843 000c 5F       		.byte	95
 18844 000d 6B       		.byte	107
 18845 000e 3E       		.byte	62
 18846 000f 1C       		.byte	28
 18847 0010 3E       		.byte	62
 18848 0011 7C       		.byte	124
 18849 0012 3E       		.byte	62
 18850 0013 1C       		.byte	28
 18851 0014 18       		.byte	24
 18852 0015 3C       		.byte	60
 18853 0016 7E       		.byte	126
 18854 0017 3C       		.byte	60
 18855 0018 18       		.byte	24
 18856 0019 04       		.byte	4
 18857 001a 44       		.byte	68
 18858 001b 7F       		.byte	127
 18859 001c 44       		.byte	68
 18860 001d 04       		.byte	4
 18861 001e 0C       		.byte	12
 18862 001f 5E       		.byte	94
 18863 0020 7F       		.byte	127
 18864 0021 5E       		.byte	94
 18865 0022 0C       		.byte	12
 18866 0023 1C       		.byte	28
 18867 0024 3E       		.byte	62
 18868 0025 3E       		.byte	62
 18869 0026 3E       		.byte	62
 18870 0027 1C       		.byte	28
 18871 0028 FF       		.byte	-1
 18872 0029 E7       		.byte	-25
 18873 002a C3       		.byte	-61
 18874 002b E7       		.byte	-25
 18875 002c FF       		.byte	-1
 18876 002d 08       		.byte	8
 18877 002e 08       		.byte	8
 18878 002f 2A       		.byte	42
 18879 0030 1C       		.byte	28
 18880 0031 08       		.byte	8
 18881 0032 08       		.byte	8
 18882 0033 1C       		.byte	28
 18883 0034 3E       		.byte	62
 18884 0035 08       		.byte	8
 18885 0036 0F       		.byte	15
 18886 0037 30       		.byte	48
 18887 0038 48       		.byte	72
 18888 0039 4C       		.byte	76
 18889 003a 31       		.byte	49
 18890 003b 03       		.byte	3
 18891 003c 06       		.byte	6
 18892 003d 29       		.byte	41
 18893 003e 79       		.byte	121
 18894 003f 29       		.byte	41
 18895 0040 06       		.byte	6
 18896 0041 08       		.byte	8
 18897 0042 1C       		.byte	28
 18898 0043 3E       		.byte	62
 18899 0044 08       		.byte	8
 18900 0045 08       		.byte	8
 18901 0046 30       		.byte	48
 18902 0047 3F       		.byte	63
 18903 0048 01       		.byte	1
 18904 0049 62       		.byte	98
 18905 004a 7C       		.byte	124
 18906 004b 08       		.byte	8
 18907 004c 1C       		.byte	28
 18908 004d 36       		.byte	54
 18909 004e 1C       		.byte	28
 18910 004f 08       		.byte	8
 18911 0050 00       		.byte	0
 18912 0051 7F       		.byte	127
 18913 0052 3E       		.byte	62
 18914 0053 1C       		.byte	28
 18915 0054 08       		.byte	8
 18916 0055 08       		.byte	8
 18917 0056 1C       		.byte	28
 18918 0057 3E       		.byte	62
 18919 0058 7F       		.byte	127
 18920 0059 00       		.byte	0
 18921 005a 14       		.byte	20
 18922 005b 36       		.byte	54
 18923 005c 7F       		.byte	127
 18924 005d 36       		.byte	54
 18925 005e 14       		.byte	20
 18926 005f 00       		.byte	0
 18927 0060 5F       		.byte	95
 18928 0061 00       		.byte	0
 18929 0062 5F       		.byte	95
 18930 0063 00       		.byte	0
 18931 0064 06       		.byte	6
 18932 0065 0F       		.byte	15
 18933 0066 7F       		.byte	127
 18934 0067 01       		.byte	1
 18935 0068 7F       		.byte	127
 18936 0069 40       		.byte	64
 18937 006a 4A       		.byte	74
 18938 006b 55       		.byte	85
 18939 006c 29       		.byte	41
 18940 006d 01       		.byte	1
 18941 006e 7C       		.byte	124
 18942 006f 7C       		.byte	124
 18943 0070 7C       		.byte	124
 18944 0071 7C       		.byte	124
 18945 0072 7C       		.byte	124
 18946 0073 94       		.byte	-108
 18947 0074 B6       		.byte	-74
 18948 0075 FF       		.byte	-1
 18949 0076 B6       		.byte	-74
 18950 0077 94       		.byte	-108
 18951 0078 04       		.byte	4
 18952 0079 06       		.byte	6
 18953 007a 7F       		.byte	127
 18954 007b 06       		.byte	6
 18955 007c 04       		.byte	4
 18956 007d 10       		.byte	16
 18957 007e 30       		.byte	48
 18958 007f 7F       		.byte	127
 18959 0080 30       		.byte	48
 18960 0081 10       		.byte	16
 18961 0082 00       		.byte	0
 18962 0083 00       		.byte	0
 18963 0084 00       		.byte	0
 18964 0085 00       		.byte	0
 18965 0086 00       		.byte	0
 18966 0087 08       		.byte	8
 18967 0088 1C       		.byte	28
 18968 0089 2A       		.byte	42
 18969 008a 08       		.byte	8
 18970 008b 08       		.byte	8
 18971 008c 0E       		.byte	14
 18972 008d 08       		.byte	8
 18973 008e 08       		.byte	8
 18974 008f 08       		.byte	8
 18975 0090 08       		.byte	8
 18976 0091 08       		.byte	8
 18977 0092 1C       		.byte	28
 18978 0093 08       		.byte	8
 18979 0094 1C       		.byte	28
 18980 0095 08       		.byte	8
 18981 0096 18       		.byte	24
 18982 0097 1C       		.byte	28
 18983 0098 1E       		.byte	30
 18984 0099 1C       		.byte	28
 18985 009a 18       		.byte	24
 18986 009b 18       		.byte	24
 18987 009c 38       		.byte	56
 18988 009d 78       		.byte	120
 18989 009e 38       		.byte	56
 18990 009f 18       		.byte	24
 18991 00a0 00       		.byte	0
 18992 00a1 00       		.byte	0
 18993 00a2 00       		.byte	0
 18994 00a3 00       		.byte	0
 18995 00a4 00       		.byte	0
 18996 00a5 00       		.byte	0
 18997 00a6 00       		.byte	0
 18998 00a7 5F       		.byte	95
 18999 00a8 00       		.byte	0
 19000 00a9 00       		.byte	0
 19001 00aa 00       		.byte	0
 19002 00ab 07       		.byte	7
 19003 00ac 00       		.byte	0
 19004 00ad 07       		.byte	7
 19005 00ae 00       		.byte	0
 19006 00af 14       		.byte	20
 19007 00b0 7F       		.byte	127
 19008 00b1 14       		.byte	20
 19009 00b2 7F       		.byte	127
 19010 00b3 14       		.byte	20
 19011 00b4 24       		.byte	36
 19012 00b5 2A       		.byte	42
 19013 00b6 7F       		.byte	127
 19014 00b7 2A       		.byte	42
 19015 00b8 12       		.byte	18
 19016 00b9 23       		.byte	35
 19017 00ba 13       		.byte	19
 19018 00bb 08       		.byte	8
 19019 00bc 64       		.byte	100
 19020 00bd 62       		.byte	98
 19021 00be 36       		.byte	54
 19022 00bf 49       		.byte	73
 19023 00c0 55       		.byte	85
 19024 00c1 22       		.byte	34
 19025 00c2 50       		.byte	80
 19026 00c3 00       		.byte	0
 19027 00c4 05       		.byte	5
 19028 00c5 03       		.byte	3
 19029 00c6 00       		.byte	0
 19030 00c7 00       		.byte	0
 19031 00c8 00       		.byte	0
 19032 00c9 1C       		.byte	28
 19033 00ca 22       		.byte	34
 19034 00cb 41       		.byte	65
 19035 00cc 00       		.byte	0
 19036 00cd 00       		.byte	0
 19037 00ce 41       		.byte	65
 19038 00cf 22       		.byte	34
 19039 00d0 1C       		.byte	28
 19040 00d1 00       		.byte	0
 19041 00d2 08       		.byte	8
 19042 00d3 2A       		.byte	42
 19043 00d4 1C       		.byte	28
 19044 00d5 2A       		.byte	42
 19045 00d6 08       		.byte	8
 19046 00d7 08       		.byte	8
 19047 00d8 08       		.byte	8
 19048 00d9 3E       		.byte	62
 19049 00da 08       		.byte	8
 19050 00db 08       		.byte	8
 19051 00dc 00       		.byte	0
 19052 00dd 50       		.byte	80
 19053 00de 30       		.byte	48
 19054 00df 00       		.byte	0
 19055 00e0 00       		.byte	0
 19056 00e1 08       		.byte	8
 19057 00e2 08       		.byte	8
 19058 00e3 08       		.byte	8
 19059 00e4 08       		.byte	8
 19060 00e5 08       		.byte	8
 19061 00e6 00       		.byte	0
 19062 00e7 60       		.byte	96
 19063 00e8 60       		.byte	96
 19064 00e9 00       		.byte	0
 19065 00ea 00       		.byte	0
 19066 00eb 20       		.byte	32
 19067 00ec 10       		.byte	16
 19068 00ed 08       		.byte	8
 19069 00ee 04       		.byte	4
 19070 00ef 02       		.byte	2
 19071 00f0 3E       		.byte	62
 19072 00f1 51       		.byte	81
 19073 00f2 49       		.byte	73
 19074 00f3 45       		.byte	69
 19075 00f4 3E       		.byte	62
 19076 00f5 00       		.byte	0
 19077 00f6 42       		.byte	66
 19078 00f7 7F       		.byte	127
 19079 00f8 40       		.byte	64
 19080 00f9 00       		.byte	0
 19081 00fa 42       		.byte	66
 19082 00fb 61       		.byte	97
 19083 00fc 51       		.byte	81
 19084 00fd 49       		.byte	73
 19085 00fe 46       		.byte	70
 19086 00ff 21       		.byte	33
 19087 0100 41       		.byte	65
 19088 0101 45       		.byte	69
 19089 0102 4B       		.byte	75
 19090 0103 31       		.byte	49
 19091 0104 18       		.byte	24
 19092 0105 14       		.byte	20
 19093 0106 12       		.byte	18
 19094 0107 7F       		.byte	127
 19095 0108 10       		.byte	16
 19096 0109 27       		.byte	39
 19097 010a 45       		.byte	69
 19098 010b 45       		.byte	69
 19099 010c 45       		.byte	69
 19100 010d 39       		.byte	57
 19101 010e 3C       		.byte	60
 19102 010f 4A       		.byte	74
 19103 0110 49       		.byte	73
 19104 0111 49       		.byte	73
 19105 0112 30       		.byte	48
 19106 0113 01       		.byte	1
 19107 0114 71       		.byte	113
 19108 0115 09       		.byte	9
 19109 0116 05       		.byte	5
 19110 0117 03       		.byte	3
 19111 0118 36       		.byte	54
 19112 0119 49       		.byte	73
 19113 011a 49       		.byte	73
 19114 011b 49       		.byte	73
 19115 011c 36       		.byte	54
 19116 011d 06       		.byte	6
 19117 011e 49       		.byte	73
 19118 011f 49       		.byte	73
 19119 0120 29       		.byte	41
 19120 0121 1E       		.byte	30
 19121 0122 00       		.byte	0
 19122 0123 36       		.byte	54
 19123 0124 36       		.byte	54
 19124 0125 00       		.byte	0
 19125 0126 00       		.byte	0
 19126 0127 00       		.byte	0
 19127 0128 56       		.byte	86
 19128 0129 36       		.byte	54
 19129 012a 00       		.byte	0
 19130 012b 00       		.byte	0
 19131 012c 00       		.byte	0
 19132 012d 08       		.byte	8
 19133 012e 14       		.byte	20
 19134 012f 22       		.byte	34
 19135 0130 41       		.byte	65
 19136 0131 14       		.byte	20
 19137 0132 14       		.byte	20
 19138 0133 14       		.byte	20
 19139 0134 14       		.byte	20
 19140 0135 14       		.byte	20
 19141 0136 41       		.byte	65
 19142 0137 22       		.byte	34
 19143 0138 14       		.byte	20
 19144 0139 08       		.byte	8
 19145 013a 00       		.byte	0
 19146 013b 02       		.byte	2
 19147 013c 01       		.byte	1
 19148 013d 51       		.byte	81
 19149 013e 09       		.byte	9
 19150 013f 06       		.byte	6
 19151 0140 32       		.byte	50
 19152 0141 49       		.byte	73
 19153 0142 79       		.byte	121
 19154 0143 41       		.byte	65
 19155 0144 3E       		.byte	62
 19156 0145 7E       		.byte	126
 19157 0146 11       		.byte	17
 19158 0147 11       		.byte	17
 19159 0148 11       		.byte	17
 19160 0149 7E       		.byte	126
 19161 014a 7F       		.byte	127
 19162 014b 49       		.byte	73
 19163 014c 49       		.byte	73
 19164 014d 49       		.byte	73
 19165 014e 36       		.byte	54
 19166 014f 3E       		.byte	62
 19167 0150 41       		.byte	65
 19168 0151 41       		.byte	65
 19169 0152 41       		.byte	65
 19170 0153 22       		.byte	34
 19171 0154 7F       		.byte	127
 19172 0155 41       		.byte	65
 19173 0156 41       		.byte	65
 19174 0157 22       		.byte	34
 19175 0158 1C       		.byte	28
 19176 0159 7F       		.byte	127
 19177 015a 49       		.byte	73
 19178 015b 49       		.byte	73
 19179 015c 49       		.byte	73
 19180 015d 41       		.byte	65
 19181 015e 7F       		.byte	127
 19182 015f 09       		.byte	9
 19183 0160 09       		.byte	9
 19184 0161 01       		.byte	1
 19185 0162 01       		.byte	1
 19186 0163 3E       		.byte	62
 19187 0164 41       		.byte	65
 19188 0165 41       		.byte	65
 19189 0166 51       		.byte	81
 19190 0167 32       		.byte	50
 19191 0168 7F       		.byte	127
 19192 0169 08       		.byte	8
 19193 016a 08       		.byte	8
 19194 016b 08       		.byte	8
 19195 016c 7F       		.byte	127
 19196 016d 00       		.byte	0
 19197 016e 41       		.byte	65
 19198 016f 7F       		.byte	127
 19199 0170 41       		.byte	65
 19200 0171 00       		.byte	0
 19201 0172 20       		.byte	32
 19202 0173 40       		.byte	64
 19203 0174 41       		.byte	65
 19204 0175 3F       		.byte	63
 19205 0176 01       		.byte	1
 19206 0177 7F       		.byte	127
 19207 0178 08       		.byte	8
 19208 0179 14       		.byte	20
 19209 017a 22       		.byte	34
 19210 017b 41       		.byte	65
 19211 017c 7F       		.byte	127
 19212 017d 40       		.byte	64
 19213 017e 40       		.byte	64
 19214 017f 40       		.byte	64
 19215 0180 40       		.byte	64
 19216 0181 7F       		.byte	127
 19217 0182 02       		.byte	2
 19218 0183 04       		.byte	4
 19219 0184 02       		.byte	2
 19220 0185 7F       		.byte	127
 19221 0186 7F       		.byte	127
 19222 0187 04       		.byte	4
 19223 0188 08       		.byte	8
 19224 0189 10       		.byte	16
 19225 018a 7F       		.byte	127
 19226 018b 3E       		.byte	62
 19227 018c 41       		.byte	65
 19228 018d 41       		.byte	65
 19229 018e 41       		.byte	65
 19230 018f 3E       		.byte	62
 19231 0190 7F       		.byte	127
 19232 0191 09       		.byte	9
 19233 0192 09       		.byte	9
 19234 0193 09       		.byte	9
 19235 0194 06       		.byte	6
 19236 0195 3E       		.byte	62
 19237 0196 41       		.byte	65
 19238 0197 51       		.byte	81
 19239 0198 21       		.byte	33
 19240 0199 5E       		.byte	94
 19241 019a 7F       		.byte	127
 19242 019b 09       		.byte	9
 19243 019c 19       		.byte	25
 19244 019d 29       		.byte	41
 19245 019e 46       		.byte	70
 19246 019f 46       		.byte	70
 19247 01a0 49       		.byte	73
 19248 01a1 49       		.byte	73
 19249 01a2 49       		.byte	73
 19250 01a3 31       		.byte	49
 19251 01a4 01       		.byte	1
 19252 01a5 01       		.byte	1
 19253 01a6 7F       		.byte	127
 19254 01a7 01       		.byte	1
 19255 01a8 01       		.byte	1
 19256 01a9 3F       		.byte	63
 19257 01aa 40       		.byte	64
 19258 01ab 40       		.byte	64
 19259 01ac 40       		.byte	64
 19260 01ad 3F       		.byte	63
 19261 01ae 1F       		.byte	31
 19262 01af 20       		.byte	32
 19263 01b0 40       		.byte	64
 19264 01b1 20       		.byte	32
 19265 01b2 1F       		.byte	31
 19266 01b3 7F       		.byte	127
 19267 01b4 20       		.byte	32
 19268 01b5 18       		.byte	24
 19269 01b6 20       		.byte	32
 19270 01b7 7F       		.byte	127
 19271 01b8 63       		.byte	99
 19272 01b9 14       		.byte	20
 19273 01ba 08       		.byte	8
 19274 01bb 14       		.byte	20
 19275 01bc 63       		.byte	99
 19276 01bd 03       		.byte	3
 19277 01be 04       		.byte	4
 19278 01bf 78       		.byte	120
 19279 01c0 04       		.byte	4
 19280 01c1 03       		.byte	3
 19281 01c2 61       		.byte	97
 19282 01c3 51       		.byte	81
 19283 01c4 49       		.byte	73
 19284 01c5 45       		.byte	69
 19285 01c6 43       		.byte	67
 19286 01c7 00       		.byte	0
 19287 01c8 00       		.byte	0
 19288 01c9 7F       		.byte	127
 19289 01ca 41       		.byte	65
 19290 01cb 41       		.byte	65
 19291 01cc 02       		.byte	2
 19292 01cd 04       		.byte	4
 19293 01ce 08       		.byte	8
 19294 01cf 10       		.byte	16
 19295 01d0 20       		.byte	32
 19296 01d1 41       		.byte	65
 19297 01d2 41       		.byte	65
 19298 01d3 7F       		.byte	127
 19299 01d4 00       		.byte	0
 19300 01d5 00       		.byte	0
 19301 01d6 04       		.byte	4
 19302 01d7 02       		.byte	2
 19303 01d8 01       		.byte	1
 19304 01d9 02       		.byte	2
 19305 01da 04       		.byte	4
 19306 01db 40       		.byte	64
 19307 01dc 40       		.byte	64
 19308 01dd 40       		.byte	64
 19309 01de 40       		.byte	64
 19310 01df 40       		.byte	64
 19311 01e0 00       		.byte	0
 19312 01e1 01       		.byte	1
 19313 01e2 02       		.byte	2
 19314 01e3 04       		.byte	4
 19315 01e4 00       		.byte	0
 19316 01e5 20       		.byte	32
 19317 01e6 54       		.byte	84
 19318 01e7 54       		.byte	84
 19319 01e8 54       		.byte	84
 19320 01e9 78       		.byte	120
 19321 01ea 7F       		.byte	127
 19322 01eb 48       		.byte	72
 19323 01ec 44       		.byte	68
 19324 01ed 44       		.byte	68
 19325 01ee 38       		.byte	56
 19326 01ef 38       		.byte	56
 19327 01f0 44       		.byte	68
 19328 01f1 44       		.byte	68
 19329 01f2 44       		.byte	68
 19330 01f3 20       		.byte	32
 19331 01f4 38       		.byte	56
 19332 01f5 44       		.byte	68
 19333 01f6 44       		.byte	68
 19334 01f7 48       		.byte	72
 19335 01f8 7F       		.byte	127
 19336 01f9 38       		.byte	56
 19337 01fa 54       		.byte	84
 19338 01fb 54       		.byte	84
 19339 01fc 54       		.byte	84
 19340 01fd 18       		.byte	24
 19341 01fe 08       		.byte	8
 19342 01ff 7E       		.byte	126
 19343 0200 09       		.byte	9
 19344 0201 01       		.byte	1
 19345 0202 02       		.byte	2
 19346 0203 08       		.byte	8
 19347 0204 14       		.byte	20
 19348 0205 54       		.byte	84
 19349 0206 54       		.byte	84
 19350 0207 3C       		.byte	60
 19351 0208 7F       		.byte	127
 19352 0209 08       		.byte	8
 19353 020a 04       		.byte	4
 19354 020b 04       		.byte	4
 19355 020c 78       		.byte	120
 19356 020d 00       		.byte	0
 19357 020e 44       		.byte	68
 19358 020f 7D       		.byte	125
 19359 0210 40       		.byte	64
 19360 0211 00       		.byte	0
 19361 0212 20       		.byte	32
 19362 0213 40       		.byte	64
 19363 0214 44       		.byte	68
 19364 0215 3D       		.byte	61
 19365 0216 00       		.byte	0
 19366 0217 00       		.byte	0
 19367 0218 7F       		.byte	127
 19368 0219 10       		.byte	16
 19369 021a 28       		.byte	40
 19370 021b 44       		.byte	68
 19371 021c 00       		.byte	0
 19372 021d 41       		.byte	65
 19373 021e 7F       		.byte	127
 19374 021f 40       		.byte	64
 19375 0220 00       		.byte	0
 19376 0221 7C       		.byte	124
 19377 0222 04       		.byte	4
 19378 0223 18       		.byte	24
 19379 0224 04       		.byte	4
 19380 0225 78       		.byte	120
 19381 0226 7C       		.byte	124
 19382 0227 08       		.byte	8
 19383 0228 04       		.byte	4
 19384 0229 04       		.byte	4
 19385 022a 78       		.byte	120
 19386 022b 38       		.byte	56
 19387 022c 44       		.byte	68
 19388 022d 44       		.byte	68
 19389 022e 44       		.byte	68
 19390 022f 38       		.byte	56
 19391 0230 7C       		.byte	124
 19392 0231 14       		.byte	20
 19393 0232 14       		.byte	20
 19394 0233 14       		.byte	20
 19395 0234 08       		.byte	8
 19396 0235 08       		.byte	8
 19397 0236 14       		.byte	20
 19398 0237 14       		.byte	20
 19399 0238 18       		.byte	24
 19400 0239 7C       		.byte	124
 19401 023a 7C       		.byte	124
 19402 023b 08       		.byte	8
 19403 023c 04       		.byte	4
 19404 023d 04       		.byte	4
 19405 023e 08       		.byte	8
 19406 023f 48       		.byte	72
 19407 0240 54       		.byte	84
 19408 0241 54       		.byte	84
 19409 0242 54       		.byte	84
 19410 0243 20       		.byte	32
 19411 0244 04       		.byte	4
 19412 0245 3F       		.byte	63
 19413 0246 44       		.byte	68
 19414 0247 40       		.byte	64
 19415 0248 20       		.byte	32
 19416 0249 3C       		.byte	60
 19417 024a 40       		.byte	64
 19418 024b 40       		.byte	64
 19419 024c 20       		.byte	32
 19420 024d 7C       		.byte	124
 19421 024e 1C       		.byte	28
 19422 024f 20       		.byte	32
 19423 0250 40       		.byte	64
 19424 0251 20       		.byte	32
 19425 0252 1C       		.byte	28
 19426 0253 3C       		.byte	60
 19427 0254 40       		.byte	64
 19428 0255 30       		.byte	48
 19429 0256 40       		.byte	64
 19430 0257 3C       		.byte	60
 19431 0258 44       		.byte	68
 19432 0259 28       		.byte	40
 19433 025a 10       		.byte	16
 19434 025b 28       		.byte	40
 19435 025c 44       		.byte	68
 19436 025d 0C       		.byte	12
 19437 025e 50       		.byte	80
 19438 025f 50       		.byte	80
 19439 0260 50       		.byte	80
 19440 0261 3C       		.byte	60
 19441 0262 44       		.byte	68
 19442 0263 64       		.byte	100
 19443 0264 54       		.byte	84
 19444 0265 4C       		.byte	76
 19445 0266 44       		.byte	68
 19446 0267 00       		.byte	0
 19447 0268 08       		.byte	8
 19448 0269 36       		.byte	54
 19449 026a 41       		.byte	65
 19450 026b 00       		.byte	0
 19451 026c 00       		.byte	0
 19452 026d 00       		.byte	0
 19453 026e 7F       		.byte	127
 19454 026f 00       		.byte	0
 19455 0270 00       		.byte	0
 19456 0271 00       		.byte	0
 19457 0272 41       		.byte	65
 19458 0273 36       		.byte	54
 19459 0274 08       		.byte	8
 19460 0275 00       		.byte	0
 19461 0276 04       		.byte	4
 19462 0277 02       		.byte	2
 19463 0278 04       		.byte	4
 19464 0279 08       		.byte	8
 19465 027a 04       		.byte	4
 19466 027b 7F       		.byte	127
 19467 027c 41       		.byte	65
 19468 027d 41       		.byte	65
 19469 027e 41       		.byte	65
 19470 027f 7F       		.byte	127
 19471 0280 01       		.byte	1
 19472 0281 7F       		.byte	127
 19473 0282 09       		.byte	9
 19474 0283 44       		.byte	68
 19475 0284 38       		.byte	56
 19476 0285 44       		.byte	68
 19477 0286 7C       		.byte	124
 19478 0287 46       		.byte	70
 19479 0288 05       		.byte	5
 19480 0289 0C       		.byte	12
 19481 028a 00       		.byte	0
 19482 028b 00       		.byte	0
 19483 028c 50       		.byte	80
 19484 028d 30       		.byte	48
 19485 028e 00       		.byte	0
 19486 028f 00       		.byte	0
 19487 0290 78       		.byte	120
 19488 0291 0A       		.byte	10
 19489 0292 09       		.byte	9
 19490 0293 00       		.byte	0
 19491 0294 50       		.byte	80
 19492 0295 30       		.byte	48
 19493 0296 00       		.byte	0
 19494 0297 50       		.byte	80
 19495 0298 30       		.byte	48
 19496 0299 40       		.byte	64
 19497 029a 00       		.byte	0
 19498 029b 40       		.byte	64
 19499 029c 00       		.byte	0
 19500 029d 40       		.byte	64
 19501 029e 02       		.byte	2
 19502 029f 02       		.byte	2
 19503 02a0 7F       		.byte	127
 19504 02a1 02       		.byte	2
 19505 02a2 02       		.byte	2
 19506 02a3 22       		.byte	34
 19507 02a4 22       		.byte	34
 19508 02a5 7F       		.byte	127
 19509 02a6 22       		.byte	34
 19510 02a7 22       		.byte	34
 19511 02a8 14       		.byte	20
 19512 02a9 3E       		.byte	62
 19513 02aa 55       		.byte	85
 19514 02ab 41       		.byte	65
 19515 02ac 22       		.byte	34
 19516 02ad 13       		.byte	19
 19517 02ae 08       		.byte	8
 19518 02af 64       		.byte	100
 19519 02b0 02       		.byte	2
 19520 02b1 61       		.byte	97
 19521 02b2 7E       		.byte	126
 19522 02b3 01       		.byte	1
 19523 02b4 7F       		.byte	127
 19524 02b5 48       		.byte	72
 19525 02b6 30       		.byte	48
 19526 02b7 00       		.byte	0
 19527 02b8 00       		.byte	0
 19528 02b9 06       		.byte	6
 19529 02ba 05       		.byte	5
 19530 02bb 00       		.byte	0
 19531 02bc 7F       		.byte	127
 19532 02bd 08       		.byte	8
 19533 02be 7F       		.byte	127
 19534 02bf 48       		.byte	72
 19535 02c0 30       		.byte	48
 19536 02c1 7E       		.byte	126
 19537 02c2 10       		.byte	16
 19538 02c3 12       		.byte	18
 19539 02c4 29       		.byte	41
 19540 02c5 46       		.byte	70
 19541 02c6 01       		.byte	1
 19542 02c7 7F       		.byte	127
 19543 02c8 11       		.byte	17
 19544 02c9 08       		.byte	8
 19545 02ca 70       		.byte	112
 19546 02cb 3F       		.byte	63
 19547 02cc 20       		.byte	32
 19548 02cd 60       		.byte	96
 19549 02ce 20       		.byte	32
 19550 02cf 3F       		.byte	63
 19551 02d0 02       		.byte	2
 19552 02d1 3F       		.byte	63
 19553 02d2 0A       		.byte	10
 19554 02d3 48       		.byte	72
 19555 02d4 30       		.byte	48
 19556 02d5 00       		.byte	0
 19557 02d6 00       		.byte	0
 19558 02d7 06       		.byte	6
 19559 02d8 05       		.byte	5
 19560 02d9 00       		.byte	0
 19561 02da 00       		.byte	0
 19562 02db 05       		.byte	5
 19563 02dc 03       		.byte	3
 19564 02dd 00       		.byte	0
 19565 02de 00       		.byte	0
 19566 02df 06       		.byte	6
 19567 02e0 05       		.byte	5
 19568 02e1 00       		.byte	0
 19569 02e2 06       		.byte	6
 19570 02e3 05       		.byte	5
 19571 02e4 05       		.byte	5
 19572 02e5 03       		.byte	3
 19573 02e6 00       		.byte	0
 19574 02e7 05       		.byte	5
 19575 02e8 03       		.byte	3
 19576 02e9 1C       		.byte	28
 19577 02ea 3E       		.byte	62
 19578 02eb 3E       		.byte	62
 19579 02ec 3E       		.byte	62
 19580 02ed 1C       		.byte	28
 19581 02ee 00       		.byte	0
 19582 02ef 08       		.byte	8
 19583 02f0 08       		.byte	8
 19584 02f1 08       		.byte	8
 19585 02f2 00       		.byte	0
 19586 02f3 08       		.byte	8
 19587 02f4 08       		.byte	8
 19588 02f5 08       		.byte	8
 19589 02f6 08       		.byte	8
 19590 02f7 08       		.byte	8
 19591 02f8 02       		.byte	2
 19592 02f9 01       		.byte	1
 19593 02fa 51       		.byte	81
 19594 02fb 09       		.byte	9
 19595 02fc 06       		.byte	6
 19596 02fd 79       		.byte	121
 19597 02fe 11       		.byte	17
 19598 02ff 27       		.byte	39
 19599 0300 11       		.byte	17
 19600 0301 79       		.byte	121
 19601 0302 78       		.byte	120
 19602 0303 04       		.byte	4
 19603 0304 7C       		.byte	124
 19604 0305 50       		.byte	80
 19605 0306 20       		.byte	32
 19606 0307 00       		.byte	0
 19607 0308 05       		.byte	5
 19608 0309 06       		.byte	6
 19609 030a 00       		.byte	0
 19610 030b 00       		.byte	0
 19611 030c 7C       		.byte	124
 19612 030d 10       		.byte	16
 19613 030e 7C       		.byte	124
 19614 030f 50       		.byte	80
 19615 0310 20       		.byte	32
 19616 0311 7C       		.byte	124
 19617 0312 10       		.byte	16
 19618 0313 2A       		.byte	42
 19619 0314 41       		.byte	65
 19620 0315 00       		.byte	0
 19621 0316 02       		.byte	2
 19622 0317 7F       		.byte	127
 19623 0318 12       		.byte	18
 19624 0319 08       		.byte	8
 19625 031a 70       		.byte	112
 19626 031b 3C       		.byte	60
 19627 031c 20       		.byte	32
 19628 031d 60       		.byte	96
 19629 031e 20       		.byte	32
 19630 031f 3C       		.byte	60
 19631 0320 00       		.byte	0
 19632 0321 00       		.byte	0
 19633 0322 00       		.byte	0
 19634 0323 00       		.byte	0
 19635 0324 00       		.byte	0
 19636 0325 8C       		.byte	-116
 19637 0326 51       		.byte	81
 19638 0327 22       		.byte	34
 19639 0328 11       		.byte	17
 19640 0329 0C       		.byte	12
 19641 032a 88       		.byte	-120
 19642 032b 52       		.byte	82
 19643 032c 24       		.byte	36
 19644 032d 12       		.byte	18
 19645 032e 08       		.byte	8
 19646 032f 30       		.byte	48
 19647 0330 70       		.byte	112
 19648 0331 41       		.byte	65
 19649 0332 3F       		.byte	63
 19650 0333 01       		.byte	1
 19651 0334 24       		.byte	36
 19652 0335 18       		.byte	24
 19653 0336 24       		.byte	36
 19654 0337 18       		.byte	24
 19655 0338 24       		.byte	36
 19656 0339 42       		.byte	66
 19657 033a 7E       		.byte	126
 19658 033b 42       		.byte	66
 19659 033c 02       		.byte	2
 19660 033d 03       		.byte	3
 19661 033e 00       		.byte	0
 19662 033f 00       		.byte	0
 19663 0340 77       		.byte	119
 19664 0341 00       		.byte	0
 19665 0342 00       		.byte	0
 19666 0343 00       		.byte	0
 19667 0344 4A       		.byte	74
 19668 0345 55       		.byte	85
 19669 0346 29       		.byte	41
 19670 0347 00       		.byte	0
 19671 0348 7E       		.byte	126
 19672 0349 4B       		.byte	75
 19673 034a 4A       		.byte	74
 19674 034b 4B       		.byte	75
 19675 034c 42       		.byte	66
 19676 034d 7E       		.byte	126
 19677 034e 99       		.byte	-103
 19678 034f A5       		.byte	-91
 19679 0350 A5       		.byte	-91
 19680 0351 7E       		.byte	126
 19681 0352 3E       		.byte	62
 19682 0353 45       		.byte	69
 19683 0354 45       		.byte	69
 19684 0355 41       		.byte	65
 19685 0356 32       		.byte	50
 19686 0357 08       		.byte	8
 19687 0358 14       		.byte	20
 19688 0359 22       		.byte	34
 19689 035a 08       		.byte	8
 19690 035b 14       		.byte	20
 19691 035c 08       		.byte	8
 19692 035d 08       		.byte	8
 19693 035e 08       		.byte	8
 19694 035f 08       		.byte	8
 19695 0360 18       		.byte	24
 19696 0361 08       		.byte	8
 19697 0362 08       		.byte	8
 19698 0363 08       		.byte	8
 19699 0364 08       		.byte	8
 19700 0365 08       		.byte	8
 19701 0366 7E       		.byte	126
 19702 0367 BD       		.byte	-67
 19703 0368 95       		.byte	-107
 19704 0369 A9       		.byte	-87
 19705 036a 7E       		.byte	126
 19706 036b 42       		.byte	66
 19707 036c 43       		.byte	67
 19708 036d 7E       		.byte	126
 19709 036e 43       		.byte	67
 19710 036f 42       		.byte	66
 19711 0370 00       		.byte	0
 19712 0371 07       		.byte	7
 19713 0372 05       		.byte	5
 19714 0373 07       		.byte	7
 19715 0374 00       		.byte	0
 19716 0375 00       		.byte	0
 19717 0376 24       		.byte	36
 19718 0377 2E       		.byte	46
 19719 0378 24       		.byte	36
 19720 0379 00       		.byte	0
 19721 037a 00       		.byte	0
 19722 037b 41       		.byte	65
 19723 037c 7F       		.byte	127
 19724 037d 41       		.byte	65
 19725 037e 00       		.byte	0
 19726 037f 00       		.byte	0
 19727 0380 44       		.byte	68
 19728 0381 7D       		.byte	125
 19729 0382 40       		.byte	64
 19730 0383 00       		.byte	0
 19731 0384 08       		.byte	8
 19732 0385 78       		.byte	120
 19733 0386 08       		.byte	8
 19734 0387 0C       		.byte	12
 19735 0388 00       		.byte	0
 19736 0389 7C       		.byte	124
 19737 038a 08       		.byte	8
 19738 038b 10       		.byte	16
 19739 038c 08       		.byte	8
 19740 038d 1C       		.byte	28
 19741 038e 06       		.byte	6
 19742 038f 09       		.byte	9
 19743 0390 7F       		.byte	127
 19744 0391 01       		.byte	1
 19745 0392 7F       		.byte	127
 19746 0393 00       		.byte	0
 19747 0394 00       		.byte	0
 19748 0395 08       		.byte	8
 19749 0396 00       		.byte	0
 19750 0397 00       		.byte	0
 19751 0398 38       		.byte	56
 19752 0399 55       		.byte	85
 19753 039a 54       		.byte	84
 19754 039b 55       		.byte	85
 19755 039c 18       		.byte	24
 19756 039d 7C       		.byte	124
 19757 039e 10       		.byte	16
 19758 039f 20       		.byte	32
 19759 03a0 7B       		.byte	123
 19760 03a1 03       		.byte	3
 19761 03a2 38       		.byte	56
 19762 03a3 54       		.byte	84
 19763 03a4 54       		.byte	84
 19764 03a5 44       		.byte	68
 19765 03a6 20       		.byte	32
 19766 03a7 14       		.byte	20
 19767 03a8 08       		.byte	8
 19768 03a9 22       		.byte	34
 19769 03aa 14       		.byte	20
 19770 03ab 08       		.byte	8
 19771 03ac 20       		.byte	32
 19772 03ad 44       		.byte	68
 19773 03ae 3C       		.byte	60
 19774 03af 02       		.byte	2
 19775 03b0 00       		.byte	0
 19776 03b1 46       		.byte	70
 19777 03b2 49       		.byte	73
 19778 03b3 49       		.byte	73
 19779 03b4 49       		.byte	73
 19780 03b5 31       		.byte	49
 19781 03b6 48       		.byte	72
 19782 03b7 54       		.byte	84
 19783 03b8 54       		.byte	84
 19784 03b9 54       		.byte	84
 19785 03ba 20       		.byte	32
 19786 03bb 00       		.byte	0
 19787 03bc 45       		.byte	69
 19788 03bd 7C       		.byte	124
 19789 03be 41       		.byte	65
 19790 03bf 00       		.byte	0
 19791 03c0 7E       		.byte	126
 19792 03c1 11       		.byte	17
 19793 03c2 11       		.byte	17
 19794 03c3 11       		.byte	17
 19795 03c4 7E       		.byte	126
 19796 03c5 7F       		.byte	127
 19797 03c6 49       		.byte	73
 19798 03c7 49       		.byte	73
 19799 03c8 49       		.byte	73
 19800 03c9 30       		.byte	48
 19801 03ca 7F       		.byte	127
 19802 03cb 49       		.byte	73
 19803 03cc 49       		.byte	73
 19804 03cd 49       		.byte	73
 19805 03ce 36       		.byte	54
 19806 03cf 7F       		.byte	127
 19807 03d0 01       		.byte	1
 19808 03d1 01       		.byte	1
 19809 03d2 01       		.byte	1
 19810 03d3 01       		.byte	1
 19811 03d4 60       		.byte	96
 19812 03d5 3E       		.byte	62
 19813 03d6 21       		.byte	33
 19814 03d7 3F       		.byte	63
 19815 03d8 60       		.byte	96
 19816 03d9 7F       		.byte	127
 19817 03da 49       		.byte	73
 19818 03db 49       		.byte	73
 19819 03dc 49       		.byte	73
 19820 03dd 41       		.byte	65
 19821 03de 67       		.byte	103
 19822 03df 18       		.byte	24
 19823 03e0 7F       		.byte	127
 19824 03e1 18       		.byte	24
 19825 03e2 67       		.byte	103
 19826 03e3 22       		.byte	34
 19827 03e4 41       		.byte	65
 19828 03e5 49       		.byte	73
 19829 03e6 49       		.byte	73
 19830 03e7 36       		.byte	54
 19831 03e8 7F       		.byte	127
 19832 03e9 10       		.byte	16
 19833 03ea 08       		.byte	8
 19834 03eb 04       		.byte	4
 19835 03ec 7F       		.byte	127
 19836 03ed 7F       		.byte	127
 19837 03ee 10       		.byte	16
 19838 03ef 09       		.byte	9
 19839 03f0 04       		.byte	4
 19840 03f1 7F       		.byte	127
 19841 03f2 7F       		.byte	127
 19842 03f3 08       		.byte	8
 19843 03f4 14       		.byte	20
 19844 03f5 22       		.byte	34
 19845 03f6 41       		.byte	65
 19846 03f7 40       		.byte	64
 19847 03f8 3E       		.byte	62
 19848 03f9 01       		.byte	1
 19849 03fa 01       		.byte	1
 19850 03fb 7E       		.byte	126
 19851 03fc 7F       		.byte	127
 19852 03fd 02       		.byte	2
 19853 03fe 04       		.byte	4
 19854 03ff 02       		.byte	2
 19855 0400 7F       		.byte	127
 19856 0401 7F       		.byte	127
 19857 0402 08       		.byte	8
 19858 0403 08       		.byte	8
 19859 0404 08       		.byte	8
 19860 0405 7F       		.byte	127
 19861 0406 3E       		.byte	62
 19862 0407 41       		.byte	65
 19863 0408 41       		.byte	65
 19864 0409 41       		.byte	65
 19865 040a 3E       		.byte	62
 19866 040b 7F       		.byte	127
 19867 040c 01       		.byte	1
 19868 040d 01       		.byte	1
 19869 040e 01       		.byte	1
 19870 040f 7F       		.byte	127
 19871 0410 7F       		.byte	127
 19872 0411 09       		.byte	9
 19873 0412 09       		.byte	9
 19874 0413 09       		.byte	9
 19875 0414 06       		.byte	6
 19876 0415 3E       		.byte	62
 19877 0416 41       		.byte	65
 19878 0417 41       		.byte	65
 19879 0418 41       		.byte	65
 19880 0419 22       		.byte	34
 19881 041a 01       		.byte	1
 19882 041b 01       		.byte	1
 19883 041c 7F       		.byte	127
 19884 041d 01       		.byte	1
 19885 041e 01       		.byte	1
 19886 041f 27       		.byte	39
 19887 0420 48       		.byte	72
 19888 0421 48       		.byte	72
 19889 0422 48       		.byte	72
 19890 0423 3F       		.byte	63
 19891 0424 1E       		.byte	30
 19892 0425 21       		.byte	33
 19893 0426 7F       		.byte	127
 19894 0427 21       		.byte	33
 19895 0428 1E       		.byte	30
 19896 0429 63       		.byte	99
 19897 042a 14       		.byte	20
 19898 042b 08       		.byte	8
 19899 042c 14       		.byte	20
 19900 042d 63       		.byte	99
 19901 042e 3F       		.byte	63
 19902 042f 20       		.byte	32
 19903 0430 20       		.byte	32
 19904 0431 3F       		.byte	63
 19905 0432 40       		.byte	64
 19906 0433 1F       		.byte	31
 19907 0434 10       		.byte	16
 19908 0435 10       		.byte	16
 19909 0436 10       		.byte	16
 19910 0437 7F       		.byte	127
 19911 0438 7F       		.byte	127
 19912 0439 40       		.byte	64
 19913 043a 7F       		.byte	127
 19914 043b 40       		.byte	64
 19915 043c 7F       		.byte	127
 19916 043d 3F       		.byte	63
 19917 043e 20       		.byte	32
 19918 043f 3F       		.byte	63
 19919 0440 20       		.byte	32
 19920 0441 7F       		.byte	127
 19921 0442 01       		.byte	1
 19922 0443 7F       		.byte	127
 19923 0444 44       		.byte	68
 19924 0445 44       		.byte	68
 19925 0446 38       		.byte	56
 19926 0447 7F       		.byte	127
 19927 0448 44       		.byte	68
 19928 0449 7C       		.byte	124
 19929 044a 00       		.byte	0
 19930 044b 7F       		.byte	127
 19931 044c 7F       		.byte	127
 19932 044d 44       		.byte	68
 19933 044e 44       		.byte	68
 19934 044f 44       		.byte	68
 19935 0450 38       		.byte	56
 19936 0451 22       		.byte	34
 19937 0452 41       		.byte	65
 19938 0453 49       		.byte	73
 19939 0454 49       		.byte	73
 19940 0455 3E       		.byte	62
 19941 0456 7F       		.byte	127
 19942 0457 08       		.byte	8
 19943 0458 7F       		.byte	127
 19944 0459 41       		.byte	65
 19945 045a 7F       		.byte	127
 19946 045b 46       		.byte	70
 19947 045c 29       		.byte	41
 19948 045d 19       		.byte	25
 19949 045e 09       		.byte	9
 19950 045f 7F       		.byte	127
 19951 0460 20       		.byte	32
 19952 0461 54       		.byte	84
 19953 0462 54       		.byte	84
 19954 0463 54       		.byte	84
 19955 0464 78       		.byte	120
 19956 0465 3C       		.byte	60
 19957 0466 4A       		.byte	74
 19958 0467 4A       		.byte	74
 19959 0468 4B       		.byte	75
 19960 0469 30       		.byte	48
 19961 046a 7C       		.byte	124
 19962 046b 54       		.byte	84
 19963 046c 54       		.byte	84
 19964 046d 58       		.byte	88
 19965 046e 20       		.byte	32
 19966 046f 7C       		.byte	124
 19967 0470 04       		.byte	4
 19968 0471 04       		.byte	4
 19969 0472 04       		.byte	4
 19970 0473 04       		.byte	4
 19971 0474 60       		.byte	96
 19972 0475 38       		.byte	56
 19973 0476 24       		.byte	36
 19974 0477 3C       		.byte	60
 19975 0478 60       		.byte	96
 19976 0479 38       		.byte	56
 19977 047a 54       		.byte	84
 19978 047b 54       		.byte	84
 19979 047c 54       		.byte	84
 19980 047d 18       		.byte	24
 19981 047e 74       		.byte	116
 19982 047f 08       		.byte	8
 19983 0480 7C       		.byte	124
 19984 0481 08       		.byte	8
 19985 0482 74       		.byte	116
 19986 0483 28       		.byte	40
 19987 0484 44       		.byte	68
 19988 0485 54       		.byte	84
 19989 0486 54       		.byte	84
 19990 0487 28       		.byte	40
 19991 0488 7C       		.byte	124
 19992 0489 20       		.byte	32
 19993 048a 10       		.byte	16
 19994 048b 08       		.byte	8
 19995 048c 7C       		.byte	124
 19996 048d 7C       		.byte	124
 19997 048e 21       		.byte	33
 19998 048f 12       		.byte	18
 19999 0490 09       		.byte	9
 20000 0491 7C       		.byte	124
 20001 0492 7C       		.byte	124
 20002 0493 10       		.byte	16
 20003 0494 10       		.byte	16
 20004 0495 28       		.byte	40
 20005 0496 44       		.byte	68
 20006 0497 40       		.byte	64
 20007 0498 78       		.byte	120
 20008 0499 04       		.byte	4
 20009 049a 04       		.byte	4
 20010 049b 7C       		.byte	124
 20011 049c 7C       		.byte	124
 20012 049d 08       		.byte	8
 20013 049e 10       		.byte	16
 20014 049f 08       		.byte	8
 20015 04a0 7C       		.byte	124
 20016 04a1 7C       		.byte	124
 20017 04a2 10       		.byte	16
 20018 04a3 10       		.byte	16
 20019 04a4 10       		.byte	16
 20020 04a5 7C       		.byte	124
 20021 04a6 38       		.byte	56
 20022 04a7 44       		.byte	68
 20023 04a8 44       		.byte	68
 20024 04a9 44       		.byte	68
 20025 04aa 38       		.byte	56
 20026 04ab 7C       		.byte	124
 20027 04ac 04       		.byte	4
 20028 04ad 04       		.byte	4
 20029 04ae 04       		.byte	4
 20030 04af 7C       		.byte	124
 20031 04b0 7C       		.byte	124
 20032 04b1 14       		.byte	20
 20033 04b2 14       		.byte	20
 20034 04b3 14       		.byte	20
 20035 04b4 08       		.byte	8
 20036 04b5 38       		.byte	56
 20037 04b6 44       		.byte	68
 20038 04b7 44       		.byte	68
 20039 04b8 44       		.byte	68
 20040 04b9 28       		.byte	40
 20041 04ba 04       		.byte	4
 20042 04bb 04       		.byte	4
 20043 04bc 7C       		.byte	124
 20044 04bd 04       		.byte	4
 20045 04be 04       		.byte	4
 20046 04bf 0C       		.byte	12
 20047 04c0 50       		.byte	80
 20048 04c1 50       		.byte	80
 20049 04c2 50       		.byte	80
 20050 04c3 3C       		.byte	60
 20051 04c4 18       		.byte	24
 20052 04c5 24       		.byte	36
 20053 04c6 7C       		.byte	124
 20054 04c7 24       		.byte	36
 20055 04c8 18       		.byte	24
 20056 04c9 44       		.byte	68
 20057 04ca 28       		.byte	40
 20058 04cb 10       		.byte	16
 20059 04cc 28       		.byte	40
 20060 04cd 44       		.byte	68
 20061 04ce 3C       		.byte	60
 20062 04cf 20       		.byte	32
 20063 04d0 20       		.byte	32
 20064 04d1 3C       		.byte	60
 20065 04d2 40       		.byte	64
 20066 04d3 1C       		.byte	28
 20067 04d4 20       		.byte	32
 20068 04d5 20       		.byte	32
 20069 04d6 20       		.byte	32
 20070 04d7 7C       		.byte	124
 20071 04d8 7C       		.byte	124
 20072 04d9 40       		.byte	64
 20073 04da 7C       		.byte	124
 20074 04db 40       		.byte	64
 20075 04dc 7C       		.byte	124
 20076 04dd 3C       		.byte	60
 20077 04de 20       		.byte	32
 20078 04df 3C       		.byte	60
 20079 04e0 20       		.byte	32
 20080 04e1 7C       		.byte	124
 20081 04e2 04       		.byte	4
 20082 04e3 7C       		.byte	124
 20083 04e4 48       		.byte	72
 20084 04e5 48       		.byte	72
 20085 04e6 30       		.byte	48
 20086 04e7 7C       		.byte	124
 20087 04e8 48       		.byte	72
 20088 04e9 48       		.byte	72
 20089 04ea 30       		.byte	48
 20090 04eb 7C       		.byte	124
 20091 04ec 7C       		.byte	124
 20092 04ed 48       		.byte	72
 20093 04ee 48       		.byte	72
 20094 04ef 48       		.byte	72
 20095 04f0 30       		.byte	48
 20096 04f1 28       		.byte	40
 20097 04f2 44       		.byte	68
 20098 04f3 54       		.byte	84
 20099 04f4 54       		.byte	84
 20100 04f5 38       		.byte	56
 20101 04f6 7C       		.byte	124
 20102 04f7 38       		.byte	56
 20103 04f8 44       		.byte	68
 20104 04f9 44       		.byte	68
 20105 04fa 38       		.byte	56
 20106 04fb 48       		.byte	72
 20107 04fc 34       		.byte	52
 20108 04fd 14       		.byte	20
 20109 04fe 14       		.byte	20
 20110 04ff 7C       		.byte	124
 20111              		.section	.rodata.fnt_libera_24x14_bits,"a",%progbits
 20112              		.align	2
 20115              	fnt_libera_24x14_bits:
 20116 0000 00       		.byte	0
 20117 0001 00       		.byte	0
 20118 0002 00       		.byte	0
 20119 0003 00       		.byte	0
 20120 0004 FE       		.byte	-2
 20121 0005 01       		.byte	1
 20122 0006 80       		.byte	-128
 20123 0007 FF       		.byte	-1
 20124 0008 07       		.byte	7
 20125 0009 C0       		.byte	-64
 20126 000a FF       		.byte	-1
 20127 000b 0F       		.byte	15
 20128 000c E0       		.byte	-32
 20129 000d 01       		.byte	1
 20130 000e 1E       		.byte	30
 20131 000f 60       		.byte	96
 20132 0010 00       		.byte	0
 20133 0011 18       		.byte	24
 20134 0012 60       		.byte	96
 20135 0013 00       		.byte	0
 20136 0014 18       		.byte	24
 20137 0015 60       		.byte	96
 20138 0016 00       		.byte	0
 20139 0017 18       		.byte	24
 20140 0018 E0       		.byte	-32
 20141 0019 01       		.byte	1
 20142 001a 1E       		.byte	30
 20143 001b C0       		.byte	-64
 20144 001c FF       		.byte	-1
 20145 001d 0F       		.byte	15
 20146 001e 80       		.byte	-128
 20147 001f FF       		.byte	-1
 20148 0020 07       		.byte	7
 20149 0021 00       		.byte	0
 20150 0022 FE       		.byte	-2
 20151 0023 01       		.byte	1
 20152 0024 00       		.byte	0
 20153 0025 00       		.byte	0
 20154 0026 00       		.byte	0
 20155 0027 00       		.byte	0
 20156 0028 00       		.byte	0
 20157 0029 00       		.byte	0
 20158 002a 00       		.byte	0
 20159 002b 00       		.byte	0
 20160 002c 00       		.byte	0
 20161 002d 00       		.byte	0
 20162 002e 00       		.byte	0
 20163 002f 00       		.byte	0
 20164 0030 00       		.byte	0
 20165 0031 03       		.byte	3
 20166 0032 00       		.byte	0
 20167 0033 00       		.byte	0
 20168 0034 03       		.byte	3
 20169 0035 18       		.byte	24
 20170 0036 80       		.byte	-128
 20171 0037 03       		.byte	3
 20172 0038 18       		.byte	24
 20173 0039 80       		.byte	-128
 20174 003a 01       		.byte	1
 20175 003b 18       		.byte	24
 20176 003c C0       		.byte	-64
 20177 003d 01       		.byte	1
 20178 003e 18       		.byte	24
 20179 003f E0       		.byte	-32
 20180 0040 FF       		.byte	-1
 20181 0041 1F       		.byte	31
 20182 0042 E0       		.byte	-32
 20183 0043 FF       		.byte	-1
 20184 0044 1F       		.byte	31
 20185 0045 E0       		.byte	-32
 20186 0046 FF       		.byte	-1
 20187 0047 1F       		.byte	31
 20188 0048 00       		.byte	0
 20189 0049 00       		.byte	0
 20190 004a 18       		.byte	24
 20191 004b 00       		.byte	0
 20192 004c 00       		.byte	0
 20193 004d 18       		.byte	24
 20194 004e 00       		.byte	0
 20195 004f 00       		.byte	0
 20196 0050 18       		.byte	24
 20197 0051 00       		.byte	0
 20198 0052 00       		.byte	0
 20199 0053 00       		.byte	0
 20200 0054 00       		.byte	0
 20201 0055 00       		.byte	0
 20202 0056 00       		.byte	0
 20203 0057 00       		.byte	0
 20204 0058 01       		.byte	1
 20205 0059 1C       		.byte	28
 20206 005a C0       		.byte	-64
 20207 005b 01       		.byte	1
 20208 005c 1E       		.byte	30
 20209 005d C0       		.byte	-64
 20210 005e 01       		.byte	1
 20211 005f 1F       		.byte	31
 20212 0060 E0       		.byte	-32
 20213 0061 81       		.byte	-127
 20214 0062 1F       		.byte	31
 20215 0063 60       		.byte	96
 20216 0064 C0       		.byte	-64
 20217 0065 1B       		.byte	27
 20218 0066 60       		.byte	96
 20219 0067 E0       		.byte	-32
 20220 0068 19       		.byte	25
 20221 0069 60       		.byte	96
 20222 006a F0       		.byte	-16
 20223 006b 18       		.byte	24
 20224 006c E0       		.byte	-32
 20225 006d 7C       		.byte	124
 20226 006e 18       		.byte	24
 20227 006f C0       		.byte	-64
 20228 0070 3F       		.byte	63
 20229 0071 18       		.byte	24
 20230 0072 C0       		.byte	-64
 20231 0073 1F       		.byte	31
 20232 0074 18       		.byte	24
 20233 0075 80       		.byte	-128
 20234 0076 0F       		.byte	15
 20235 0077 18       		.byte	24
 20236 0078 00       		.byte	0
 20237 0079 00       		.byte	0
 20238 007a 00       		.byte	0
 20239 007b 00       		.byte	0
 20240 007c 00       		.byte	0
 20241 007d 00       		.byte	0
 20242 007e 00       		.byte	0
 20243 007f 00       		.byte	0
 20244 0080 00       		.byte	0
 20245 0081 00       		.byte	0
 20246 0082 01       		.byte	1
 20247 0083 06       		.byte	6
 20248 0084 C0       		.byte	-64
 20249 0085 01       		.byte	1
 20250 0086 0E       		.byte	14
 20251 0087 C0       		.byte	-64
 20252 0088 01       		.byte	1
 20253 0089 0E       		.byte	14
 20254 008a E0       		.byte	-32
 20255 008b 00       		.byte	0
 20256 008c 1C       		.byte	28
 20257 008d 60       		.byte	96
 20258 008e 30       		.byte	48
 20259 008f 18       		.byte	24
 20260 0090 60       		.byte	96
 20261 0091 30       		.byte	48
 20262 0092 18       		.byte	24
 20263 0093 60       		.byte	96
 20264 0094 30       		.byte	48
 20265 0095 18       		.byte	24
 20266 0096 E0       		.byte	-32
 20267 0097 38       		.byte	56
 20268 0098 18       		.byte	24
 20269 0099 C0       		.byte	-64
 20270 009a 7F       		.byte	127
 20271 009b 1C       		.byte	28
 20272 009c C0       		.byte	-64
 20273 009d EF       		.byte	-17
 20274 009e 0F       		.byte	15
 20275 009f 80       		.byte	-128
 20276 00a0 C7       		.byte	-57
 20277 00a1 0F       		.byte	15
 20278 00a2 00       		.byte	0
 20279 00a3 80       		.byte	-128
 20280 00a4 07       		.byte	7
 20281 00a5 00       		.byte	0
 20282 00a6 00       		.byte	0
 20283 00a7 00       		.byte	0
 20284 00a8 00       		.byte	0
 20285 00a9 00       		.byte	0
 20286 00aa 00       		.byte	0
 20287 00ab 00       		.byte	0
 20288 00ac C0       		.byte	-64
 20289 00ad 01       		.byte	1
 20290 00ae 00       		.byte	0
 20291 00af E0       		.byte	-32
 20292 00b0 01       		.byte	1
 20293 00b1 00       		.byte	0
 20294 00b2 F0       		.byte	-16
 20295 00b3 01       		.byte	1
 20296 00b4 00       		.byte	0
 20297 00b5 BC       		.byte	-68
 20298 00b6 01       		.byte	1
 20299 00b7 00       		.byte	0
 20300 00b8 9E       		.byte	-98
 20301 00b9 01       		.byte	1
 20302 00ba 00       		.byte	0
 20303 00bb 8F       		.byte	-113
 20304 00bc 01       		.byte	1
 20305 00bd C0       		.byte	-64
 20306 00be 83       		.byte	-125
 20307 00bf 01       		.byte	1
 20308 00c0 E0       		.byte	-32
 20309 00c1 81       		.byte	-127
 20310 00c2 01       		.byte	1
 20311 00c3 E0       		.byte	-32
 20312 00c4 FF       		.byte	-1
 20313 00c5 1F       		.byte	31
 20314 00c6 E0       		.byte	-32
 20315 00c7 FF       		.byte	-1
 20316 00c8 1F       		.byte	31
 20317 00c9 E0       		.byte	-32
 20318 00ca FF       		.byte	-1
 20319 00cb 1F       		.byte	31
 20320 00cc 00       		.byte	0
 20321 00cd 80       		.byte	-128
 20322 00ce 01       		.byte	1
 20323 00cf 00       		.byte	0
 20324 00d0 80       		.byte	-128
 20325 00d1 01       		.byte	1
 20326 00d2 00       		.byte	0
 20327 00d3 00       		.byte	0
 20328 00d4 00       		.byte	0
 20329 00d5 00       		.byte	0
 20330 00d6 00       		.byte	0
 20331 00d7 02       		.byte	2
 20332 00d8 E0       		.byte	-32
 20333 00d9 1F       		.byte	31
 20334 00da 06       		.byte	6
 20335 00db E0       		.byte	-32
 20336 00dc 1F       		.byte	31
 20337 00dd 0E       		.byte	14
 20338 00de E0       		.byte	-32
 20339 00df 1F       		.byte	31
 20340 00e0 1E       		.byte	30
 20341 00e1 60       		.byte	96
 20342 00e2 18       		.byte	24
 20343 00e3 1C       		.byte	28
 20344 00e4 60       		.byte	96
 20345 00e5 0C       		.byte	12
 20346 00e6 18       		.byte	24
 20347 00e7 60       		.byte	96
 20348 00e8 0C       		.byte	12
 20349 00e9 18       		.byte	24
 20350 00ea 60       		.byte	96
 20351 00eb 0C       		.byte	12
 20352 00ec 18       		.byte	24
 20353 00ed 60       		.byte	96
 20354 00ee 1C       		.byte	28
 20355 00ef 1C       		.byte	28
 20356 00f0 60       		.byte	96
 20357 00f1 F8       		.byte	-8
 20358 00f2 0F       		.byte	15
 20359 00f3 60       		.byte	96
 20360 00f4 F8       		.byte	-8
 20361 00f5 07       		.byte	7
 20362 00f6 00       		.byte	0
 20363 00f7 E0       		.byte	-32
 20364 00f8 03       		.byte	3
 20365 00f9 00       		.byte	0
 20366 00fa 00       		.byte	0
 20367 00fb 00       		.byte	0
 20368 00fc 00       		.byte	0
 20369 00fd 00       		.byte	0
 20370 00fe 00       		.byte	0
 20371 00ff 00       		.byte	0
 20372 0100 FE       		.byte	-2
 20373 0101 01       		.byte	1
 20374 0102 80       		.byte	-128
 20375 0103 FF       		.byte	-1
 20376 0104 07       		.byte	7
 20377 0105 C0       		.byte	-64
 20378 0106 FF       		.byte	-1
 20379 0107 0F       		.byte	15
 20380 0108 E0       		.byte	-32
 20381 0109 31       		.byte	49
 20382 010a 1C       		.byte	28
 20383 010b 60       		.byte	96
 20384 010c 18       		.byte	24
 20385 010d 18       		.byte	24
 20386 010e 60       		.byte	96
 20387 010f 18       		.byte	24
 20388 0110 18       		.byte	24
 20389 0111 60       		.byte	96
 20390 0112 18       		.byte	24
 20391 0113 18       		.byte	24
 20392 0114 E0       		.byte	-32
 20393 0115 38       		.byte	56
 20394 0116 1C       		.byte	28
 20395 0117 C0       		.byte	-64
 20396 0118 F9       		.byte	-7
 20397 0119 0F       		.byte	15
 20398 011a 80       		.byte	-128
 20399 011b F1       		.byte	-15
 20400 011c 0F       		.byte	15
 20401 011d 00       		.byte	0
 20402 011e E1       		.byte	-31
 20403 011f 03       		.byte	3
 20404 0120 00       		.byte	0
 20405 0121 00       		.byte	0
 20406 0122 00       		.byte	0
 20407 0123 00       		.byte	0
 20408 0124 00       		.byte	0
 20409 0125 00       		.byte	0
 20410 0126 00       		.byte	0
 20411 0127 00       		.byte	0
 20412 0128 00       		.byte	0
 20413 0129 00       		.byte	0
 20414 012a 00       		.byte	0
 20415 012b 00       		.byte	0
 20416 012c 60       		.byte	96
 20417 012d 00       		.byte	0
 20418 012e 00       		.byte	0
 20419 012f 60       		.byte	96
 20420 0130 00       		.byte	0
 20421 0131 00       		.byte	0
 20422 0132 60       		.byte	96
 20423 0133 00       		.byte	0
 20424 0134 00       		.byte	0
 20425 0135 60       		.byte	96
 20426 0136 00       		.byte	0
 20427 0137 1E       		.byte	30
 20428 0138 60       		.byte	96
 20429 0139 C0       		.byte	-64
 20430 013a 1F       		.byte	31
 20431 013b 60       		.byte	96
 20432 013c F8       		.byte	-8
 20433 013d 1F       		.byte	31
 20434 013e 60       		.byte	96
 20435 013f FC       		.byte	-4
 20436 0140 01       		.byte	1
 20437 0141 60       		.byte	96
 20438 0142 3F       		.byte	63
 20439 0143 00       		.byte	0
 20440 0144 E0       		.byte	-32
 20441 0145 07       		.byte	7
 20442 0146 00       		.byte	0
 20443 0147 E0       		.byte	-32
 20444 0148 01       		.byte	1
 20445 0149 00       		.byte	0
 20446 014a E0       		.byte	-32
 20447 014b 00       		.byte	0
 20448 014c 00       		.byte	0
 20449 014d 00       		.byte	0
 20450 014e 00       		.byte	0
 20451 014f 00       		.byte	0
 20452 0150 00       		.byte	0
 20453 0151 00       		.byte	0
 20454 0152 00       		.byte	0
 20455 0153 00       		.byte	0
 20456 0154 C0       		.byte	-64
 20457 0155 03       		.byte	3
 20458 0156 80       		.byte	-128
 20459 0157 E7       		.byte	-25
 20460 0158 0F       		.byte	15
 20461 0159 C0       		.byte	-64
 20462 015a FF       		.byte	-1
 20463 015b 0F       		.byte	15
 20464 015c E0       		.byte	-32
 20465 015d 3F       		.byte	63
 20466 015e 1C       		.byte	28
 20467 015f E0       		.byte	-32
 20468 0160 1C       		.byte	28
 20469 0161 18       		.byte	24
 20470 0162 60       		.byte	96
 20471 0163 18       		.byte	24
 20472 0164 18       		.byte	24
 20473 0165 60       		.byte	96
 20474 0166 18       		.byte	24
 20475 0167 18       		.byte	24
 20476 0168 E0       		.byte	-32
 20477 0169 1C       		.byte	28
 20478 016a 18       		.byte	24
 20479 016b E0       		.byte	-32
 20480 016c 3F       		.byte	63
 20481 016d 1C       		.byte	28
 20482 016e C0       		.byte	-64
 20483 016f FF       		.byte	-1
 20484 0170 0F       		.byte	15
 20485 0171 80       		.byte	-128
 20486 0172 E7       		.byte	-25
 20487 0173 0F       		.byte	15
 20488 0174 00       		.byte	0
 20489 0175 C0       		.byte	-64
 20490 0176 03       		.byte	3
 20491 0177 00       		.byte	0
 20492 0178 00       		.byte	0
 20493 0179 00       		.byte	0
 20494 017a 00       		.byte	0
 20495 017b 00       		.byte	0
 20496 017c 00       		.byte	0
 20497 017d 00       		.byte	0
 20498 017e 0F       		.byte	15
 20499 017f 02       		.byte	2
 20500 0180 C0       		.byte	-64
 20501 0181 3F       		.byte	63
 20502 0182 0E       		.byte	14
 20503 0183 C0       		.byte	-64
 20504 0184 3F       		.byte	63
 20505 0185 0E       		.byte	14
 20506 0186 E0       		.byte	-32
 20507 0187 70       		.byte	112
 20508 0188 1C       		.byte	28
 20509 0189 60       		.byte	96
 20510 018a 60       		.byte	96
 20511 018b 18       		.byte	24
 20512 018c 60       		.byte	96
 20513 018d 60       		.byte	96
 20514 018e 18       		.byte	24
 20515 018f 60       		.byte	96
 20516 0190 60       		.byte	96
 20517 0191 18       		.byte	24
 20518 0192 60       		.byte	96
 20519 0193 60       		.byte	96
 20520 0194 1C       		.byte	28
 20521 0195 E0       		.byte	-32
 20522 0196 30       		.byte	48
 20523 0197 0E       		.byte	14
 20524 0198 C0       		.byte	-64
 20525 0199 FF       		.byte	-1
 20526 019a 0F       		.byte	15
 20527 019b 80       		.byte	-128
 20528 019c FF       		.byte	-1
 20529 019d 07       		.byte	7
 20530 019e 00       		.byte	0
 20531 019f FE       		.byte	-2
 20532 01a0 01       		.byte	1
 20533 01a1 00       		.byte	0
 20534 01a2 00       		.byte	0
 20535 01a3 00       		.byte	0
 20536 01a4 00       		.byte	0
 20537 01a5 00       		.byte	0
 20538 01a6 00       		.byte	0
 20539 01a7 00       		.byte	0
 20540 01a8 00       		.byte	0
 20541 01a9 00       		.byte	0
 20542 01aa 00       		.byte	0
 20543 01ab 00       		.byte	0
 20544 01ac 00       		.byte	0
 20545 01ad E0       		.byte	-32
 20546 01ae 04       		.byte	4
 20547 01af 00       		.byte	0
 20548 01b0 C0       		.byte	-64
 20549 01b1 06       		.byte	6
 20550 01b2 00       		.byte	0
 20551 01b3 C0       		.byte	-64
 20552 01b4 0F       		.byte	15
 20553 01b5 00       		.byte	0
 20554 01b6 F8       		.byte	-8
 20555 01b7 03       		.byte	3
 20556 01b8 00       		.byte	0
 20557 01b9 F8       		.byte	-8
 20558 01ba 01       		.byte	1
 20559 01bb 00       		.byte	0
 20560 01bc F8       		.byte	-8
 20561 01bd 03       		.byte	3
 20562 01be 00       		.byte	0
 20563 01bf C0       		.byte	-64
 20564 01c0 0F       		.byte	15
 20565 01c1 00       		.byte	0
 20566 01c2 C0       		.byte	-64
 20567 01c3 06       		.byte	6
 20568 01c4 00       		.byte	0
 20569 01c5 E0       		.byte	-32
 20570 01c6 04       		.byte	4
 20571 01c7 00       		.byte	0
 20572 01c8 00       		.byte	0
 20573 01c9 00       		.byte	0
 20574 01ca 00       		.byte	0
 20575 01cb 00       		.byte	0
 20576 01cc 00       		.byte	0
 20577 01cd 00       		.byte	0
 20578 01ce 00       		.byte	0
 20579 01cf 00       		.byte	0
 20580 01d0 00       		.byte	0
 20581 01d1 00       		.byte	0
 20582 01d2 80       		.byte	-128
 20583 01d3 01       		.byte	1
 20584 01d4 00       		.byte	0
 20585 01d5 86       		.byte	-122
 20586 01d6 01       		.byte	1
 20587 01d7 00       		.byte	0
 20588 01d8 86       		.byte	-122
 20589 01d9 1F       		.byte	31
 20590 01da 00       		.byte	0
 20591 01db FE       		.byte	-2
 20592 01dc 0F       		.byte	15
 20593 01dd C0       		.byte	-64
 20594 01de FF       		.byte	-1
 20595 01df 01       		.byte	1
 20596 01e0 E0       		.byte	-32
 20597 01e1 87       		.byte	-121
 20598 01e2 01       		.byte	1
 20599 01e3 00       		.byte	0
 20600 01e4 86       		.byte	-122
 20601 01e5 01       		.byte	1
 20602 01e6 00       		.byte	0
 20603 01e7 86       		.byte	-122
 20604 01e8 1F       		.byte	31
 20605 01e9 00       		.byte	0
 20606 01ea FE       		.byte	-2
 20607 01eb 0F       		.byte	15
 20608 01ec C0       		.byte	-64
 20609 01ed FF       		.byte	-1
 20610 01ee 01       		.byte	1
 20611 01ef E0       		.byte	-32
 20612 01f0 87       		.byte	-121
 20613 01f1 01       		.byte	1
 20614 01f2 00       		.byte	0
 20615 01f3 86       		.byte	-122
 20616 01f4 01       		.byte	1
 20617 01f5 00       		.byte	0
 20618 01f6 06       		.byte	6
 20619 01f7 00       		.byte	0
 20620 01f8 00       		.byte	0
 20621 01f9 00       		.byte	0
 20622 01fa 00       		.byte	0
 20623 01fb 00       		.byte	0
 20624 01fc 00       		.byte	0
 20625 01fd 00       		.byte	0
 20626 01fe 00       		.byte	0
 20627 01ff 00       		.byte	0
 20628 0200 00       		.byte	0
 20629 0201 00       		.byte	0
 20630 0202 00       		.byte	0
 20631 0203 00       		.byte	0
 20632 0204 00       		.byte	0
 20633 0205 00       		.byte	0
 20634 0206 00       		.byte	0
 20635 0207 00       		.byte	0
 20636 0208 00       		.byte	0
 20637 0209 00       		.byte	0
 20638 020a 00       		.byte	0
 20639 020b 07       		.byte	7
 20640 020c 1C       		.byte	28
 20641 020d 00       		.byte	0
 20642 020e 07       		.byte	7
 20643 020f 1C       		.byte	28
 20644 0210 00       		.byte	0
 20645 0211 07       		.byte	7
 20646 0212 1C       		.byte	28
 20647 0213 00       		.byte	0
 20648 0214 00       		.byte	0
 20649 0215 00       		.byte	0
 20650 0216 00       		.byte	0
 20651 0217 00       		.byte	0
 20652 0218 00       		.byte	0
 20653 0219 00       		.byte	0
 20654 021a 00       		.byte	0
 20655 021b 00       		.byte	0
 20656 021c 00       		.byte	0
 20657 021d 00       		.byte	0
 20658 021e 00       		.byte	0
 20659 021f 00       		.byte	0
 20660 0220 00       		.byte	0
 20661 0221 00       		.byte	0
 20662 0222 00       		.byte	0
 20663 0223 00       		.byte	0
 20664 0224 00       		.byte	0
 20665 0225 00       		.byte	0
 20666 0226 30       		.byte	48
 20667 0227 00       		.byte	0
 20668 0228 00       		.byte	0
 20669 0229 30       		.byte	48
 20670 022a 00       		.byte	0
 20671 022b 00       		.byte	0
 20672 022c 30       		.byte	48
 20673 022d 00       		.byte	0
 20674 022e 00       		.byte	0
 20675 022f 30       		.byte	48
 20676 0230 00       		.byte	0
 20677 0231 80       		.byte	-128
 20678 0232 FF       		.byte	-1
 20679 0233 07       		.byte	7
 20680 0234 80       		.byte	-128
 20681 0235 FF       		.byte	-1
 20682 0236 07       		.byte	7
 20683 0237 80       		.byte	-128
 20684 0238 FF       		.byte	-1
 20685 0239 07       		.byte	7
 20686 023a 00       		.byte	0
 20687 023b 30       		.byte	48
 20688 023c 00       		.byte	0
 20689 023d 00       		.byte	0
 20690 023e 30       		.byte	48
 20691 023f 00       		.byte	0
 20692 0240 00       		.byte	0
 20693 0241 30       		.byte	48
 20694 0242 00       		.byte	0
 20695 0243 00       		.byte	0
 20696 0244 30       		.byte	48
 20697 0245 00       		.byte	0
 20698 0246 00       		.byte	0
 20699 0247 30       		.byte	48
 20700 0248 00       		.byte	0
 20701 0249 00       		.byte	0
 20702 024a 00       		.byte	0
 20703 024b 00       		.byte	0
 20704 024c 00       		.byte	0
 20705 024d 00       		.byte	0
 20706 024e 00       		.byte	0
 20707 024f 00       		.byte	0
 20708 0250 00       		.byte	0
 20709 0251 00       		.byte	0
 20710 0252 00       		.byte	0
 20711 0253 00       		.byte	0
 20712 0254 00       		.byte	0
 20713 0255 00       		.byte	0
 20714 0256 00       		.byte	0
 20715 0257 00       		.byte	0
 20716 0258 00       		.byte	0
 20717 0259 E0       		.byte	-32
 20718 025a 00       		.byte	0
 20719 025b 00       		.byte	0
 20720 025c E0       		.byte	-32
 20721 025d 00       		.byte	0
 20722 025e 00       		.byte	0
 20723 025f E0       		.byte	-32
 20724 0260 00       		.byte	0
 20725 0261 00       		.byte	0
 20726 0262 E0       		.byte	-32
 20727 0263 00       		.byte	0
 20728 0264 00       		.byte	0
 20729 0265 E0       		.byte	-32
 20730 0266 00       		.byte	0
 20731 0267 00       		.byte	0
 20732 0268 E0       		.byte	-32
 20733 0269 00       		.byte	0
 20734 026a 00       		.byte	0
 20735 026b E0       		.byte	-32
 20736 026c 00       		.byte	0
 20737 026d 00       		.byte	0
 20738 026e 00       		.byte	0
 20739 026f 00       		.byte	0
 20740 0270 00       		.byte	0
 20741 0271 00       		.byte	0
 20742 0272 00       		.byte	0
 20743 0273 00       		.byte	0
 20744 0274 00       		.byte	0
 20745 0275 00       		.byte	0
 20746 0276 00       		.byte	0
 20747 0277 00       		.byte	0
 20748 0278 18       		.byte	24
 20749 0279 00       		.byte	0
 20750 027a 00       		.byte	0
 20751 027b 1E       		.byte	30
 20752 027c 00       		.byte	0
 20753 027d C0       		.byte	-64
 20754 027e 1F       		.byte	31
 20755 027f 00       		.byte	0
 20756 0280 F8       		.byte	-8
 20757 0281 1F       		.byte	31
 20758 0282 00       		.byte	0
 20759 0283 FF       		.byte	-1
 20760 0284 01       		.byte	1
 20761 0285 E0       		.byte	-32
 20762 0286 BF       		.byte	-65
 20763 0287 01       		.byte	1
 20764 0288 E0       		.byte	-32
 20765 0289 83       		.byte	-125
 20766 028a 01       		.byte	1
 20767 028b E0       		.byte	-32
 20768 028c 81       		.byte	-127
 20769 028d 01       		.byte	1
 20770 028e E0       		.byte	-32
 20771 028f 9F       		.byte	-97
 20772 0290 01       		.byte	1
 20773 0291 C0       		.byte	-64
 20774 0292 FF       		.byte	-1
 20775 0293 01       		.byte	1
 20776 0294 00       		.byte	0
 20777 0295 FE       		.byte	-2
 20778 0296 07       		.byte	7
 20779 0297 00       		.byte	0
 20780 0298 F0       		.byte	-16
 20781 0299 1F       		.byte	31
 20782 029a 00       		.byte	0
 20783 029b 80       		.byte	-128
 20784 029c 1F       		.byte	31
 20785 029d 00       		.byte	0
 20786 029e 00       		.byte	0
 20787 029f 1C       		.byte	28
 20788 02a0 00       		.byte	0
 20789 02a1 00       		.byte	0
 20790 02a2 00       		.byte	0
 20791 02a3 00       		.byte	0
 20792 02a4 00       		.byte	0
 20793 02a5 00       		.byte	0
 20794 02a6 E0       		.byte	-32
 20795 02a7 FF       		.byte	-1
 20796 02a8 1F       		.byte	31
 20797 02a9 E0       		.byte	-32
 20798 02aa FF       		.byte	-1
 20799 02ab 1F       		.byte	31
 20800 02ac E0       		.byte	-32
 20801 02ad FF       		.byte	-1
 20802 02ae 1F       		.byte	31
 20803 02af 60       		.byte	96
 20804 02b0 30       		.byte	48
 20805 02b1 18       		.byte	24
 20806 02b2 60       		.byte	96
 20807 02b3 30       		.byte	48
 20808 02b4 18       		.byte	24
 20809 02b5 60       		.byte	96
 20810 02b6 30       		.byte	48
 20811 02b7 18       		.byte	24
 20812 02b8 60       		.byte	96
 20813 02b9 30       		.byte	48
 20814 02ba 18       		.byte	24
 20815 02bb E0       		.byte	-32
 20816 02bc 38       		.byte	56
 20817 02bd 18       		.byte	24
 20818 02be E0       		.byte	-32
 20819 02bf 7F       		.byte	127
 20820 02c0 1C       		.byte	28
 20821 02c1 C0       		.byte	-64
 20822 02c2 EF       		.byte	-17
 20823 02c3 0F       		.byte	15
 20824 02c4 80       		.byte	-128
 20825 02c5 C7       		.byte	-57
 20826 02c6 0F       		.byte	15
 20827 02c7 00       		.byte	0
 20828 02c8 80       		.byte	-128
 20829 02c9 07       		.byte	7
 20830 02ca 00       		.byte	0
 20831 02cb 00       		.byte	0
 20832 02cc 00       		.byte	0
 20833 02cd 00       		.byte	0
 20834 02ce FE       		.byte	-2
 20835 02cf 01       		.byte	1
 20836 02d0 80       		.byte	-128
 20837 02d1 FF       		.byte	-1
 20838 02d2 07       		.byte	7
 20839 02d3 C0       		.byte	-64
 20840 02d4 FF       		.byte	-1
 20841 02d5 0F       		.byte	15
 20842 02d6 C0       		.byte	-64
 20843 02d7 01       		.byte	1
 20844 02d8 0E       		.byte	14
 20845 02d9 E0       		.byte	-32
 20846 02da 00       		.byte	0
 20847 02db 1C       		.byte	28
 20848 02dc 60       		.byte	96
 20849 02dd 00       		.byte	0
 20850 02de 18       		.byte	24
 20851 02df 60       		.byte	96
 20852 02e0 00       		.byte	0
 20853 02e1 18       		.byte	24
 20854 02e2 E0       		.byte	-32
 20855 02e3 00       		.byte	0
 20856 02e4 18       		.byte	24
 20857 02e5 E0       		.byte	-32
 20858 02e6 01       		.byte	1
 20859 02e7 1E       		.byte	30
 20860 02e8 C0       		.byte	-64
 20861 02e9 03       		.byte	3
 20862 02ea 0F       		.byte	15
 20863 02eb 80       		.byte	-128
 20864 02ec 03       		.byte	3
 20865 02ed 0F       		.byte	15
 20866 02ee 00       		.byte	0
 20867 02ef 03       		.byte	3
 20868 02f0 03       		.byte	3
 20869 02f1 00       		.byte	0
 20870 02f2 00       		.byte	0
 20871 02f3 00       		.byte	0
 20872 02f4 00       		.byte	0
 20873 02f5 00       		.byte	0
 20874 02f6 00       		.byte	0
 20875 02f7 00       		.byte	0
 20876 02f8 00       		.byte	0
 20877 02f9 00       		.byte	0
 20878 02fa E0       		.byte	-32
 20879 02fb FF       		.byte	-1
 20880 02fc 1F       		.byte	31
 20881 02fd E0       		.byte	-32
 20882 02fe FF       		.byte	-1
 20883 02ff 1F       		.byte	31
 20884 0300 E0       		.byte	-32
 20885 0301 FF       		.byte	-1
 20886 0302 1F       		.byte	31
 20887 0303 60       		.byte	96
 20888 0304 00       		.byte	0
 20889 0305 18       		.byte	24
 20890 0306 60       		.byte	96
 20891 0307 00       		.byte	0
 20892 0308 18       		.byte	24
 20893 0309 60       		.byte	96
 20894 030a 00       		.byte	0
 20895 030b 18       		.byte	24
 20896 030c E0       		.byte	-32
 20897 030d 00       		.byte	0
 20898 030e 18       		.byte	24
 20899 030f E0       		.byte	-32
 20900 0310 00       		.byte	0
 20901 0311 1C       		.byte	28
 20902 0312 C0       		.byte	-64
 20903 0313 03       		.byte	3
 20904 0314 0F       		.byte	15
 20905 0315 C0       		.byte	-64
 20906 0316 FF       		.byte	-1
 20907 0317 0F       		.byte	15
 20908 0318 80       		.byte	-128
 20909 0319 FF       		.byte	-1
 20910 031a 07       		.byte	7
 20911 031b 00       		.byte	0
 20912 031c FE       		.byte	-2
 20913 031d 00       		.byte	0
 20914 031e 00       		.byte	0
 20915 031f 00       		.byte	0
 20916 0320 00       		.byte	0
 20917 0321 00       		.byte	0
 20918 0322 00       		.byte	0
 20919 0323 00       		.byte	0
 20920 0324 00       		.byte	0
 20921 0325 00       		.byte	0
 20922 0326 00       		.byte	0
 20923 0327 C0       		.byte	-64
 20924 0328 03       		.byte	3
 20925 0329 00       		.byte	0
 20926 032a E0       		.byte	-32
 20927 032b 07       		.byte	7
 20928 032c 00       		.byte	0
 20929 032d 70       		.byte	112
 20930 032e 0E       		.byte	14
 20931 032f 00       		.byte	0
 20932 0330 30       		.byte	48
 20933 0331 0C       		.byte	12
 20934 0332 00       		.byte	0
 20935 0333 30       		.byte	48
 20936 0334 0C       		.byte	12
 20937 0335 00       		.byte	0
 20938 0336 70       		.byte	112
 20939 0337 0E       		.byte	14
 20940 0338 00       		.byte	0
 20941 0339 E0       		.byte	-32
 20942 033a 07       		.byte	7
 20943 033b 00       		.byte	0
 20944 033c C0       		.byte	-64
 20945 033d 03       		.byte	3
 20946 033e 00       		.byte	0
 20947 033f 00       		.byte	0
 20948 0340 00       		.byte	0
 20949 0341 00       		.byte	0
 20950 0342 00       		.byte	0
 20951 0343 00       		.byte	0
 20952 0344 00       		.byte	0
 20953 0345 00       		.byte	0
 20954 0346 00       		.byte	0
 20955 0347 00       		.byte	0
 20956              		.section	.text.lcd_init_gpio,"ax",%progbits
 20957              		.align	2
 20958              		.thumb
 20959              		.thumb_func
 20961              	lcd_init_gpio:
 20962              	.LFB29:
   1:../src/lcd1202/lcd1202_hw.h **** /*
   2:../src/lcd1202/lcd1202_hw.h ****  * Nokia 1202/1203/1280 LCD display driver
   3:../src/lcd1202/lcd1202_hw.h ****  * MCU depend part
   4:../src/lcd1202/lcd1202_hw.h ****  *
   5:../src/lcd1202/lcd1202_hw.h ****  * (CC) 2011 Ivan A-R <ivan@tuxotronic.org>
   6:../src/lcd1202/lcd1202_hw.h ****  *
   7:../src/lcd1202/lcd1202_hw.h ****  * This driver use USART (9-bit) mode write to display.
   8:../src/lcd1202/lcd1202_hw.h ****  * Thanx for idea
   9:../src/lcd1202/lcd1202_hw.h ****  *     http://we.easyelectronics.ru/OlegG/ispolzovanie-usart-stm32-dlya-upravleniya-lcd-nokia-1202.
  10:../src/lcd1202/lcd1202_hw.h ****  */
  11:../src/lcd1202/lcd1202_hw.h **** 
  12:../src/lcd1202/lcd1202_hw.h **** #ifndef _LCD1202_HW_H_
  13:../src/lcd1202/lcd1202_hw.h **** #define _LCD1202_HW_H_
  14:../src/lcd1202/lcd1202_hw.h **** 
  15:../src/lcd1202/lcd1202_hw.h **** #ifndef _LCD1202_C_
  16:../src/lcd1202/lcd1202_hw.h **** #error Must be included only from lcd1202.c
  17:../src/lcd1202/lcd1202_hw.h **** #endif
  18:../src/lcd1202/lcd1202_hw.h **** 
  19:../src/lcd1202/lcd1202_hw.h **** /*
  20:../src/lcd1202/lcd1202_hw.h **** void lcd_init_gpio(void);
  21:../src/lcd1202/lcd1202_hw.h **** void lcd_reset(void);
  22:../src/lcd1202/lcd1202_hw.h **** void lcd_write_byte(uint8_t data, uint8_t rc);
  23:../src/lcd1202/lcd1202_hw.h **** */
  24:../src/lcd1202/lcd1202_hw.h **** #include <stm32f10x_gpio.h>
  25:../src/lcd1202/lcd1202_hw.h **** 
  26:../src/lcd1202/lcd1202_hw.h **** 
  27:../src/lcd1202/lcd1202_hw.h **** 
  28:../src/lcd1202/lcd1202_hw.h **** /* MCU Hardware depend functions */
  29:../src/lcd1202/lcd1202_hw.h **** /* STM32 USART 1 */
  30:../src/lcd1202/lcd1202_hw.h **** 
  31:../src/lcd1202/lcd1202_hw.h **** #define lcd_rst_mark()
  32:../src/lcd1202/lcd1202_hw.h **** #define lcd_rst_release()
  33:../src/lcd1202/lcd1202_hw.h **** 
  34:../src/lcd1202/lcd1202_hw.h **** #define lcd_cs_mark()    GPIOA->BRR  = GPIO_Pin_1
  35:../src/lcd1202/lcd1202_hw.h **** #define lcd_cs_release() do { \
  36:../src/lcd1202/lcd1202_hw.h ****         while ( (USART2->SR & USART_SR_TC) == 0) ; /* Wait while transfer */ \
  37:../src/lcd1202/lcd1202_hw.h ****         GPIOA->BSRR = GPIO_Pin_1; \
  38:../src/lcd1202/lcd1202_hw.h ****     } while(0)
  39:../src/lcd1202/lcd1202_hw.h **** 
  40:../src/lcd1202/lcd1202_hw.h **** 
  41:../src/lcd1202/lcd1202_hw.h **** #define lcd_delay_us(ms) do { uint32_t d = (ms)*11; while(--d) asm volatile(""); } while(0)
  42:../src/lcd1202/lcd1202_hw.h **** 
  43:../src/lcd1202/lcd1202_hw.h **** static void lcd_init_gpio(void)
  44:../src/lcd1202/lcd1202_hw.h **** {
 20963              		.loc 30 44 0
 20964              		.cfi_startproc
 20965              		@ args = 0, pretend = 0, frame = 0
 20966              		@ frame_needed = 1, uses_anonymous_args = 0
 20967              		@ link register save eliminated.
 20968 0000 80B4     		push	{r7}
 20969              	.LCFI0:
 20970              		.cfi_def_cfa_offset 4
 20971 0002 00AF     		add	r7, sp, #0
 20972              		.cfi_offset 7, -4
 20973              	.LCFI1:
 20974              		.cfi_def_cfa_register 7
  45:../src/lcd1202/lcd1202_hw.h ****     /* Init pins before call init */
  46:../src/lcd1202/lcd1202_hw.h **** #ifdef USE_MCU_USART
  47:../src/lcd1202/lcd1202_hw.h ****     USART1->BRR = 0x0010; /* MAX speed */
  48:../src/lcd1202/lcd1202_hw.h ****     USART1->CR2 =
  49:../src/lcd1202/lcd1202_hw.h ****         USART_CR2_CLKEN |     // Enable SCLK
  50:../src/lcd1202/lcd1202_hw.h ****         // USART_CR2_STOP_0 | // 1 stop bit (don't use 0.5 stopbit!!!)
  51:../src/lcd1202/lcd1202_hw.h ****         // USART_CR2_CPOL |   // Normal polarity
  52:../src/lcd1202/lcd1202_hw.h ****         // USART_CR2_CPHA |   // Normal phase
  53:../src/lcd1202/lcd1202_hw.h ****         USART_CR2_LBCL;       //clock fpr last bit
  54:../src/lcd1202/lcd1202_hw.h ****     USART1->CR1 = USART_CR1_OVER8 |
  55:../src/lcd1202/lcd1202_hw.h ****         USART_CR1_M |       // 9-bit
  56:../src/lcd1202/lcd1202_hw.h ****         USART_CR1_TE | USART_CR1_UE;
  57:../src/lcd1202/lcd1202_hw.h **** #else
  58:../src/lcd1202/lcd1202_hw.h ****     GPIOA->BRR = (1<<4);
 20975              		.loc 30 58 0
 20976 0004 034B     		ldr	r3, .L2
 20977 0006 4FF01002 		mov	r2, #16
 20978 000a 5A61     		str	r2, [r3, #20]
  59:../src/lcd1202/lcd1202_hw.h **** #endif
  60:../src/lcd1202/lcd1202_hw.h **** }
 20979              		.loc 30 60 0
 20980 000c BD46     		mov	sp, r7
 20981 000e 80BC     		pop	{r7}
 20982 0010 7047     		bx	lr
 20983              	.L3:
 20984 0012 00BF     		.align	2
 20985              	.L2:
 20986 0014 00080140 		.word	1073809408
 20987              		.cfi_endproc
 20988              	.LFE29:
 20990              		.section	.text.lcd_reset,"ax",%progbits
 20991              		.align	2
 20992              		.thumb
 20993              		.thumb_func
 20995              	lcd_reset:
 20996              	.LFB30:
  61:../src/lcd1202/lcd1202_hw.h **** 
  62:../src/lcd1202/lcd1202_hw.h **** static void lcd_reset(void)
  63:../src/lcd1202/lcd1202_hw.h **** {
 20997              		.loc 30 63 0
 20998              		.cfi_startproc
 20999              		@ args = 0, pretend = 0, frame = 0
 21000              		@ frame_needed = 1, uses_anonymous_args = 0
 21001              		@ link register save eliminated.
 21002 0000 80B4     		push	{r7}
 21003              	.LCFI2:
 21004              		.cfi_def_cfa_offset 4
 21005 0002 00AF     		add	r7, sp, #0
 21006              		.cfi_offset 7, -4
 21007              	.LCFI3:
 21008              		.cfi_def_cfa_register 7
  64:../src/lcd1202/lcd1202_hw.h ****     /*
  65:../src/lcd1202/lcd1202_hw.h ****     lcd_rst_mark();
  66:../src/lcd1202/lcd1202_hw.h ****     lcd_delay_us(10);
  67:../src/lcd1202/lcd1202_hw.h ****     lcd_rst_release();
  68:../src/lcd1202/lcd1202_hw.h ****     lcd_delay_us(10);
  69:../src/lcd1202/lcd1202_hw.h ****     */
  70:../src/lcd1202/lcd1202_hw.h **** }
 21009              		.loc 30 70 0
 21010 0004 BD46     		mov	sp, r7
 21011 0006 80BC     		pop	{r7}
 21012 0008 7047     		bx	lr
 21013              		.cfi_endproc
 21014              	.LFE30:
 21016 000a 00BF     		.section	.text.lcd_write_byte,"ax",%progbits
 21017              		.align	2
 21018              		.thumb
 21019              		.thumb_func
 21021              	lcd_write_byte:
 21022              	.LFB31:
  71:../src/lcd1202/lcd1202_hw.h **** 
  72:../src/lcd1202/lcd1202_hw.h **** static void lcd_write_byte(uint8_t data, uint8_t rc)
  73:../src/lcd1202/lcd1202_hw.h **** {
 21023              		.loc 30 73 0
 21024              		.cfi_startproc
 21025              		@ args = 0, pretend = 0, frame = 16
 21026              		@ frame_needed = 1, uses_anonymous_args = 0
 21027              		@ link register save eliminated.
 21028 0000 80B4     		push	{r7}
 21029              	.LCFI4:
 21030              		.cfi_def_cfa_offset 4
 21031 0002 85B0     		sub	sp, sp, #20
 21032              	.LCFI5:
 21033              		.cfi_def_cfa_offset 24
 21034 0004 00AF     		add	r7, sp, #0
 21035              		.cfi_offset 7, -4
 21036              	.LCFI6:
 21037              		.cfi_def_cfa_register 7
 21038 0006 0246     		mov	r2, r0
 21039 0008 0B46     		mov	r3, r1
 21040 000a FA71     		strb	r2, [r7, #7]
 21041 000c BB71     		strb	r3, [r7, #6]
  74:../src/lcd1202/lcd1202_hw.h **** #ifdef USE_MCU_USART
  75:../src/lcd1202/lcd1202_hw.h ****     uint16_t d = data;
  76:../src/lcd1202/lcd1202_hw.h ****     if (rc) /* If data */
  77:../src/lcd1202/lcd1202_hw.h ****         d |= 0x100;
  78:../src/lcd1202/lcd1202_hw.h **** 
  79:../src/lcd1202/lcd1202_hw.h ****     d = __RBIT(d) >> 23;
  80:../src/lcd1202/lcd1202_hw.h ****     while ( (USART2->SR & USART_SR_TXE) == 0 ) /* Transmitter registar is not empty */
  81:../src/lcd1202/lcd1202_hw.h ****         ; /* BLANK */
  82:../src/lcd1202/lcd1202_hw.h **** 
  83:../src/lcd1202/lcd1202_hw.h ****     USART1->DR = d;
  84:../src/lcd1202/lcd1202_hw.h **** 
  85:../src/lcd1202/lcd1202_hw.h **** #else
  86:../src/lcd1202/lcd1202_hw.h ****     if(rc)
 21042              		.loc 30 86 0
 21043 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21044 0010 002B     		cmp	r3, #0
 21045 0012 04D0     		beq	.L6
  87:../src/lcd1202/lcd1202_hw.h ****         GPIOA->BSRR = (1<<2);
 21046              		.loc 30 87 0
 21047 0014 1C4B     		ldr	r3, .L12
 21048 0016 4FF00402 		mov	r2, #4
 21049 001a 1A61     		str	r2, [r3, #16]
 21050 001c 03E0     		b	.L7
 21051              	.L6:
  88:../src/lcd1202/lcd1202_hw.h ****     else
  89:../src/lcd1202/lcd1202_hw.h ****         GPIOA->BRR = (1<<2);
 21052              		.loc 30 89 0
 21053 001e 1A4B     		ldr	r3, .L12
 21054 0020 4FF00402 		mov	r2, #4
 21055 0024 5A61     		str	r2, [r3, #20]
 21056              	.L7:
  90:../src/lcd1202/lcd1202_hw.h **** 
  91:../src/lcd1202/lcd1202_hw.h ****     GPIOA->BSRR = (1<<4);
 21057              		.loc 30 91 0
 21058 0026 184B     		ldr	r3, .L12
 21059 0028 4FF01002 		mov	r2, #16
 21060 002c 1A61     		str	r2, [r3, #16]
  92:../src/lcd1202/lcd1202_hw.h ****     GPIOA->BRR = (1<<4);
 21061              		.loc 30 92 0
 21062 002e 164B     		ldr	r3, .L12
 21063 0030 4FF01002 		mov	r2, #16
 21064 0034 5A61     		str	r2, [r3, #20]
  93:../src/lcd1202/lcd1202_hw.h **** 
  94:../src/lcd1202/lcd1202_hw.h ****     int i;
  95:../src/lcd1202/lcd1202_hw.h ****     for(i=0; i<8; i++)
 21065              		.loc 30 95 0
 21066 0036 4FF00003 		mov	r3, #0
 21067 003a FB60     		str	r3, [r7, #12]
 21068 003c 1CE0     		b	.L8
 21069              	.L11:
  96:../src/lcd1202/lcd1202_hw.h ****     {
  97:../src/lcd1202/lcd1202_hw.h ****         if(data & 0x80)
 21070              		.loc 30 97 0
 21071 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21072 0040 5BB2     		sxtb	r3, r3
 21073 0042 002B     		cmp	r3, #0
 21074 0044 04DA     		bge	.L9
  98:../src/lcd1202/lcd1202_hw.h ****             GPIOA->BSRR = (1<<2);
 21075              		.loc 30 98 0
 21076 0046 104B     		ldr	r3, .L12
 21077 0048 4FF00402 		mov	r2, #4
 21078 004c 1A61     		str	r2, [r3, #16]
 21079 004e 03E0     		b	.L10
 21080              	.L9:
  99:../src/lcd1202/lcd1202_hw.h ****         else
 100:../src/lcd1202/lcd1202_hw.h ****             GPIOA->BRR = (1<<2);
 21081              		.loc 30 100 0
 21082 0050 0D4B     		ldr	r3, .L12
 21083 0052 4FF00402 		mov	r2, #4
 21084 0056 5A61     		str	r2, [r3, #20]
 21085              	.L10:
 101:../src/lcd1202/lcd1202_hw.h ****         GPIOA->BSRR = (1<<4);
 21086              		.loc 30 101 0
 21087 0058 0B4B     		ldr	r3, .L12
 21088 005a 4FF01002 		mov	r2, #16
 21089 005e 1A61     		str	r2, [r3, #16]
 102:../src/lcd1202/lcd1202_hw.h ****         GPIOA->BRR = (1<<4);
 21090              		.loc 30 102 0
 21091 0060 094B     		ldr	r3, .L12
 21092 0062 4FF01002 		mov	r2, #16
 21093 0066 5A61     		str	r2, [r3, #20]
 103:../src/lcd1202/lcd1202_hw.h ****         data <<= 1;
 21094              		.loc 30 103 0
 21095 0068 FB79     		ldrb	r3, [r7, #7]
 21096 006a 4FEA4303 		lsl	r3, r3, #1
 21097 006e FB71     		strb	r3, [r7, #7]
  95:../src/lcd1202/lcd1202_hw.h ****     for(i=0; i<8; i++)
 21098              		.loc 30 95 0
 21099 0070 FB68     		ldr	r3, [r7, #12]
 21100 0072 03F10103 		add	r3, r3, #1
 21101 0076 FB60     		str	r3, [r7, #12]
 21102              	.L8:
  95:../src/lcd1202/lcd1202_hw.h ****     for(i=0; i<8; i++)
 21103              		.loc 30 95 0 is_stmt 0 discriminator 1
 21104 0078 FB68     		ldr	r3, [r7, #12]
 21105 007a 072B     		cmp	r3, #7
 21106 007c DFDD     		ble	.L11
 104:../src/lcd1202/lcd1202_hw.h ****     }
 105:../src/lcd1202/lcd1202_hw.h **** #endif
 106:../src/lcd1202/lcd1202_hw.h **** }
 21107              		.loc 30 106 0 is_stmt 1
 21108 007e 07F11407 		add	r7, r7, #20
 21109 0082 BD46     		mov	sp, r7
 21110 0084 80BC     		pop	{r7}
 21111 0086 7047     		bx	lr
 21112              	.L13:
 21113              		.align	2
 21114              	.L12:
 21115 0088 00080140 		.word	1073809408
 21116              		.cfi_endproc
 21117              	.LFE31:
 21119              		.section	.bss.LcdCache,"aw",%nobits
 21120              		.align	2
 21123              	LcdCache:
 21124 0000 00000000 		.space	768
 21124      00000000 
 21124      00000000 
 21124      00000000 
 21124      00000000 
 21125              		.comm	lcd_flags,4,4
 21126              		.section	.text.lcd_init,"ax",%progbits
 21127              		.align	2
 21128              		.global	lcd_init
 21129              		.thumb
 21130              		.thumb_func
 21132              	lcd_init:
 21133              	.LFB32:
   1:../src/lcd1202/lcd1202.c **** /**
   2:../src/lcd1202/lcd1202.c ****  * Nokia 1202/1203/1280 LCD display driver
   3:../src/lcd1202/lcd1202.c ****  *
   4:../src/lcd1202/lcd1202.c ****  * (CC) 2011 Ivan A-R <ivan@tuxotronic.org>
   5:../src/lcd1202/lcd1202.c ****  *
   6:../src/lcd1202/lcd1202.c ****  *
   7:../src/lcd1202/lcd1202.c ****  */
   8:../src/lcd1202/lcd1202.c **** 
   9:../src/lcd1202/lcd1202.c **** #include "lcd1202.h"
  10:../src/lcd1202/lcd1202.c **** 
  11:../src/lcd1202/lcd1202.c **** #include <stm32f10x.h>
  12:../src/lcd1202/lcd1202.c **** #include <string.h>
  13:../src/lcd1202/lcd1202.c **** 
  14:../src/lcd1202/lcd1202.c **** #include "font5x8.h"
  15:../src/lcd1202/lcd1202.c **** #include "fnt_libera_24x14.xbm"
  16:../src/lcd1202/lcd1202.c **** // #include "fnt_terminus_24x14.xbm"
  17:../src/lcd1202/lcd1202.c **** 
  18:../src/lcd1202/lcd1202.c **** #define _LCD1202_C_
  19:../src/lcd1202/lcd1202.c **** #include "lcd1202_hw.h"
  20:../src/lcd1202/lcd1202.c **** 
  21:../src/lcd1202/lcd1202.c **** static uint8_t LcdCache [ LCD_CACHE_SIZE ];
  22:../src/lcd1202/lcd1202.c **** 
  23:../src/lcd1202/lcd1202.c **** /* hw undepended functions */
  24:../src/lcd1202/lcd1202.c **** 
  25:../src/lcd1202/lcd1202.c **** lcd_flags_t lcd_flags;
  26:../src/lcd1202/lcd1202.c **** 
  27:../src/lcd1202/lcd1202.c **** void lcd_init(void)
  28:../src/lcd1202/lcd1202.c **** {
 21134              		.loc 1 28 0
 21135              		.cfi_startproc
 21136              		@ args = 0, pretend = 0, frame = 8
 21137              		@ frame_needed = 1, uses_anonymous_args = 0
 21138 0000 80B5     		push	{r7, lr}
 21139              	.LCFI7:
 21140              		.cfi_def_cfa_offset 8
 21141 0002 82B0     		sub	sp, sp, #8
 21142              	.LCFI8:
 21143              		.cfi_def_cfa_offset 16
 21144 0004 00AF     		add	r7, sp, #0
 21145              		.cfi_offset 14, -4
 21146              		.cfi_offset 7, -8
 21147              	.LCFI9:
 21148              		.cfi_def_cfa_register 7
  29:../src/lcd1202/lcd1202.c ****     //lcd_init_gpio();
  30:../src/lcd1202/lcd1202.c ****     lcd_reset();
 21149              		.loc 1 30 0
 21150 0006 FFF7FEFF 		bl	lcd_reset
  31:../src/lcd1202/lcd1202.c **** 
  32:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21151              		.loc 1 32 0
 21152 000a 1E4B     		ldr	r3, .L18
 21153 000c 4FF00202 		mov	r2, #2
 21154 0010 5A61     		str	r2, [r3, #20]
  33:../src/lcd1202/lcd1202.c ****     lcd_write_byte(0xE2, 0); // Reset
 21155              		.loc 1 33 0
 21156 0012 4FF0E200 		mov	r0, #226
 21157 0016 4FF00001 		mov	r1, #0
 21158 001a FFF7FEFF 		bl	lcd_write_byte
 21159              	.LBB2:
  34:../src/lcd1202/lcd1202.c ****     lcd_delay_us(10000);
 21160              		.loc 1 34 0
 21161 001e 1A4B     		ldr	r3, .L18+4
 21162 0020 7B60     		str	r3, [r7, #4]
 21163 0022 FFE7     		b	.L15
 21164              	.L16:
 21165              	.L15:
 21166              		.loc 1 34 0 is_stmt 0 discriminator 1
 21167 0024 7B68     		ldr	r3, [r7, #4]
 21168 0026 03F1FF33 		add	r3, r3, #-1
 21169 002a 7B60     		str	r3, [r7, #4]
 21170 002c 7B68     		ldr	r3, [r7, #4]
 21171 002e 002B     		cmp	r3, #0
 21172 0030 F8D1     		bne	.L16
 21173              	.LBE2:
  35:../src/lcd1202/lcd1202.c ****     // lcd_write_byte(0x3D, 0);  // Charge pump
  36:../src/lcd1202/lcd1202.c ****     // lcd_write_byte(0x01, 0);  // Charge pump = 4 (default 5 is too hight for 3.0 volt)
  37:../src/lcd1202/lcd1202.c ****     // lcd_write_byte(0xE1, 0);  // Additional VOP for contrast increase
  38:../src/lcd1202/lcd1202.c ****     // lcd_write_byte(0x16, 0);  // from -127 to +127
  39:../src/lcd1202/lcd1202.c ****     lcd_write_byte(0xA4, 0); // Power saver off
 21174              		.loc 1 39 0 is_stmt 1
 21175 0032 4FF0A400 		mov	r0, #164
 21176 0036 4FF00001 		mov	r1, #0
 21177 003a FFF7FEFF 		bl	lcd_write_byte
  40:../src/lcd1202/lcd1202.c ****     lcd_write_byte(0x2F, 0); // Booster ON Voltage regulator ON Voltage follover ON
 21178              		.loc 1 40 0
 21179 003e 4FF02F00 		mov	r0, #47
 21180 0042 4FF00001 		mov	r1, #0
 21181 0046 FFF7FEFF 		bl	lcd_write_byte
  41:../src/lcd1202/lcd1202.c ****     lcd_write_byte(0xAF, 0); // LCD display on
 21182              		.loc 1 41 0
 21183 004a 4FF0AF00 		mov	r0, #175
 21184 004e 4FF00001 		mov	r1, #0
 21185 0052 FFF7FEFF 		bl	lcd_write_byte
 21186              	.L17:
  42:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21187              		.loc 1 42 0 discriminator 1
 21188 0056 0D4B     		ldr	r3, .L18+8
 21189 0058 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21190 005a 9BB2     		uxth	r3, r3
 21191 005c 03F04003 		and	r3, r3, #64
 21192 0060 002B     		cmp	r3, #0
 21193 0062 F8D0     		beq	.L17
 21194              		.loc 1 42 0 is_stmt 0 discriminator 2
 21195 0064 074B     		ldr	r3, .L18
 21196 0066 4FF00202 		mov	r2, #2
 21197 006a 1A61     		str	r2, [r3, #16]
  43:../src/lcd1202/lcd1202.c **** 
  44:../src/lcd1202/lcd1202.c ****     lcd_flags.inverse_char = 0;
 21198              		.loc 1 44 0 is_stmt 1 discriminator 2
 21199 006c 084A     		ldr	r2, .L18+12
 21200 006e 1368     		ldr	r3, [r2, #0]
 21201 0070 6FF30003 		bfc	r3, #0, #1
 21202 0074 1360     		str	r3, [r2, #0]
  45:../src/lcd1202/lcd1202.c **** 
  46:../src/lcd1202/lcd1202.c ****     lcd_clr();
 21203              		.loc 1 46 0 discriminator 2
 21204 0076 FFF7FEFF 		bl	lcd_clr
  47:../src/lcd1202/lcd1202.c **** }
 21205              		.loc 1 47 0 discriminator 2
 21206 007a 07F10807 		add	r7, r7, #8
 21207 007e BD46     		mov	sp, r7
 21208 0080 80BD     		pop	{r7, pc}
 21209              	.L19:
 21210 0082 00BF     		.align	2
 21211              	.L18:
 21212 0084 00080140 		.word	1073809408
 21213 0088 B0AD0100 		.word	110000
 21214 008c 00440040 		.word	1073759232
 21215 0090 00000000 		.word	lcd_flags
 21216              		.cfi_endproc
 21217              	.LFE32:
 21219              		.section	.text.lcd_clr,"ax",%progbits
 21220              		.align	2
 21221              		.global	lcd_clr
 21222              		.thumb
 21223              		.thumb_func
 21225              	lcd_clr:
 21226              	.LFB33:
  48:../src/lcd1202/lcd1202.c **** 
  49:../src/lcd1202/lcd1202.c **** /* Page address set */
  50:../src/lcd1202/lcd1202.c **** #define lcd_set_row(row) lcd_write_byte(0xB0 | ((row) & 0x0F), 0)
  51:../src/lcd1202/lcd1202.c **** 
  52:../src/lcd1202/lcd1202.c **** #define lcd_set_col(col) do { \
  53:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0x10 | ((col)>>4), 0); /* Sets the DDRAM column address - upper 3-bit */ \
  54:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0x00 | ((col) & 0x0F), 0); /* lower 4-bit */ \
  55:../src/lcd1202/lcd1202.c ****     } while(0)
  56:../src/lcd1202/lcd1202.c **** 
  57:../src/lcd1202/lcd1202.c **** 
  58:../src/lcd1202/lcd1202.c **** void lcd_clr(void)
  59:../src/lcd1202/lcd1202.c **** {
 21227              		.loc 1 59 0
 21228              		.cfi_startproc
 21229              		@ args = 0, pretend = 0, frame = 8
 21230              		@ frame_needed = 1, uses_anonymous_args = 0
 21231 0000 80B5     		push	{r7, lr}
 21232              	.LCFI10:
 21233              		.cfi_def_cfa_offset 8
 21234 0002 82B0     		sub	sp, sp, #8
 21235              	.LCFI11:
 21236              		.cfi_def_cfa_offset 16
 21237 0004 00AF     		add	r7, sp, #0
 21238              		.cfi_offset 14, -4
 21239              		.cfi_offset 7, -8
 21240              	.LCFI12:
 21241              		.cfi_def_cfa_register 7
  60:../src/lcd1202/lcd1202.c ****     int i;
  61:../src/lcd1202/lcd1202.c ****     lcd_home();
 21242              		.loc 1 61 0
 21243 0006 FFF7FEFF 		bl	lcd_home
  62:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21244              		.loc 1 62 0
 21245 000a 164B     		ldr	r3, .L24
 21246 000c 4FF00202 		mov	r2, #2
 21247 0010 5A61     		str	r2, [r3, #20]
  63:../src/lcd1202/lcd1202.c ****     for(i=0; i<16*6*9; i++)
 21248              		.loc 1 63 0
 21249 0012 4FF00003 		mov	r3, #0
 21250 0016 7B60     		str	r3, [r7, #4]
 21251 0018 09E0     		b	.L21
 21252              	.L22:
  64:../src/lcd1202/lcd1202.c ****     {
  65:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0x00, 1);
 21253              		.loc 1 65 0 discriminator 2
 21254 001a 4FF00000 		mov	r0, #0
 21255 001e 4FF00101 		mov	r1, #1
 21256 0022 FFF7FEFF 		bl	lcd_write_byte
  63:../src/lcd1202/lcd1202.c ****     for(i=0; i<16*6*9; i++)
 21257              		.loc 1 63 0 discriminator 2
 21258 0026 7B68     		ldr	r3, [r7, #4]
 21259 0028 03F10103 		add	r3, r3, #1
 21260 002c 7B60     		str	r3, [r7, #4]
 21261              	.L21:
  63:../src/lcd1202/lcd1202.c ****     for(i=0; i<16*6*9; i++)
 21262              		.loc 1 63 0 is_stmt 0 discriminator 1
 21263 002e 7A68     		ldr	r2, [r7, #4]
 21264 0030 40F25F33 		movw	r3, #863
 21265 0034 9A42     		cmp	r2, r3
 21266 0036 F0DD     		ble	.L22
 21267              	.L23:
  66:../src/lcd1202/lcd1202.c ****     }
  67:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21268              		.loc 1 67 0 is_stmt 1 discriminator 1
 21269 0038 0B4B     		ldr	r3, .L24+4
 21270 003a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21271 003c 9BB2     		uxth	r3, r3
 21272 003e 03F04003 		and	r3, r3, #64
 21273 0042 002B     		cmp	r3, #0
 21274 0044 F8D0     		beq	.L23
 21275              		.loc 1 67 0 is_stmt 0 discriminator 2
 21276 0046 074B     		ldr	r3, .L24
 21277 0048 4FF00202 		mov	r2, #2
 21278 004c 1A61     		str	r2, [r3, #16]
  68:../src/lcd1202/lcd1202.c ****     memset( LcdCache, 0x00, LCD_CACHE_SIZE );
 21279              		.loc 1 68 0 is_stmt 1 discriminator 2
 21280 004e 0748     		ldr	r0, .L24+8
 21281 0050 4FF00001 		mov	r1, #0
 21282 0054 4FF44072 		mov	r2, #768
 21283 0058 FFF7FEFF 		bl	memset
  69:../src/lcd1202/lcd1202.c **** }
 21284              		.loc 1 69 0 discriminator 2
 21285 005c 07F10807 		add	r7, r7, #8
 21286 0060 BD46     		mov	sp, r7
 21287 0062 80BD     		pop	{r7, pc}
 21288              	.L25:
 21289              		.align	2
 21290              	.L24:
 21291 0064 00080140 		.word	1073809408
 21292 0068 00440040 		.word	1073759232
 21293 006c 00000000 		.word	LcdCache
 21294              		.cfi_endproc
 21295              	.LFE33:
 21297              		.section	.text.lcd_reverse,"ax",%progbits
 21298              		.align	2
 21299              		.global	lcd_reverse
 21300              		.thumb
 21301              		.thumb_func
 21303              	lcd_reverse:
 21304              	.LFB34:
  70:../src/lcd1202/lcd1202.c **** 
  71:../src/lcd1202/lcd1202.c **** void lcd_reverse(lcd_reverse_t inversion)
  72:../src/lcd1202/lcd1202.c **** {
 21305              		.loc 1 72 0
 21306              		.cfi_startproc
 21307              		@ args = 0, pretend = 0, frame = 8
 21308              		@ frame_needed = 1, uses_anonymous_args = 0
 21309 0000 80B5     		push	{r7, lr}
 21310              	.LCFI13:
 21311              		.cfi_def_cfa_offset 8
 21312 0002 82B0     		sub	sp, sp, #8
 21313              	.LCFI14:
 21314              		.cfi_def_cfa_offset 16
 21315 0004 00AF     		add	r7, sp, #0
 21316              		.cfi_offset 14, -4
 21317              		.cfi_offset 7, -8
 21318              	.LCFI15:
 21319              		.cfi_def_cfa_register 7
 21320 0006 0346     		mov	r3, r0
 21321 0008 FB71     		strb	r3, [r7, #7]
  73:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21322              		.loc 1 73 0
 21323 000a 114B     		ldr	r3, .L30
 21324 000c 4FF00202 		mov	r2, #2
 21325 0010 5A61     		str	r2, [r3, #20]
  74:../src/lcd1202/lcd1202.c ****     if(inversion)
 21326              		.loc 1 74 0
 21327 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21328 0014 002B     		cmp	r3, #0
 21329 0016 06D0     		beq	.L27
  75:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xA7, 0); // reverse display
 21330              		.loc 1 75 0
 21331 0018 4FF0A700 		mov	r0, #167
 21332 001c 4FF00001 		mov	r1, #0
 21333 0020 FFF7FEFF 		bl	lcd_write_byte
  76:../src/lcd1202/lcd1202.c ****     else
  77:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xA6, 0); // normal display
  78:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21334              		.loc 1 78 0
 21335 0024 05E0     		b	.L29
 21336              	.L27:
  77:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xA6, 0); // normal display
 21337              		.loc 1 77 0
 21338 0026 4FF0A600 		mov	r0, #166
 21339 002a 4FF00001 		mov	r1, #0
 21340 002e FFF7FEFF 		bl	lcd_write_byte
 21341              	.L29:
 21342              		.loc 1 78 0 discriminator 1
 21343 0032 084B     		ldr	r3, .L30+4
 21344 0034 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21345 0036 9BB2     		uxth	r3, r3
 21346 0038 03F04003 		and	r3, r3, #64
 21347 003c 002B     		cmp	r3, #0
 21348 003e F8D0     		beq	.L29
 21349              		.loc 1 78 0 is_stmt 0 discriminator 2
 21350 0040 034B     		ldr	r3, .L30
 21351 0042 4FF00202 		mov	r2, #2
 21352 0046 1A61     		str	r2, [r3, #16]
  79:../src/lcd1202/lcd1202.c **** }
 21353              		.loc 1 79 0 is_stmt 1 discriminator 2
 21354 0048 07F10807 		add	r7, r7, #8
 21355 004c BD46     		mov	sp, r7
 21356 004e 80BD     		pop	{r7, pc}
 21357              	.L31:
 21358              		.align	2
 21359              	.L30:
 21360 0050 00080140 		.word	1073809408
 21361 0054 00440040 		.word	1073759232
 21362              		.cfi_endproc
 21363              	.LFE34:
 21365              		.section	.text.lcd_segment_direction,"ax",%progbits
 21366              		.align	2
 21367              		.global	lcd_segment_direction
 21368              		.thumb
 21369              		.thumb_func
 21371              	lcd_segment_direction:
 21372              	.LFB35:
  80:../src/lcd1202/lcd1202.c **** 
  81:../src/lcd1202/lcd1202.c **** void lcd_segment_direction(lcd_reverse_t reverse)
  82:../src/lcd1202/lcd1202.c **** {
 21373              		.loc 1 82 0
 21374              		.cfi_startproc
 21375              		@ args = 0, pretend = 0, frame = 8
 21376              		@ frame_needed = 1, uses_anonymous_args = 0
 21377 0000 80B5     		push	{r7, lr}
 21378              	.LCFI16:
 21379              		.cfi_def_cfa_offset 8
 21380 0002 82B0     		sub	sp, sp, #8
 21381              	.LCFI17:
 21382              		.cfi_def_cfa_offset 16
 21383 0004 00AF     		add	r7, sp, #0
 21384              		.cfi_offset 14, -4
 21385              		.cfi_offset 7, -8
 21386              	.LCFI18:
 21387              		.cfi_def_cfa_register 7
 21388 0006 0346     		mov	r3, r0
 21389 0008 FB71     		strb	r3, [r7, #7]
  83:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21390              		.loc 1 83 0
 21391 000a 114B     		ldr	r3, .L36
 21392 000c 4FF00202 		mov	r2, #2
 21393 0010 5A61     		str	r2, [r3, #20]
  84:../src/lcd1202/lcd1202.c ****     if(reverse)
 21394              		.loc 1 84 0
 21395 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21396 0014 002B     		cmp	r3, #0
 21397 0016 06D0     		beq	.L33
  85:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xA1, 0); // reverse segment direction
 21398              		.loc 1 85 0
 21399 0018 4FF0A100 		mov	r0, #161
 21400 001c 4FF00001 		mov	r1, #0
 21401 0020 FFF7FEFF 		bl	lcd_write_byte
  86:../src/lcd1202/lcd1202.c ****     else
  87:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xA0, 0); // normal segment direction
  88:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21402              		.loc 1 88 0
 21403 0024 05E0     		b	.L35
 21404              	.L33:
  87:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xA0, 0); // normal segment direction
 21405              		.loc 1 87 0
 21406 0026 4FF0A000 		mov	r0, #160
 21407 002a 4FF00001 		mov	r1, #0
 21408 002e FFF7FEFF 		bl	lcd_write_byte
 21409              	.L35:
 21410              		.loc 1 88 0 discriminator 1
 21411 0032 084B     		ldr	r3, .L36+4
 21412 0034 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21413 0036 9BB2     		uxth	r3, r3
 21414 0038 03F04003 		and	r3, r3, #64
 21415 003c 002B     		cmp	r3, #0
 21416 003e F8D0     		beq	.L35
 21417              		.loc 1 88 0 is_stmt 0 discriminator 2
 21418 0040 034B     		ldr	r3, .L36
 21419 0042 4FF00202 		mov	r2, #2
 21420 0046 1A61     		str	r2, [r3, #16]
  89:../src/lcd1202/lcd1202.c **** }
 21421              		.loc 1 89 0 is_stmt 1 discriminator 2
 21422 0048 07F10807 		add	r7, r7, #8
 21423 004c BD46     		mov	sp, r7
 21424 004e 80BD     		pop	{r7, pc}
 21425              	.L37:
 21426              		.align	2
 21427              	.L36:
 21428 0050 00080140 		.word	1073809408
 21429 0054 00440040 		.word	1073759232
 21430              		.cfi_endproc
 21431              	.LFE35:
 21433              		.section	.text.lcd_column_direction,"ax",%progbits
 21434              		.align	2
 21435              		.global	lcd_column_direction
 21436              		.thumb
 21437              		.thumb_func
 21439              	lcd_column_direction:
 21440              	.LFB36:
  90:../src/lcd1202/lcd1202.c **** 
  91:../src/lcd1202/lcd1202.c **** void lcd_column_direction(lcd_reverse_t reverse)
  92:../src/lcd1202/lcd1202.c **** {
 21441              		.loc 1 92 0
 21442              		.cfi_startproc
 21443              		@ args = 0, pretend = 0, frame = 8
 21444              		@ frame_needed = 1, uses_anonymous_args = 0
 21445 0000 80B5     		push	{r7, lr}
 21446              	.LCFI19:
 21447              		.cfi_def_cfa_offset 8
 21448 0002 82B0     		sub	sp, sp, #8
 21449              	.LCFI20:
 21450              		.cfi_def_cfa_offset 16
 21451 0004 00AF     		add	r7, sp, #0
 21452              		.cfi_offset 14, -4
 21453              		.cfi_offset 7, -8
 21454              	.LCFI21:
 21455              		.cfi_def_cfa_register 7
 21456 0006 0346     		mov	r3, r0
 21457 0008 FB71     		strb	r3, [r7, #7]
  93:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21458              		.loc 1 93 0
 21459 000a 114B     		ldr	r3, .L42
 21460 000c 4FF00202 		mov	r2, #2
 21461 0010 5A61     		str	r2, [r3, #20]
  94:../src/lcd1202/lcd1202.c ****     if(reverse)
 21462              		.loc 1 94 0
 21463 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21464 0014 002B     		cmp	r3, #0
 21465 0016 06D0     		beq	.L39
  95:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xC8, 0); // reverse column direction
 21466              		.loc 1 95 0
 21467 0018 4FF0C800 		mov	r0, #200
 21468 001c 4FF00001 		mov	r1, #0
 21469 0020 FFF7FEFF 		bl	lcd_write_byte
  96:../src/lcd1202/lcd1202.c ****     else
  97:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xC0, 0); // normal column direction
  98:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21470              		.loc 1 98 0
 21471 0024 05E0     		b	.L41
 21472              	.L39:
  97:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xC0, 0); // normal column direction
 21473              		.loc 1 97 0
 21474 0026 4FF0C000 		mov	r0, #192
 21475 002a 4FF00001 		mov	r1, #0
 21476 002e FFF7FEFF 		bl	lcd_write_byte
 21477              	.L41:
 21478              		.loc 1 98 0 discriminator 1
 21479 0032 084B     		ldr	r3, .L42+4
 21480 0034 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21481 0036 9BB2     		uxth	r3, r3
 21482 0038 03F04003 		and	r3, r3, #64
 21483 003c 002B     		cmp	r3, #0
 21484 003e F8D0     		beq	.L41
 21485              		.loc 1 98 0 is_stmt 0 discriminator 2
 21486 0040 034B     		ldr	r3, .L42
 21487 0042 4FF00202 		mov	r2, #2
 21488 0046 1A61     		str	r2, [r3, #16]
  99:../src/lcd1202/lcd1202.c **** }
 21489              		.loc 1 99 0 is_stmt 1 discriminator 2
 21490 0048 07F10807 		add	r7, r7, #8
 21491 004c BD46     		mov	sp, r7
 21492 004e 80BD     		pop	{r7, pc}
 21493              	.L43:
 21494              		.align	2
 21495              	.L42:
 21496 0050 00080140 		.word	1073809408
 21497 0054 00440040 		.word	1073759232
 21498              		.cfi_endproc
 21499              	.LFE36:
 21501              		.section	.text.lcd_contrast,"ax",%progbits
 21502              		.align	2
 21503              		.global	lcd_contrast
 21504              		.thumb
 21505              		.thumb_func
 21507              	lcd_contrast:
 21508              	.LFB37:
 100:../src/lcd1202/lcd1202.c **** 
 101:../src/lcd1202/lcd1202.c **** void lcd_contrast(int contrast)
 102:../src/lcd1202/lcd1202.c **** {
 21509              		.loc 1 102 0
 21510              		.cfi_startproc
 21511              		@ args = 0, pretend = 0, frame = 8
 21512              		@ frame_needed = 1, uses_anonymous_args = 0
 21513 0000 80B5     		push	{r7, lr}
 21514              	.LCFI22:
 21515              		.cfi_def_cfa_offset 8
 21516 0002 82B0     		sub	sp, sp, #8
 21517              	.LCFI23:
 21518              		.cfi_def_cfa_offset 16
 21519 0004 00AF     		add	r7, sp, #0
 21520              		.cfi_offset 14, -4
 21521              		.cfi_offset 7, -8
 21522              	.LCFI24:
 21523              		.cfi_def_cfa_register 7
 21524 0006 7860     		str	r0, [r7, #4]
 103:../src/lcd1202/lcd1202.c ****     contrast = (contrast + 16) & 0x1F;
 21525              		.loc 1 103 0
 21526 0008 7B68     		ldr	r3, [r7, #4]
 21527 000a 03F11003 		add	r3, r3, #16
 21528 000e 03F01F03 		and	r3, r3, #31
 21529 0012 7B60     		str	r3, [r7, #4]
 104:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21530              		.loc 1 104 0
 21531 0014 0E4B     		ldr	r3, .L46
 21532 0016 4FF00202 		mov	r2, #2
 21533 001a 5A61     		str	r2, [r3, #20]
 105:../src/lcd1202/lcd1202.c ****     lcd_write_byte(0x80 | contrast, 0); // Set electronic volume
 21534              		.loc 1 105 0
 21535 001c 7B68     		ldr	r3, [r7, #4]
 21536 001e DBB2     		uxtb	r3, r3
 21537 0020 63F07F03 		orn	r3, r3, #127
 21538 0024 DBB2     		uxtb	r3, r3
 21539 0026 DBB2     		uxtb	r3, r3
 21540 0028 1846     		mov	r0, r3
 21541 002a 4FF00001 		mov	r1, #0
 21542 002e FFF7FEFF 		bl	lcd_write_byte
 21543              	.L45:
 106:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21544              		.loc 1 106 0 discriminator 1
 21545 0032 084B     		ldr	r3, .L46+4
 21546 0034 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21547 0036 9BB2     		uxth	r3, r3
 21548 0038 03F04003 		and	r3, r3, #64
 21549 003c 002B     		cmp	r3, #0
 21550 003e F8D0     		beq	.L45
 21551              		.loc 1 106 0 is_stmt 0 discriminator 2
 21552 0040 034B     		ldr	r3, .L46
 21553 0042 4FF00202 		mov	r2, #2
 21554 0046 1A61     		str	r2, [r3, #16]
 107:../src/lcd1202/lcd1202.c **** }
 21555              		.loc 1 107 0 is_stmt 1 discriminator 2
 21556 0048 07F10807 		add	r7, r7, #8
 21557 004c BD46     		mov	sp, r7
 21558 004e 80BD     		pop	{r7, pc}
 21559              	.L47:
 21560              		.align	2
 21561              	.L46:
 21562 0050 00080140 		.word	1073809408
 21563 0054 00440040 		.word	1073759232
 21564              		.cfi_endproc
 21565              	.LFE37:
 21567              		.section	.text.lcd_inverse_line,"ax",%progbits
 21568              		.align	2
 21569              		.global	lcd_inverse_line
 21570              		.thumb
 21571              		.thumb_func
 21573              	lcd_inverse_line:
 21574              	.LFB38:
 108:../src/lcd1202/lcd1202.c **** 
 109:../src/lcd1202/lcd1202.c **** void lcd_inverse_line(int line)
 110:../src/lcd1202/lcd1202.c **** {
 21575              		.loc 1 110 0
 21576              		.cfi_startproc
 21577              		@ args = 0, pretend = 0, frame = 8
 21578              		@ frame_needed = 1, uses_anonymous_args = 0
 21579 0000 80B5     		push	{r7, lr}
 21580              	.LCFI25:
 21581              		.cfi_def_cfa_offset 8
 21582 0002 82B0     		sub	sp, sp, #8
 21583              	.LCFI26:
 21584              		.cfi_def_cfa_offset 16
 21585 0004 00AF     		add	r7, sp, #0
 21586              		.cfi_offset 14, -4
 21587              		.cfi_offset 7, -8
 21588              	.LCFI27:
 21589              		.cfi_def_cfa_register 7
 21590 0006 7860     		str	r0, [r7, #4]
 111:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21591              		.loc 1 111 0
 21592 0008 1B4B     		ldr	r3, .L52
 21593 000a 4FF00202 		mov	r2, #2
 21594 000e 5A61     		str	r2, [r3, #20]
 112:../src/lcd1202/lcd1202.c ****     if((line >= 0) && (line <32))
 21595              		.loc 1 112 0
 21596 0010 7B68     		ldr	r3, [r7, #4]
 21597 0012 002B     		cmp	r3, #0
 21598 0014 14DB     		blt	.L49
 21599              		.loc 1 112 0 is_stmt 0 discriminator 1
 21600 0016 7B68     		ldr	r3, [r7, #4]
 21601 0018 1F2B     		cmp	r3, #31
 21602 001a 11DC     		bgt	.L49
 113:../src/lcd1202/lcd1202.c ****     {
 114:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xAD, 0);
 21603              		.loc 1 114 0 is_stmt 1
 21604 001c 4FF0AD00 		mov	r0, #173
 21605 0020 4FF00001 		mov	r1, #0
 21606 0024 FFF7FEFF 		bl	lcd_write_byte
 115:../src/lcd1202/lcd1202.c ****         lcd_write_byte(line | 0x20, 0);
 21607              		.loc 1 115 0
 21608 0028 7B68     		ldr	r3, [r7, #4]
 21609 002a DBB2     		uxtb	r3, r3
 21610 002c 43F02003 		orr	r3, r3, #32
 21611 0030 DBB2     		uxtb	r3, r3
 21612 0032 DBB2     		uxtb	r3, r3
 21613 0034 1846     		mov	r0, r3
 21614 0036 4FF00001 		mov	r1, #0
 21615 003a FFF7FEFF 		bl	lcd_write_byte
 116:../src/lcd1202/lcd1202.c ****     }
 117:../src/lcd1202/lcd1202.c ****     else
 118:../src/lcd1202/lcd1202.c ****     {
 119:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xAD, 0);
 120:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0, 0);
 121:../src/lcd1202/lcd1202.c ****     }
 122:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21616              		.loc 1 122 0
 21617 003e 0BE0     		b	.L51
 21618              	.L49:
 119:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0xAD, 0);
 21619              		.loc 1 119 0
 21620 0040 4FF0AD00 		mov	r0, #173
 21621 0044 4FF00001 		mov	r1, #0
 21622 0048 FFF7FEFF 		bl	lcd_write_byte
 120:../src/lcd1202/lcd1202.c ****         lcd_write_byte(0, 0);
 21623              		.loc 1 120 0
 21624 004c 4FF00000 		mov	r0, #0
 21625 0050 4FF00001 		mov	r1, #0
 21626 0054 FFF7FEFF 		bl	lcd_write_byte
 21627              	.L51:
 21628              		.loc 1 122 0 discriminator 1
 21629 0058 084B     		ldr	r3, .L52+4
 21630 005a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21631 005c 9BB2     		uxth	r3, r3
 21632 005e 03F04003 		and	r3, r3, #64
 21633 0062 002B     		cmp	r3, #0
 21634 0064 F8D0     		beq	.L51
 21635              		.loc 1 122 0 is_stmt 0 discriminator 2
 21636 0066 044B     		ldr	r3, .L52
 21637 0068 4FF00202 		mov	r2, #2
 21638 006c 1A61     		str	r2, [r3, #16]
 123:../src/lcd1202/lcd1202.c **** }
 21639              		.loc 1 123 0 is_stmt 1 discriminator 2
 21640 006e 07F10807 		add	r7, r7, #8
 21641 0072 BD46     		mov	sp, r7
 21642 0074 80BD     		pop	{r7, pc}
 21643              	.L53:
 21644 0076 00BF     		.align	2
 21645              	.L52:
 21646 0078 00080140 		.word	1073809408
 21647 007c 00440040 		.word	1073759232
 21648              		.cfi_endproc
 21649              	.LFE38:
 21651              		.section	.text.lcd_start_line,"ax",%progbits
 21652              		.align	2
 21653              		.global	lcd_start_line
 21654              		.thumb
 21655              		.thumb_func
 21657              	lcd_start_line:
 21658              	.LFB39:
 124:../src/lcd1202/lcd1202.c **** 
 125:../src/lcd1202/lcd1202.c **** void lcd_start_line(uint8_t line)
 126:../src/lcd1202/lcd1202.c **** {
 21659              		.loc 1 126 0
 21660              		.cfi_startproc
 21661              		@ args = 0, pretend = 0, frame = 8
 21662              		@ frame_needed = 1, uses_anonymous_args = 0
 21663 0000 80B5     		push	{r7, lr}
 21664              	.LCFI28:
 21665              		.cfi_def_cfa_offset 8
 21666 0002 82B0     		sub	sp, sp, #8
 21667              	.LCFI29:
 21668              		.cfi_def_cfa_offset 16
 21669 0004 00AF     		add	r7, sp, #0
 21670              		.cfi_offset 14, -4
 21671              		.cfi_offset 7, -8
 21672              	.LCFI30:
 21673              		.cfi_def_cfa_register 7
 21674 0006 0346     		mov	r3, r0
 21675 0008 FB71     		strb	r3, [r7, #7]
 127:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21676              		.loc 1 127 0
 21677 000a 104B     		ldr	r3, .L56
 21678 000c 4FF00202 		mov	r2, #2
 21679 0010 5A61     		str	r2, [r3, #20]
 128:../src/lcd1202/lcd1202.c ****     lcd_write_byte(0x40 | (line & 0x3F), 0);
 21680              		.loc 1 128 0
 21681 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21682 0014 03F03F03 		and	r3, r3, #63
 21683 0018 DBB2     		uxtb	r3, r3
 21684 001a 43F04003 		orr	r3, r3, #64
 21685 001e DBB2     		uxtb	r3, r3
 21686 0020 DBB2     		uxtb	r3, r3
 21687 0022 1846     		mov	r0, r3
 21688 0024 4FF00001 		mov	r1, #0
 21689 0028 FFF7FEFF 		bl	lcd_write_byte
 21690              	.L55:
 129:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21691              		.loc 1 129 0 discriminator 1
 21692 002c 084B     		ldr	r3, .L56+4
 21693 002e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21694 0030 9BB2     		uxth	r3, r3
 21695 0032 03F04003 		and	r3, r3, #64
 21696 0036 002B     		cmp	r3, #0
 21697 0038 F8D0     		beq	.L55
 21698              		.loc 1 129 0 is_stmt 0 discriminator 2
 21699 003a 044B     		ldr	r3, .L56
 21700 003c 4FF00202 		mov	r2, #2
 21701 0040 1A61     		str	r2, [r3, #16]
 130:../src/lcd1202/lcd1202.c **** }
 21702              		.loc 1 130 0 is_stmt 1 discriminator 2
 21703 0042 07F10807 		add	r7, r7, #8
 21704 0046 BD46     		mov	sp, r7
 21705 0048 80BD     		pop	{r7, pc}
 21706              	.L57:
 21707 004a 00BF     		.align	2
 21708              	.L56:
 21709 004c 00080140 		.word	1073809408
 21710 0050 00440040 		.word	1073759232
 21711              		.cfi_endproc
 21712              	.LFE39:
 21714              		.section	.text.lcd_home,"ax",%progbits
 21715              		.align	2
 21716              		.global	lcd_home
 21717              		.thumb
 21718              		.thumb_func
 21720              	lcd_home:
 21721              	.LFB40:
 131:../src/lcd1202/lcd1202.c **** 
 132:../src/lcd1202/lcd1202.c **** void lcd_home(void)
 133:../src/lcd1202/lcd1202.c **** {
 21722              		.loc 1 133 0
 21723              		.cfi_startproc
 21724              		@ args = 0, pretend = 0, frame = 0
 21725              		@ frame_needed = 1, uses_anonymous_args = 0
 21726 0000 80B5     		push	{r7, lr}
 21727              	.LCFI31:
 21728              		.cfi_def_cfa_offset 8
 21729 0002 00AF     		add	r7, sp, #0
 21730              		.cfi_offset 14, -4
 21731              		.cfi_offset 7, -8
 21732              	.LCFI32:
 21733              		.cfi_def_cfa_register 7
 134:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21734              		.loc 1 134 0
 21735 0004 104B     		ldr	r3, .L60
 21736 0006 4FF00202 		mov	r2, #2
 21737 000a 5A61     		str	r2, [r3, #20]
 135:../src/lcd1202/lcd1202.c ****     lcd_set_row(0);
 21738              		.loc 1 135 0
 21739 000c 4FF0B000 		mov	r0, #176
 21740 0010 4FF00001 		mov	r1, #0
 21741 0014 FFF7FEFF 		bl	lcd_write_byte
 136:../src/lcd1202/lcd1202.c ****     lcd_set_col(0);
 21742              		.loc 1 136 0
 21743 0018 4FF01000 		mov	r0, #16
 21744 001c 4FF00001 		mov	r1, #0
 21745 0020 FFF7FEFF 		bl	lcd_write_byte
 21746 0024 4FF00000 		mov	r0, #0
 21747 0028 4FF00001 		mov	r1, #0
 21748 002c FFF7FEFF 		bl	lcd_write_byte
 21749              	.L59:
 137:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21750              		.loc 1 137 0 discriminator 1
 21751 0030 064B     		ldr	r3, .L60+4
 21752 0032 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21753 0034 9BB2     		uxth	r3, r3
 21754 0036 03F04003 		and	r3, r3, #64
 21755 003a 002B     		cmp	r3, #0
 21756 003c F8D0     		beq	.L59
 21757              		.loc 1 137 0 is_stmt 0 discriminator 2
 21758 003e 024B     		ldr	r3, .L60
 21759 0040 4FF00202 		mov	r2, #2
 21760 0044 1A61     		str	r2, [r3, #16]
 138:../src/lcd1202/lcd1202.c **** }
 21761              		.loc 1 138 0 is_stmt 1 discriminator 2
 21762 0046 80BD     		pop	{r7, pc}
 21763              	.L61:
 21764              		.align	2
 21765              	.L60:
 21766 0048 00080140 		.word	1073809408
 21767 004c 00440040 		.word	1073759232
 21768              		.cfi_endproc
 21769              	.LFE40:
 21771              		.section	.text.lcd_char,"ax",%progbits
 21772              		.align	2
 21773              		.global	lcd_char
 21774              		.thumb
 21775              		.thumb_func
 21777              	lcd_char:
 21778              	.LFB41:
 139:../src/lcd1202/lcd1202.c **** 
 140:../src/lcd1202/lcd1202.c **** void lcd_char(uint8_t row, uint8_t col, char chr)
 141:../src/lcd1202/lcd1202.c **** {
 21779              		.loc 1 141 0
 21780              		.cfi_startproc
 21781              		@ args = 0, pretend = 0, frame = 24
 21782              		@ frame_needed = 1, uses_anonymous_args = 0
 21783 0000 80B5     		push	{r7, lr}
 21784              	.LCFI33:
 21785              		.cfi_def_cfa_offset 8
 21786 0002 86B0     		sub	sp, sp, #24
 21787              	.LCFI34:
 21788              		.cfi_def_cfa_offset 32
 21789 0004 00AF     		add	r7, sp, #0
 21790              		.cfi_offset 14, -4
 21791              		.cfi_offset 7, -8
 21792              	.LCFI35:
 21793              		.cfi_def_cfa_register 7
 21794 0006 1346     		mov	r3, r2
 21795 0008 0246     		mov	r2, r0
 21796 000a FA71     		strb	r2, [r7, #7]
 21797 000c 0A46     		mov	r2, r1
 21798 000e BA71     		strb	r2, [r7, #6]
 21799 0010 7B71     		strb	r3, [r7, #5]
 142:../src/lcd1202/lcd1202.c ****     int i;
 143:../src/lcd1202/lcd1202.c ****     const uint8_t* f = font5x8 + chr*5 + fontWidth - 1;
 21800              		.loc 1 143 0
 21801 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 21802 0014 03F10102 		add	r2, r3, #1
 21803 0018 1346     		mov	r3, r2
 21804 001a 4FEA8303 		lsl	r3, r3, #2
 21805 001e 9B18     		adds	r3, r3, r2
 21806 0020 03F1FF32 		add	r2, r3, #-1
 21807 0024 464B     		ldr	r3, .L74
 21808 0026 D318     		adds	r3, r2, r3
 21809 0028 3B61     		str	r3, [r7, #16]
 144:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 21810              		.loc 1 144 0
 21811 002a 464B     		ldr	r3, .L74+4
 21812 002c 4FF00202 		mov	r2, #2
 21813 0030 5A61     		str	r2, [r3, #20]
 145:../src/lcd1202/lcd1202.c ****     lcd_set_row(row);
 21814              		.loc 1 145 0
 21815 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21816 0034 03F00F03 		and	r3, r3, #15
 21817 0038 DBB2     		uxtb	r3, r3
 21818 003a 63F04F03 		orn	r3, r3, #79
 21819 003e DBB2     		uxtb	r3, r3
 21820 0040 DBB2     		uxtb	r3, r3
 21821 0042 1846     		mov	r0, r3
 21822 0044 4FF00001 		mov	r1, #0
 21823 0048 FFF7FEFF 		bl	lcd_write_byte
 146:../src/lcd1202/lcd1202.c ****     lcd_set_col(col);
 21824              		.loc 1 146 0
 21825 004c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21826 004e 4FEA1313 		lsr	r3, r3, #4
 21827 0052 DBB2     		uxtb	r3, r3
 21828 0054 43F01003 		orr	r3, r3, #16
 21829 0058 DBB2     		uxtb	r3, r3
 21830 005a 1846     		mov	r0, r3
 21831 005c 4FF00001 		mov	r1, #0
 21832 0060 FFF7FEFF 		bl	lcd_write_byte
 21833 0064 BB79     		ldrb	r3, [r7, #6]
 21834 0066 03F00F03 		and	r3, r3, #15
 21835 006a DBB2     		uxtb	r3, r3
 21836 006c 1846     		mov	r0, r3
 21837 006e 4FF00001 		mov	r1, #0
 21838 0072 FFF7FEFF 		bl	lcd_write_byte
 147:../src/lcd1202/lcd1202.c ****     for(i=0; i<fontWidth; i++)
 21839              		.loc 1 147 0
 21840 0076 4FF00003 		mov	r3, #0
 21841 007a 7B61     		str	r3, [r7, #20]
 21842 007c 2EE0     		b	.L63
 21843              	.L68:
 21844              	.LBB3:
 148:../src/lcd1202/lcd1202.c ****     {
 149:../src/lcd1202/lcd1202.c ****         uint8_t b = *f--;
 21845              		.loc 1 149 0
 21846 007e 3B69     		ldr	r3, [r7, #16]
 21847 0080 1B78     		ldrb	r3, [r3, #0]
 21848 0082 FB73     		strb	r3, [r7, #15]
 21849 0084 3B69     		ldr	r3, [r7, #16]
 21850 0086 03F1FF33 		add	r3, r3, #-1
 21851 008a 3B61     		str	r3, [r7, #16]
 150:../src/lcd1202/lcd1202.c ****         if(lcd_flags.inverse_char) b = ~b;
 21852              		.loc 1 150 0
 21853 008c 2E4B     		ldr	r3, .L74+8
 21854 008e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 21855 0090 03F00103 		and	r3, r3, #1
 21856 0094 DBB2     		uxtb	r3, r3
 21857 0096 002B     		cmp	r3, #0
 21858 0098 03D0     		beq	.L64
 21859              		.loc 1 150 0 is_stmt 0 discriminator 1
 21860 009a FB7B     		ldrb	r3, [r7, #15]
 21861 009c 6FEA0303 		mvn	r3, r3
 21862 00a0 FB73     		strb	r3, [r7, #15]
 21863              	.L64:
 151:../src/lcd1202/lcd1202.c ****         lcd_write_byte(b, 1);
 21864              		.loc 1 151 0 is_stmt 1
 21865 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21866 00a4 1846     		mov	r0, r3
 21867 00a6 4FF00101 		mov	r1, #1
 21868 00aa FFF7FEFF 		bl	lcd_write_byte
 152:../src/lcd1202/lcd1202.c ****         if(++col >= lcdWidth())
 21869              		.loc 1 152 0
 21870 00ae BB79     		ldrb	r3, [r7, #6]
 21871 00b0 03F10103 		add	r3, r3, #1
 21872 00b4 BB71     		strb	r3, [r7, #6]
 21873 00b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21874 00b8 5F2B     		cmp	r3, #95
 21875 00ba 0BD9     		bls	.L65
 21876              	.L66:
 153:../src/lcd1202/lcd1202.c ****         {
 154:../src/lcd1202/lcd1202.c ****             lcd_cs_release();
 21877              		.loc 1 154 0 discriminator 1
 21878 00bc 234B     		ldr	r3, .L74+12
 21879 00be 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21880 00c0 9BB2     		uxth	r3, r3
 21881 00c2 03F04003 		and	r3, r3, #64
 21882 00c6 002B     		cmp	r3, #0
 21883 00c8 F8D0     		beq	.L66
 21884              		.loc 1 154 0 is_stmt 0 discriminator 2
 21885 00ca 1E4B     		ldr	r3, .L74+4
 21886 00cc 4FF00202 		mov	r2, #2
 21887 00d0 1A61     		str	r2, [r3, #16]
 155:../src/lcd1202/lcd1202.c ****             return;
 21888              		.loc 1 155 0 is_stmt 1 discriminator 2
 21889 00d2 30E0     		b	.L62
 21890              	.L65:
 21891              	.LBE3:
 147:../src/lcd1202/lcd1202.c ****     for(i=0; i<fontWidth; i++)
 21892              		.loc 1 147 0
 21893 00d4 7B69     		ldr	r3, [r7, #20]
 21894 00d6 03F10103 		add	r3, r3, #1
 21895 00da 7B61     		str	r3, [r7, #20]
 21896              	.L63:
 147:../src/lcd1202/lcd1202.c ****     for(i=0; i<fontWidth; i++)
 21897              		.loc 1 147 0 is_stmt 0 discriminator 1
 21898 00dc 7B69     		ldr	r3, [r7, #20]
 21899 00de 042B     		cmp	r3, #4
 21900 00e0 CDDD     		ble	.L68
 156:../src/lcd1202/lcd1202.c ****         }
 157:../src/lcd1202/lcd1202.c ****     }
 158:../src/lcd1202/lcd1202.c ****     for(i=0; i<fontSpace; i++)
 21901              		.loc 1 158 0 is_stmt 1
 21902 00e2 4FF00003 		mov	r3, #0
 21903 00e6 7B61     		str	r3, [r7, #20]
 21904 00e8 17E0     		b	.L69
 21905              	.L72:
 159:../src/lcd1202/lcd1202.c ****     {
 160:../src/lcd1202/lcd1202.c ****         if(lcd_flags.inverse_char)
 21906              		.loc 1 160 0
 21907 00ea 174B     		ldr	r3, .L74+8
 21908 00ec 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 21909 00ee 03F00103 		and	r3, r3, #1
 21910 00f2 DBB2     		uxtb	r3, r3
 21911 00f4 002B     		cmp	r3, #0
 21912 00f6 06D0     		beq	.L70
 161:../src/lcd1202/lcd1202.c ****             lcd_write_byte(0xFF, 1);
 21913              		.loc 1 161 0
 21914 00f8 4FF0FF00 		mov	r0, #255
 21915 00fc 4FF00101 		mov	r1, #1
 21916 0100 FFF7FEFF 		bl	lcd_write_byte
 21917 0104 05E0     		b	.L71
 21918              	.L70:
 162:../src/lcd1202/lcd1202.c ****         else
 163:../src/lcd1202/lcd1202.c ****             lcd_write_byte(0, 1);
 21919              		.loc 1 163 0
 21920 0106 4FF00000 		mov	r0, #0
 21921 010a 4FF00101 		mov	r1, #1
 21922 010e FFF7FEFF 		bl	lcd_write_byte
 21923              	.L71:
 158:../src/lcd1202/lcd1202.c ****     for(i=0; i<fontSpace; i++)
 21924              		.loc 1 158 0
 21925 0112 7B69     		ldr	r3, [r7, #20]
 21926 0114 03F10103 		add	r3, r3, #1
 21927 0118 7B61     		str	r3, [r7, #20]
 21928              	.L69:
 158:../src/lcd1202/lcd1202.c ****     for(i=0; i<fontSpace; i++)
 21929              		.loc 1 158 0 is_stmt 0 discriminator 1
 21930 011a 7B69     		ldr	r3, [r7, #20]
 21931 011c 002B     		cmp	r3, #0
 21932 011e E4DD     		ble	.L72
 21933              	.L73:
 164:../src/lcd1202/lcd1202.c ****     }
 165:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 21934              		.loc 1 165 0 is_stmt 1 discriminator 1
 21935 0120 0A4B     		ldr	r3, .L74+12
 21936 0122 1B88     		ldrh	r3, [r3, #0]	@ movhi
 21937 0124 9BB2     		uxth	r3, r3
 21938 0126 03F04003 		and	r3, r3, #64
 21939 012a 002B     		cmp	r3, #0
 21940 012c F8D0     		beq	.L73
 21941              		.loc 1 165 0 is_stmt 0 discriminator 2
 21942 012e 054B     		ldr	r3, .L74+4
 21943 0130 4FF00202 		mov	r2, #2
 21944 0134 1A61     		str	r2, [r3, #16]
 21945              	.L62:
 166:../src/lcd1202/lcd1202.c **** }
 21946              		.loc 1 166 0 is_stmt 1
 21947 0136 07F11807 		add	r7, r7, #24
 21948 013a BD46     		mov	sp, r7
 21949 013c 80BD     		pop	{r7, pc}
 21950              	.L75:
 21951 013e 00BF     		.align	2
 21952              	.L74:
 21953 0140 00000000 		.word	font5x8
 21954 0144 00080140 		.word	1073809408
 21955 0148 00000000 		.word	lcd_flags
 21956 014c 00440040 		.word	1073759232
 21957              		.cfi_endproc
 21958              	.LFE41:
 21960              		.section	.text.lcd_str,"ax",%progbits
 21961              		.align	2
 21962              		.global	lcd_str
 21963              		.thumb
 21964              		.thumb_func
 21966              	lcd_str:
 21967              	.LFB42:
 167:../src/lcd1202/lcd1202.c **** 
 168:../src/lcd1202/lcd1202.c **** void lcd_str(uint8_t row, uint8_t col, const char* str)
 169:../src/lcd1202/lcd1202.c **** {
 21968              		.loc 1 169 0
 21969              		.cfi_startproc
 21970              		@ args = 0, pretend = 0, frame = 16
 21971              		@ frame_needed = 1, uses_anonymous_args = 0
 21972 0000 80B5     		push	{r7, lr}
 21973              	.LCFI36:
 21974              		.cfi_def_cfa_offset 8
 21975 0002 84B0     		sub	sp, sp, #16
 21976              	.LCFI37:
 21977              		.cfi_def_cfa_offset 24
 21978 0004 00AF     		add	r7, sp, #0
 21979              		.cfi_offset 14, -4
 21980              		.cfi_offset 7, -8
 21981              	.LCFI38:
 21982              		.cfi_def_cfa_register 7
 21983 0006 0B46     		mov	r3, r1
 21984 0008 3A60     		str	r2, [r7, #0]
 21985 000a 0246     		mov	r2, r0
 21986 000c FA71     		strb	r2, [r7, #7]
 21987 000e BB71     		strb	r3, [r7, #6]
 170:../src/lcd1202/lcd1202.c ****     char c;
 171:../src/lcd1202/lcd1202.c ****     col = lcdWidth() - col - fontSpace*5;
 21988              		.loc 1 171 0
 21989 0010 BB79     		ldrb	r3, [r7, #6]
 21990 0012 C3F15B03 		rsb	r3, r3, #91
 21991 0016 BB71     		strb	r3, [r7, #6]
 172:../src/lcd1202/lcd1202.c ****     while((c = *str++) != 0)
 21992              		.loc 1 172 0
 21993 0018 0EE0     		b	.L77
 21994              	.L79:
 173:../src/lcd1202/lcd1202.c ****     {
 174:../src/lcd1202/lcd1202.c ****         lcd_char(row, col, c);
 21995              		.loc 1 174 0
 21996 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 21997 001c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21998 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21999 0020 0846     		mov	r0, r1
 22000 0022 1146     		mov	r1, r2
 22001 0024 1A46     		mov	r2, r3
 22002 0026 FFF7FEFF 		bl	lcd_char
 175:../src/lcd1202/lcd1202.c ****         col -= fontWidth + fontSpace;
 22003              		.loc 1 175 0
 22004 002a BB79     		ldrb	r3, [r7, #6]
 22005 002c A3F10603 		sub	r3, r3, #6
 22006 0030 BB71     		strb	r3, [r7, #6]
 176:../src/lcd1202/lcd1202.c ****         //if(col >= lcdWidth()) return;
 177:../src/lcd1202/lcd1202.c ****         if(col <= 0) return;
 22007              		.loc 1 177 0
 22008 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22009 0034 002B     		cmp	r3, #0
 22010 0036 0FD0     		beq	.L80
 22011              	.L77:
 172:../src/lcd1202/lcd1202.c ****     while((c = *str++) != 0)
 22012              		.loc 1 172 0 discriminator 1
 22013 0038 3B68     		ldr	r3, [r7, #0]
 22014 003a 1B78     		ldrb	r3, [r3, #0]
 22015 003c FB73     		strb	r3, [r7, #15]
 22016 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22017 0040 002B     		cmp	r3, #0
 22018 0042 0CBF     		ite	eq
 22019 0044 0023     		moveq	r3, #0
 22020 0046 0123     		movne	r3, #1
 22021 0048 DBB2     		uxtb	r3, r3
 22022 004a 3A68     		ldr	r2, [r7, #0]
 22023 004c 02F10102 		add	r2, r2, #1
 22024 0050 3A60     		str	r2, [r7, #0]
 22025 0052 002B     		cmp	r3, #0
 22026 0054 E1D1     		bne	.L79
 22027 0056 00E0     		b	.L76
 22028              	.L80:
 22029              		.loc 1 177 0
 22030 0058 00BF     		nop
 22031              	.L76:
 178:../src/lcd1202/lcd1202.c ****     }
 179:../src/lcd1202/lcd1202.c **** }
 22032              		.loc 1 179 0
 22033 005a 07F11007 		add	r7, r7, #16
 22034 005e BD46     		mov	sp, r7
 22035 0060 80BD     		pop	{r7, pc}
 22036              		.cfi_endproc
 22037              	.LFE42:
 22039 0062 00BF     		.section	.text.lcd_str_center,"ax",%progbits
 22040              		.align	2
 22041              		.global	lcd_str_center
 22042              		.thumb
 22043              		.thumb_func
 22045              	lcd_str_center:
 22046              	.LFB43:
 180:../src/lcd1202/lcd1202.c **** 
 181:../src/lcd1202/lcd1202.c **** void lcd_str_center(uint8_t row, const char* str)
 182:../src/lcd1202/lcd1202.c **** {
 22047              		.loc 1 182 0
 22048              		.cfi_startproc
 22049              		@ args = 0, pretend = 0, frame = 8
 22050              		@ frame_needed = 1, uses_anonymous_args = 0
 22051 0000 80B5     		push	{r7, lr}
 22052              	.LCFI39:
 22053              		.cfi_def_cfa_offset 8
 22054 0002 82B0     		sub	sp, sp, #8
 22055              	.LCFI40:
 22056              		.cfi_def_cfa_offset 16
 22057 0004 00AF     		add	r7, sp, #0
 22058              		.cfi_offset 14, -4
 22059              		.cfi_offset 7, -8
 22060              	.LCFI41:
 22061              		.cfi_def_cfa_register 7
 22062 0006 0346     		mov	r3, r0
 22063 0008 3960     		str	r1, [r7, #0]
 22064 000a FB71     		strb	r3, [r7, #7]
 183:../src/lcd1202/lcd1202.c ****     lcd_str(row,
 184:../src/lcd1202/lcd1202.c ****         (lcdWidth()-strlen(str)*(fontWidth+fontSpace))>>1,
 22065              		.loc 1 184 0
 22066 000c 3868     		ldr	r0, [r7, #0]
 22067 000e FFF7FEFF 		bl	strlen
 22068 0012 0346     		mov	r3, r0
 22069 0014 1A46     		mov	r2, r3
 22070 0016 1346     		mov	r3, r2
 22071 0018 4FEA4303 		lsl	r3, r3, #1
 22072 001c 9B18     		adds	r3, r3, r2
 22073 001e 4FEA4303 		lsl	r3, r3, #1
 22074 0022 C3F16003 		rsb	r3, r3, #96
 22075 0026 4FEA5303 		lsr	r3, r3, #1
 183:../src/lcd1202/lcd1202.c ****     lcd_str(row,
 22076              		.loc 1 183 0
 22077 002a DBB2     		uxtb	r3, r3
 22078 002c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22079 002e 1046     		mov	r0, r2
 22080 0030 1946     		mov	r1, r3
 22081 0032 3A68     		ldr	r2, [r7, #0]
 22082 0034 FFF7FEFF 		bl	lcd_str
 185:../src/lcd1202/lcd1202.c ****         str);
 186:../src/lcd1202/lcd1202.c **** }
 22083              		.loc 1 186 0
 22084 0038 07F10807 		add	r7, r7, #8
 22085 003c BD46     		mov	sp, r7
 22086 003e 80BD     		pop	{r7, pc}
 22087              		.cfi_endproc
 22088              	.LFE43:
 22090              		.section	.text.lcd_big_char,"ax",%progbits
 22091              		.align	2
 22092              		.global	lcd_big_char
 22093              		.thumb
 22094              		.thumb_func
 22096              	lcd_big_char:
 22097              	.LFB44:
 187:../src/lcd1202/lcd1202.c **** 
 188:../src/lcd1202/lcd1202.c **** void lcd_big_char(uint8_t row, uint8_t col, char chr)
 189:../src/lcd1202/lcd1202.c **** {
 22098              		.loc 1 189 0
 22099              		.cfi_startproc
 22100              		@ args = 0, pretend = 0, frame = 24
 22101              		@ frame_needed = 1, uses_anonymous_args = 0
 22102 0000 80B5     		push	{r7, lr}
 22103              	.LCFI42:
 22104              		.cfi_def_cfa_offset 8
 22105 0002 86B0     		sub	sp, sp, #24
 22106              	.LCFI43:
 22107              		.cfi_def_cfa_offset 32
 22108 0004 00AF     		add	r7, sp, #0
 22109              		.cfi_offset 14, -4
 22110              		.cfi_offset 7, -8
 22111              	.LCFI44:
 22112              		.cfi_def_cfa_register 7
 22113 0006 1346     		mov	r3, r2
 22114 0008 0246     		mov	r2, r0
 22115 000a FA71     		strb	r2, [r7, #7]
 22116 000c 0A46     		mov	r2, r1
 22117 000e BA71     		strb	r2, [r7, #6]
 22118 0010 7B71     		strb	r3, [r7, #5]
 190:../src/lcd1202/lcd1202.c ****     // uint8_t* f0 = fnt_terminus_24x14_bits + chr*14*(24/8);
 191:../src/lcd1202/lcd1202.c ****     const uint8_t* f0 = fnt_libera_24x14_bits + (chr-'0')*14*(24/8);
 22119              		.loc 1 191 0
 22120 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 22121 0014 4FF02A02 		mov	r2, #42
 22122 0018 02FB03F3 		mul	r3, r2, r3
 22123 001c A3F5FC63 		sub	r3, r3, #2016
 22124 0020 1A46     		mov	r2, r3
 22125 0022 374B     		ldr	r3, .L89
 22126 0024 D318     		adds	r3, r2, r3
 22127 0026 FB60     		str	r3, [r7, #12]
 192:../src/lcd1202/lcd1202.c ****     const uint8_t* f;
 193:../src/lcd1202/lcd1202.c ****     uint8_t r, c;
 194:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 22128              		.loc 1 194 0
 22129 0028 364B     		ldr	r3, .L89+4
 22130 002a 4FF00202 		mov	r2, #2
 22131 002e 5A61     		str	r2, [r3, #20]
 195:../src/lcd1202/lcd1202.c ****     for(r = 0; r<3; r++)
 22132              		.loc 1 195 0
 22133 0030 4FF00003 		mov	r3, #0
 22134 0034 FB74     		strb	r3, [r7, #19]
 22135 0036 50E0     		b	.L83
 22136              	.L87:
 196:../src/lcd1202/lcd1202.c ****     {
 197:../src/lcd1202/lcd1202.c ****         f = f0 + r;
 22137              		.loc 1 197 0
 22138 0038 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 22139 003a FA68     		ldr	r2, [r7, #12]
 22140 003c D318     		adds	r3, r2, r3
 22141 003e 7B61     		str	r3, [r7, #20]
 198:../src/lcd1202/lcd1202.c ****         lcd_set_row(row+r);
 22142              		.loc 1 198 0
 22143 0040 FA79     		ldrb	r2, [r7, #7]
 22144 0042 FB7C     		ldrb	r3, [r7, #19]
 22145 0044 D318     		adds	r3, r2, r3
 22146 0046 DBB2     		uxtb	r3, r3
 22147 0048 DBB2     		uxtb	r3, r3
 22148 004a 03F00F03 		and	r3, r3, #15
 22149 004e DBB2     		uxtb	r3, r3
 22150 0050 63F04F03 		orn	r3, r3, #79
 22151 0054 DBB2     		uxtb	r3, r3
 22152 0056 DBB2     		uxtb	r3, r3
 22153 0058 1846     		mov	r0, r3
 22154 005a 4FF00001 		mov	r1, #0
 22155 005e FFF7FEFF 		bl	lcd_write_byte
 199:../src/lcd1202/lcd1202.c ****         lcd_set_col(col);
 22156              		.loc 1 199 0
 22157 0062 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22158 0064 4FEA1313 		lsr	r3, r3, #4
 22159 0068 DBB2     		uxtb	r3, r3
 22160 006a 43F01003 		orr	r3, r3, #16
 22161 006e DBB2     		uxtb	r3, r3
 22162 0070 1846     		mov	r0, r3
 22163 0072 4FF00001 		mov	r1, #0
 22164 0076 FFF7FEFF 		bl	lcd_write_byte
 22165 007a BB79     		ldrb	r3, [r7, #6]
 22166 007c 03F00F03 		and	r3, r3, #15
 22167 0080 DBB2     		uxtb	r3, r3
 22168 0082 1846     		mov	r0, r3
 22169 0084 4FF00001 		mov	r1, #0
 22170 0088 FFF7FEFF 		bl	lcd_write_byte
 200:../src/lcd1202/lcd1202.c ****         for(c = 0; c<14; c++)
 22171              		.loc 1 200 0
 22172 008c 4FF00003 		mov	r3, #0
 22173 0090 BB74     		strb	r3, [r7, #18]
 22174 0092 1BE0     		b	.L84
 22175              	.L86:
 22176              	.LBB4:
 201:../src/lcd1202/lcd1202.c ****         {
 202:../src/lcd1202/lcd1202.c ****             uint8_t b = *f;
 22177              		.loc 1 202 0
 22178 0094 7B69     		ldr	r3, [r7, #20]
 22179 0096 1B78     		ldrb	r3, [r3, #0]
 22180 0098 7B74     		strb	r3, [r7, #17]
 203:../src/lcd1202/lcd1202.c ****             if(lcd_flags.inverse_char) b = ~b;
 22181              		.loc 1 203 0
 22182 009a 1B4B     		ldr	r3, .L89+8
 22183 009c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 22184 009e 03F00103 		and	r3, r3, #1
 22185 00a2 DBB2     		uxtb	r3, r3
 22186 00a4 002B     		cmp	r3, #0
 22187 00a6 03D0     		beq	.L85
 22188              		.loc 1 203 0 is_stmt 0 discriminator 1
 22189 00a8 7B7C     		ldrb	r3, [r7, #17]
 22190 00aa 6FEA0303 		mvn	r3, r3
 22191 00ae 7B74     		strb	r3, [r7, #17]
 22192              	.L85:
 204:../src/lcd1202/lcd1202.c ****             lcd_write_byte(b, 1);
 22193              		.loc 1 204 0 is_stmt 1
 22194 00b0 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 22195 00b2 1846     		mov	r0, r3
 22196 00b4 4FF00101 		mov	r1, #1
 22197 00b8 FFF7FEFF 		bl	lcd_write_byte
 205:../src/lcd1202/lcd1202.c ****             f += 3;
 22198              		.loc 1 205 0
 22199 00bc 7B69     		ldr	r3, [r7, #20]
 22200 00be 03F10303 		add	r3, r3, #3
 22201 00c2 7B61     		str	r3, [r7, #20]
 22202              	.LBE4:
 200:../src/lcd1202/lcd1202.c ****         for(c = 0; c<14; c++)
 22203              		.loc 1 200 0
 22204 00c4 BB7C     		ldrb	r3, [r7, #18]
 22205 00c6 03F10103 		add	r3, r3, #1
 22206 00ca BB74     		strb	r3, [r7, #18]
 22207              	.L84:
 200:../src/lcd1202/lcd1202.c ****         for(c = 0; c<14; c++)
 22208              		.loc 1 200 0 is_stmt 0 discriminator 1
 22209 00cc BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 22210 00ce 0D2B     		cmp	r3, #13
 22211 00d0 E0D9     		bls	.L86
 195:../src/lcd1202/lcd1202.c ****     for(r = 0; r<3; r++)
 22212              		.loc 1 195 0 is_stmt 1
 22213 00d2 FB7C     		ldrb	r3, [r7, #19]
 22214 00d4 03F10103 		add	r3, r3, #1
 22215 00d8 FB74     		strb	r3, [r7, #19]
 22216              	.L83:
 195:../src/lcd1202/lcd1202.c ****     for(r = 0; r<3; r++)
 22217              		.loc 1 195 0 is_stmt 0 discriminator 1
 22218 00da FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 22219 00dc 022B     		cmp	r3, #2
 22220 00de ABD9     		bls	.L87
 22221              	.L88:
 206:../src/lcd1202/lcd1202.c ****         }
 207:../src/lcd1202/lcd1202.c ****     }
 208:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 22222              		.loc 1 208 0 is_stmt 1 discriminator 1
 22223 00e0 0A4B     		ldr	r3, .L89+12
 22224 00e2 1B88     		ldrh	r3, [r3, #0]	@ movhi
 22225 00e4 9BB2     		uxth	r3, r3
 22226 00e6 03F04003 		and	r3, r3, #64
 22227 00ea 002B     		cmp	r3, #0
 22228 00ec F8D0     		beq	.L88
 22229              		.loc 1 208 0 is_stmt 0 discriminator 2
 22230 00ee 054B     		ldr	r3, .L89+4
 22231 00f0 4FF00202 		mov	r2, #2
 22232 00f4 1A61     		str	r2, [r3, #16]
 209:../src/lcd1202/lcd1202.c **** }
 22233              		.loc 1 209 0 is_stmt 1 discriminator 2
 22234 00f6 07F11807 		add	r7, r7, #24
 22235 00fa BD46     		mov	sp, r7
 22236 00fc 80BD     		pop	{r7, pc}
 22237              	.L90:
 22238 00fe 00BF     		.align	2
 22239              	.L89:
 22240 0100 00000000 		.word	fnt_libera_24x14_bits
 22241 0104 00080140 		.word	1073809408
 22242 0108 00000000 		.word	lcd_flags
 22243 010c 00440040 		.word	1073759232
 22244              		.cfi_endproc
 22245              	.LFE44:
 22247              		.section	.text.lcd_big_str,"ax",%progbits
 22248              		.align	2
 22249              		.global	lcd_big_str
 22250              		.thumb
 22251              		.thumb_func
 22253              	lcd_big_str:
 22254              	.LFB45:
 210:../src/lcd1202/lcd1202.c **** 
 211:../src/lcd1202/lcd1202.c **** void lcd_big_str(uint8_t row, uint8_t col, const char* str)
 212:../src/lcd1202/lcd1202.c **** {
 22255              		.loc 1 212 0
 22256              		.cfi_startproc
 22257              		@ args = 0, pretend = 0, frame = 16
 22258              		@ frame_needed = 1, uses_anonymous_args = 0
 22259 0000 80B5     		push	{r7, lr}
 22260              	.LCFI45:
 22261              		.cfi_def_cfa_offset 8
 22262 0002 84B0     		sub	sp, sp, #16
 22263              	.LCFI46:
 22264              		.cfi_def_cfa_offset 24
 22265 0004 00AF     		add	r7, sp, #0
 22266              		.cfi_offset 14, -4
 22267              		.cfi_offset 7, -8
 22268              	.LCFI47:
 22269              		.cfi_def_cfa_register 7
 22270 0006 0B46     		mov	r3, r1
 22271 0008 3A60     		str	r2, [r7, #0]
 22272 000a 0246     		mov	r2, r0
 22273 000c FA71     		strb	r2, [r7, #7]
 22274 000e BB71     		strb	r3, [r7, #6]
 213:../src/lcd1202/lcd1202.c ****     char c;
 214:../src/lcd1202/lcd1202.c ****     while((c = *str++) != 0)
 22275              		.loc 1 214 0
 22276 0010 0EE0     		b	.L92
 22277              	.L94:
 215:../src/lcd1202/lcd1202.c ****     {
 216:../src/lcd1202/lcd1202.c ****         lcd_char(row, col, c);
 22278              		.loc 1 216 0
 22279 0012 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 22280 0014 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22281 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22282 0018 0846     		mov	r0, r1
 22283 001a 1146     		mov	r1, r2
 22284 001c 1A46     		mov	r2, r3
 22285 001e FFF7FEFF 		bl	lcd_char
 217:../src/lcd1202/lcd1202.c ****         col += fnt_libera_24x14_width;
 22286              		.loc 1 217 0
 22287 0022 BB79     		ldrb	r3, [r7, #6]
 22288 0024 03F11803 		add	r3, r3, #24
 22289 0028 BB71     		strb	r3, [r7, #6]
 218:../src/lcd1202/lcd1202.c ****         if(col >= lcdWidth()) return;
 22290              		.loc 1 218 0
 22291 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22292 002c 5F2B     		cmp	r3, #95
 22293 002e 0FD8     		bhi	.L95
 22294              	.L92:
 214:../src/lcd1202/lcd1202.c ****     while((c = *str++) != 0)
 22295              		.loc 1 214 0 discriminator 1
 22296 0030 3B68     		ldr	r3, [r7, #0]
 22297 0032 1B78     		ldrb	r3, [r3, #0]
 22298 0034 FB73     		strb	r3, [r7, #15]
 22299 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22300 0038 002B     		cmp	r3, #0
 22301 003a 0CBF     		ite	eq
 22302 003c 0023     		moveq	r3, #0
 22303 003e 0123     		movne	r3, #1
 22304 0040 DBB2     		uxtb	r3, r3
 22305 0042 3A68     		ldr	r2, [r7, #0]
 22306 0044 02F10102 		add	r2, r2, #1
 22307 0048 3A60     		str	r2, [r7, #0]
 22308 004a 002B     		cmp	r3, #0
 22309 004c E1D1     		bne	.L94
 22310 004e 00E0     		b	.L91
 22311              	.L95:
 22312              		.loc 1 218 0
 22313 0050 00BF     		nop
 22314              	.L91:
 219:../src/lcd1202/lcd1202.c ****     }
 220:../src/lcd1202/lcd1202.c **** }
 22315              		.loc 1 220 0
 22316 0052 07F11007 		add	r7, r7, #16
 22317 0056 BD46     		mov	sp, r7
 22318 0058 80BD     		pop	{r7, pc}
 22319              		.cfi_endproc
 22320              	.LFE45:
 22322 005a 00BF     		.section	.text.lcd_big_str_center,"ax",%progbits
 22323              		.align	2
 22324              		.global	lcd_big_str_center
 22325              		.thumb
 22326              		.thumb_func
 22328              	lcd_big_str_center:
 22329              	.LFB46:
 221:../src/lcd1202/lcd1202.c **** 
 222:../src/lcd1202/lcd1202.c **** void lcd_big_str_center(uint8_t row, const char* str)
 223:../src/lcd1202/lcd1202.c **** {
 22330              		.loc 1 223 0
 22331              		.cfi_startproc
 22332              		@ args = 0, pretend = 0, frame = 8
 22333              		@ frame_needed = 1, uses_anonymous_args = 0
 22334 0000 80B5     		push	{r7, lr}
 22335              	.LCFI48:
 22336              		.cfi_def_cfa_offset 8
 22337 0002 82B0     		sub	sp, sp, #8
 22338              	.LCFI49:
 22339              		.cfi_def_cfa_offset 16
 22340 0004 00AF     		add	r7, sp, #0
 22341              		.cfi_offset 14, -4
 22342              		.cfi_offset 7, -8
 22343              	.LCFI50:
 22344              		.cfi_def_cfa_register 7
 22345 0006 0346     		mov	r3, r0
 22346 0008 3960     		str	r1, [r7, #0]
 22347 000a FB71     		strb	r3, [r7, #7]
 224:../src/lcd1202/lcd1202.c ****     lcd_big_str(row,
 225:../src/lcd1202/lcd1202.c ****         (lcdWidth()-strlen(str)*fnt_libera_24x14_width)>>1,
 22348              		.loc 1 225 0
 22349 000c 3868     		ldr	r0, [r7, #0]
 22350 000e FFF7FEFF 		bl	strlen
 22351 0012 0246     		mov	r2, r0
 22352 0014 1346     		mov	r3, r2
 22353 0016 4FEA4303 		lsl	r3, r3, #1
 22354 001a 9B18     		adds	r3, r3, r2
 22355 001c 4FEAC303 		lsl	r3, r3, #3
 22356 0020 C3F16003 		rsb	r3, r3, #96
 22357 0024 4FEA5303 		lsr	r3, r3, #1
 224:../src/lcd1202/lcd1202.c ****     lcd_big_str(row,
 22358              		.loc 1 224 0
 22359 0028 DBB2     		uxtb	r3, r3
 22360 002a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22361 002c 1046     		mov	r0, r2
 22362 002e 1946     		mov	r1, r3
 22363 0030 3A68     		ldr	r2, [r7, #0]
 22364 0032 FFF7FEFF 		bl	lcd_big_str
 226:../src/lcd1202/lcd1202.c ****         str);
 227:../src/lcd1202/lcd1202.c **** }
 22365              		.loc 1 227 0
 22366 0036 07F10807 		add	r7, r7, #8
 22367 003a BD46     		mov	sp, r7
 22368 003c 80BD     		pop	{r7, pc}
 22369              		.cfi_endproc
 22370              	.LFE46:
 22372 003e 00BF     		.section	.text.lcd_image,"ax",%progbits
 22373              		.align	2
 22374              		.global	lcd_image
 22375              		.thumb
 22376              		.thumb_func
 22378              	lcd_image:
 22379              	.LFB47:
 228:../src/lcd1202/lcd1202.c **** 
 229:../src/lcd1202/lcd1202.c **** void lcd_image(uint8_t row, uint8_t col,
 230:../src/lcd1202/lcd1202.c ****         uint8_t height, uint8_t widht,
 231:../src/lcd1202/lcd1202.c ****         const uint8_t* img)
 232:../src/lcd1202/lcd1202.c **** {
 22380              		.loc 1 232 0
 22381              		.cfi_startproc
 22382              		@ args = 4, pretend = 0, frame = 16
 22383              		@ frame_needed = 1, uses_anonymous_args = 0
 22384 0000 80B5     		push	{r7, lr}
 22385              	.LCFI51:
 22386              		.cfi_def_cfa_offset 8
 22387 0002 84B0     		sub	sp, sp, #16
 22388              	.LCFI52:
 22389              		.cfi_def_cfa_offset 24
 22390 0004 00AF     		add	r7, sp, #0
 22391              		.cfi_offset 14, -4
 22392              		.cfi_offset 7, -8
 22393              	.LCFI53:
 22394              		.cfi_def_cfa_register 7
 22395 0006 F871     		strb	r0, [r7, #7]
 22396 0008 B971     		strb	r1, [r7, #6]
 22397 000a 7A71     		strb	r2, [r7, #5]
 22398 000c 3B71     		strb	r3, [r7, #4]
 233:../src/lcd1202/lcd1202.c ****     uint8_t r, c;
 234:../src/lcd1202/lcd1202.c ****     lcd_cs_mark();
 22399              		.loc 1 234 0
 22400 000e 344B     		ldr	r3, .L104
 22401 0010 4FF00202 		mov	r2, #2
 22402 0014 5A61     		str	r2, [r3, #20]
 235:../src/lcd1202/lcd1202.c ****     for(r = 0; r < height; r++)
 22403              		.loc 1 235 0
 22404 0016 4FF00003 		mov	r3, #0
 22405 001a FB73     		strb	r3, [r7, #15]
 22406 001c 4DE0     		b	.L98
 22407              	.L102:
 236:../src/lcd1202/lcd1202.c ****     {
 237:../src/lcd1202/lcd1202.c ****         lcd_set_row(row+r);
 22408              		.loc 1 237 0
 22409 001e FA79     		ldrb	r2, [r7, #7]
 22410 0020 FB7B     		ldrb	r3, [r7, #15]
 22411 0022 D318     		adds	r3, r2, r3
 22412 0024 DBB2     		uxtb	r3, r3
 22413 0026 DBB2     		uxtb	r3, r3
 22414 0028 03F00F03 		and	r3, r3, #15
 22415 002c DBB2     		uxtb	r3, r3
 22416 002e 63F04F03 		orn	r3, r3, #79
 22417 0032 DBB2     		uxtb	r3, r3
 22418 0034 DBB2     		uxtb	r3, r3
 22419 0036 1846     		mov	r0, r3
 22420 0038 4FF00001 		mov	r1, #0
 22421 003c FFF7FEFF 		bl	lcd_write_byte
 238:../src/lcd1202/lcd1202.c ****         lcd_set_col(col);
 22422              		.loc 1 238 0
 22423 0040 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22424 0042 4FEA1313 		lsr	r3, r3, #4
 22425 0046 DBB2     		uxtb	r3, r3
 22426 0048 43F01003 		orr	r3, r3, #16
 22427 004c DBB2     		uxtb	r3, r3
 22428 004e 1846     		mov	r0, r3
 22429 0050 4FF00001 		mov	r1, #0
 22430 0054 FFF7FEFF 		bl	lcd_write_byte
 22431 0058 BB79     		ldrb	r3, [r7, #6]
 22432 005a 03F00F03 		and	r3, r3, #15
 22433 005e DBB2     		uxtb	r3, r3
 22434 0060 1846     		mov	r0, r3
 22435 0062 4FF00001 		mov	r1, #0
 22436 0066 FFF7FEFF 		bl	lcd_write_byte
 239:../src/lcd1202/lcd1202.c ****         for(c = 0; c < widht; c++)
 22437              		.loc 1 239 0
 22438 006a 4FF00003 		mov	r3, #0
 22439 006e BB73     		strb	r3, [r7, #14]
 22440 0070 1BE0     		b	.L99
 22441              	.L101:
 22442              	.LBB5:
 240:../src/lcd1202/lcd1202.c ****         {
 241:../src/lcd1202/lcd1202.c ****             uint8_t b = *img++;
 22443              		.loc 1 241 0
 22444 0072 BB69     		ldr	r3, [r7, #24]
 22445 0074 1B78     		ldrb	r3, [r3, #0]
 22446 0076 7B73     		strb	r3, [r7, #13]
 22447 0078 BB69     		ldr	r3, [r7, #24]
 22448 007a 03F10103 		add	r3, r3, #1
 22449 007e BB61     		str	r3, [r7, #24]
 242:../src/lcd1202/lcd1202.c ****             if(lcd_flags.inverse_char) b = ~b;
 22450              		.loc 1 242 0
 22451 0080 184B     		ldr	r3, .L104+4
 22452 0082 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 22453 0084 03F00103 		and	r3, r3, #1
 22454 0088 DBB2     		uxtb	r3, r3
 22455 008a 002B     		cmp	r3, #0
 22456 008c 03D0     		beq	.L100
 22457              		.loc 1 242 0 is_stmt 0 discriminator 1
 22458 008e 7B7B     		ldrb	r3, [r7, #13]
 22459 0090 6FEA0303 		mvn	r3, r3
 22460 0094 7B73     		strb	r3, [r7, #13]
 22461              	.L100:
 243:../src/lcd1202/lcd1202.c ****             lcd_write_byte(b, 1);
 22462              		.loc 1 243 0 is_stmt 1
 22463 0096 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 22464 0098 1846     		mov	r0, r3
 22465 009a 4FF00101 		mov	r1, #1
 22466 009e FFF7FEFF 		bl	lcd_write_byte
 22467              	.LBE5:
 239:../src/lcd1202/lcd1202.c ****         for(c = 0; c < widht; c++)
 22468              		.loc 1 239 0
 22469 00a2 BB7B     		ldrb	r3, [r7, #14]
 22470 00a4 03F10103 		add	r3, r3, #1
 22471 00a8 BB73     		strb	r3, [r7, #14]
 22472              	.L99:
 239:../src/lcd1202/lcd1202.c ****         for(c = 0; c < widht; c++)
 22473              		.loc 1 239 0 is_stmt 0 discriminator 1
 22474 00aa BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 22475 00ac 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 22476 00ae 9A42     		cmp	r2, r3
 22477 00b0 DFD3     		bcc	.L101
 235:../src/lcd1202/lcd1202.c ****     for(r = 0; r < height; r++)
 22478              		.loc 1 235 0 is_stmt 1
 22479 00b2 FB7B     		ldrb	r3, [r7, #15]
 22480 00b4 03F10103 		add	r3, r3, #1
 22481 00b8 FB73     		strb	r3, [r7, #15]
 22482              	.L98:
 235:../src/lcd1202/lcd1202.c ****     for(r = 0; r < height; r++)
 22483              		.loc 1 235 0 is_stmt 0 discriminator 1
 22484 00ba FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22485 00bc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 22486 00be 9A42     		cmp	r2, r3
 22487 00c0 ADD3     		bcc	.L102
 22488              	.L103:
 244:../src/lcd1202/lcd1202.c ****         }
 245:../src/lcd1202/lcd1202.c ****     }
 246:../src/lcd1202/lcd1202.c ****     lcd_cs_release();
 22489              		.loc 1 246 0 is_stmt 1 discriminator 1
 22490 00c2 094B     		ldr	r3, .L104+8
 22491 00c4 1B88     		ldrh	r3, [r3, #0]	@ movhi
 22492 00c6 9BB2     		uxth	r3, r3
 22493 00c8 03F04003 		and	r3, r3, #64
 22494 00cc 002B     		cmp	r3, #0
 22495 00ce F8D0     		beq	.L103
 22496              		.loc 1 246 0 is_stmt 0 discriminator 2
 22497 00d0 034B     		ldr	r3, .L104
 22498 00d2 4FF00202 		mov	r2, #2
 22499 00d6 1A61     		str	r2, [r3, #16]
 247:../src/lcd1202/lcd1202.c **** }
 22500              		.loc 1 247 0 is_stmt 1 discriminator 2
 22501 00d8 07F11007 		add	r7, r7, #16
 22502 00dc BD46     		mov	sp, r7
 22503 00de 80BD     		pop	{r7, pc}
 22504              	.L105:
 22505              		.align	2
 22506              	.L104:
 22507 00e0 00080140 		.word	1073809408
 22508 00e4 00000000 		.word	lcd_flags
 22509 00e8 00440040 		.word	1073759232
 22510              		.cfi_endproc
 22511              	.LFE47:
 22513              		.section	.text.lcd_update,"ax",%progbits
 22514              		.align	2
 22515              		.global	lcd_update
 22516              		.thumb
 22517              		.thumb_func
 22519              	lcd_update:
 22520              	.LFB48:
 248:../src/lcd1202/lcd1202.c **** 
 249:../src/lcd1202/lcd1202.c **** void lcd_update (void)
 250:../src/lcd1202/lcd1202.c **** {
 22521              		.loc 1 250 0
 22522              		.cfi_startproc
 22523              		@ args = 0, pretend = 0, frame = 0
 22524              		@ frame_needed = 1, uses_anonymous_args = 0
 22525 0000 80B5     		push	{r7, lr}
 22526              	.LCFI54:
 22527              		.cfi_def_cfa_offset 8
 22528 0002 82B0     		sub	sp, sp, #8
 22529              	.LCFI55:
 22530              		.cfi_def_cfa_offset 16
 22531 0004 02AF     		add	r7, sp, #8
 22532              		.cfi_offset 14, -4
 22533              		.cfi_offset 7, -8
 22534              	.LCFI56:
 22535              		.cfi_def_cfa 7, 8
 251:../src/lcd1202/lcd1202.c **** 	lcd_image(0, 0, 8, 96, LcdCache);
 22536              		.loc 1 251 0
 22537 0006 074B     		ldr	r3, .L107
 22538 0008 0093     		str	r3, [sp, #0]
 22539 000a 4FF00000 		mov	r0, #0
 22540 000e 4FF00001 		mov	r1, #0
 22541 0012 4FF00802 		mov	r2, #8
 22542 0016 4FF06003 		mov	r3, #96
 22543 001a FFF7FEFF 		bl	lcd_image
 252:../src/lcd1202/lcd1202.c **** }
 22544              		.loc 1 252 0
 22545 001e BD46     		mov	sp, r7
 22546 0020 80BD     		pop	{r7, pc}
 22547              	.L108:
 22548 0022 00BF     		.align	2
 22549              	.L107:
 22550 0024 00000000 		.word	LcdCache
 22551              		.cfi_endproc
 22552              	.LFE48:
 22554              		.section	.text.lcd_pixel,"ax",%progbits
 22555              		.align	2
 22556              		.global	lcd_pixel
 22557              		.thumb
 22558              		.thumb_func
 22560              	lcd_pixel:
 22561              	.LFB49:
 253:../src/lcd1202/lcd1202.c **** 
 254:../src/lcd1202/lcd1202.c **** uint8_t lcd_pixel ( uint8_t x, uint8_t y, LcdPixelMode mode )
 255:../src/lcd1202/lcd1202.c **** {
 22562              		.loc 1 255 0
 22563              		.cfi_startproc
 22564              		@ args = 0, pretend = 0, frame = 24
 22565              		@ frame_needed = 1, uses_anonymous_args = 0
 22566              		@ link register save eliminated.
 22567 0000 80B4     		push	{r7}
 22568              	.LCFI57:
 22569              		.cfi_def_cfa_offset 4
 22570 0002 87B0     		sub	sp, sp, #28
 22571              	.LCFI58:
 22572              		.cfi_def_cfa_offset 32
 22573 0004 00AF     		add	r7, sp, #0
 22574              		.cfi_offset 7, -4
 22575              	.LCFI59:
 22576              		.cfi_def_cfa_register 7
 22577 0006 1346     		mov	r3, r2
 22578 0008 0246     		mov	r2, r0
 22579 000a FA71     		strb	r2, [r7, #7]
 22580 000c 0A46     		mov	r2, r1
 22581 000e BA71     		strb	r2, [r7, #6]
 22582 0010 7B71     		strb	r3, [r7, #5]
 256:../src/lcd1202/lcd1202.c ****     int  index;
 257:../src/lcd1202/lcd1202.c ****     uint8_t  offset;
 258:../src/lcd1202/lcd1202.c ****     uint8_t  data;
 259:../src/lcd1202/lcd1202.c **** 
 260:../src/lcd1202/lcd1202.c ****     // Çàùèòà îò âûõîäà çà ïðåäåëû
 261:../src/lcd1202/lcd1202.c ****     if ( x >= lcdWidth() || y >= lcdHeight()) return -1;
 22583              		.loc 1 261 0
 22584 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22585 0014 5F2B     		cmp	r3, #95
 22586 0016 02D8     		bhi	.L110
 22587              		.loc 1 261 0 is_stmt 0 discriminator 2
 22588 0018 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22589 001a 432B     		cmp	r3, #67
 22590 001c 02D9     		bls	.L111
 22591              	.L110:
 22592              		.loc 1 261 0 discriminator 1
 22593 001e 4FF0FF03 		mov	r3, #255
 22594 0022 57E0     		b	.L112
 22595              	.L111:
 262:../src/lcd1202/lcd1202.c **** 
 263:../src/lcd1202/lcd1202.c ****     // Ïåðåñ÷åò èíäåêñà è ñìåùåíèÿ
 264:../src/lcd1202/lcd1202.c ****     index = ( ( y / 8 ) * lcdWidth() ) + x;
 22596              		.loc 1 264 0 is_stmt 1
 22597 0024 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22598 0026 4FEAD303 		lsr	r3, r3, #3
 22599 002a DBB2     		uxtb	r3, r3
 22600 002c 1A46     		mov	r2, r3
 22601 002e 1346     		mov	r3, r2
 22602 0030 4FEA4303 		lsl	r3, r3, #1
 22603 0034 9B18     		adds	r3, r3, r2
 22604 0036 4FEA4313 		lsl	r3, r3, #5
 22605 003a 1A46     		mov	r2, r3
 22606 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22607 003e D318     		adds	r3, r2, r3
 22608 0040 3B61     		str	r3, [r7, #16]
 265:../src/lcd1202/lcd1202.c ****     offset  = y - ( ( y / 8 ) * 8 );
 22609              		.loc 1 265 0
 22610 0042 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22611 0044 4FEAD303 		lsr	r3, r3, #3
 22612 0048 DBB2     		uxtb	r3, r3
 22613 004a 1A46     		mov	r2, r3
 22614 004c 4FEA4212 		lsl	r2, r2, #5
 22615 0050 D31A     		subs	r3, r2, r3
 22616 0052 4FEAC303 		lsl	r3, r3, #3
 22617 0056 DAB2     		uxtb	r2, r3
 22618 0058 BB79     		ldrb	r3, [r7, #6]
 22619 005a D318     		adds	r3, r2, r3
 22620 005c FB73     		strb	r3, [r7, #15]
 266:../src/lcd1202/lcd1202.c **** 
 267:../src/lcd1202/lcd1202.c ****     data = LcdCache[ index ];
 22621              		.loc 1 267 0
 22622 005e 204A     		ldr	r2, .L116
 22623 0060 3B69     		ldr	r3, [r7, #16]
 22624 0062 D318     		adds	r3, r2, r3
 22625 0064 1B78     		ldrb	r3, [r3, #0]
 22626 0066 FB75     		strb	r3, [r7, #23]
 268:../src/lcd1202/lcd1202.c **** 
 269:../src/lcd1202/lcd1202.c ****     // Îáðàáîòêà áèòîâ
 270:../src/lcd1202/lcd1202.c **** 
 271:../src/lcd1202/lcd1202.c ****     // Ðåæèì PIXEL_OFF
 272:../src/lcd1202/lcd1202.c ****     if ( mode == PIXEL_OFF )
 22627              		.loc 1 272 0
 22628 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 22629 006a 002B     		cmp	r3, #0
 22630 006c 0ED1     		bne	.L113
 273:../src/lcd1202/lcd1202.c ****     {
 274:../src/lcd1202/lcd1202.c ****         data &= ( ~( 0x01 << offset ) );
 22631              		.loc 1 274 0
 22632 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22633 0070 4FF00102 		mov	r2, #1
 22634 0074 02FA03F3 		lsl	r3, r2, r3
 22635 0078 DBB2     		uxtb	r3, r3
 22636 007a 6FEA0303 		mvn	r3, r3
 22637 007e DAB2     		uxtb	r2, r3
 22638 0080 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 22639 0082 02EA0303 		and	r3, r2, r3
 22640 0086 DBB2     		uxtb	r3, r3
 22641 0088 FB75     		strb	r3, [r7, #23]
 22642 008a 1CE0     		b	.L114
 22643              	.L113:
 275:../src/lcd1202/lcd1202.c ****     }
 276:../src/lcd1202/lcd1202.c ****     // Ðåæèì PIXEL_ON
 277:../src/lcd1202/lcd1202.c ****     else if ( mode == PIXEL_ON )
 22644              		.loc 1 277 0
 22645 008c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 22646 008e 012B     		cmp	r3, #1
 22647 0090 0BD1     		bne	.L115
 278:../src/lcd1202/lcd1202.c ****     {
 279:../src/lcd1202/lcd1202.c ****         data |= ( 0x01 << offset );
 22648              		.loc 1 279 0
 22649 0092 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22650 0094 4FF00102 		mov	r2, #1
 22651 0098 02FA03F3 		lsl	r3, r2, r3
 22652 009c DAB2     		uxtb	r2, r3
 22653 009e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 22654 00a0 42EA0303 		orr	r3, r2, r3
 22655 00a4 DBB2     		uxtb	r3, r3
 22656 00a6 FB75     		strb	r3, [r7, #23]
 22657 00a8 0DE0     		b	.L114
 22658              	.L115:
 280:../src/lcd1202/lcd1202.c ****     }
 281:../src/lcd1202/lcd1202.c ****     // Ðåæèì PIXEL_XOR
 282:../src/lcd1202/lcd1202.c ****     else if ( mode  == PIXEL_XOR )
 22659              		.loc 1 282 0
 22660 00aa 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 22661 00ac 022B     		cmp	r3, #2
 22662 00ae 0AD1     		bne	.L114
 283:../src/lcd1202/lcd1202.c ****     {
 284:../src/lcd1202/lcd1202.c ****         data ^= ( 0x01 << offset );
 22663              		.loc 1 284 0
 22664 00b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22665 00b2 4FF00102 		mov	r2, #1
 22666 00b6 02FA03F3 		lsl	r3, r2, r3
 22667 00ba DAB2     		uxtb	r2, r3
 22668 00bc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 22669 00be 82EA0303 		eor	r3, r2, r3
 22670 00c2 DBB2     		uxtb	r3, r3
 22671 00c4 FB75     		strb	r3, [r7, #23]
 22672              	.L114:
 285:../src/lcd1202/lcd1202.c ****     }
 286:../src/lcd1202/lcd1202.c ****     LcdCache[ index ] = data;
 22673              		.loc 1 286 0
 22674 00c6 064A     		ldr	r2, .L116
 22675 00c8 3B69     		ldr	r3, [r7, #16]
 22676 00ca D318     		adds	r3, r2, r3
 22677 00cc FA7D     		ldrb	r2, [r7, #23]
 22678 00ce 1A70     		strb	r2, [r3, #0]
 287:../src/lcd1202/lcd1202.c **** 
 288:../src/lcd1202/lcd1202.c ****     return 1;
 22679              		.loc 1 288 0
 22680 00d0 4FF00103 		mov	r3, #1
 22681              	.L112:
 289:../src/lcd1202/lcd1202.c **** }
 22682              		.loc 1 289 0
 22683 00d4 1846     		mov	r0, r3
 22684 00d6 07F11C07 		add	r7, r7, #28
 22685 00da BD46     		mov	sp, r7
 22686 00dc 80BC     		pop	{r7}
 22687 00de 7047     		bx	lr
 22688              	.L117:
 22689              		.align	2
 22690              	.L116:
 22691 00e0 00000000 		.word	LcdCache
 22692              		.cfi_endproc
 22693              	.LFE49:
 22695              		.text
 22696              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 lcd1202.c
     /tmp/ccQcaxb7.s:18830  .rodata.font5x8:00000000 font5x8
     /tmp/ccQcaxb7.s:18827  .rodata.font5x8:00000000 $d
     /tmp/ccQcaxb7.s:20112  .rodata.fnt_libera_24x14_bits:00000000 $d
     /tmp/ccQcaxb7.s:20115  .rodata.fnt_libera_24x14_bits:00000000 fnt_libera_24x14_bits
     /tmp/ccQcaxb7.s:20957  .text.lcd_init_gpio:00000000 $t
     /tmp/ccQcaxb7.s:20961  .text.lcd_init_gpio:00000000 lcd_init_gpio
     /tmp/ccQcaxb7.s:20986  .text.lcd_init_gpio:00000014 $d
     /tmp/ccQcaxb7.s:20991  .text.lcd_reset:00000000 $t
     /tmp/ccQcaxb7.s:20995  .text.lcd_reset:00000000 lcd_reset
     /tmp/ccQcaxb7.s:21017  .text.lcd_write_byte:00000000 $t
     /tmp/ccQcaxb7.s:21021  .text.lcd_write_byte:00000000 lcd_write_byte
     /tmp/ccQcaxb7.s:21115  .text.lcd_write_byte:00000088 $d
     /tmp/ccQcaxb7.s:21120  .bss.LcdCache:00000000 $d
     /tmp/ccQcaxb7.s:21123  .bss.LcdCache:00000000 LcdCache
                            *COM*:00000004 lcd_flags
     /tmp/ccQcaxb7.s:21127  .text.lcd_init:00000000 $t
     /tmp/ccQcaxb7.s:21132  .text.lcd_init:00000000 lcd_init
     /tmp/ccQcaxb7.s:21225  .text.lcd_clr:00000000 lcd_clr
     /tmp/ccQcaxb7.s:21212  .text.lcd_init:00000084 $d
     /tmp/ccQcaxb7.s:21220  .text.lcd_clr:00000000 $t
     /tmp/ccQcaxb7.s:21720  .text.lcd_home:00000000 lcd_home
     /tmp/ccQcaxb7.s:21291  .text.lcd_clr:00000064 $d
     /tmp/ccQcaxb7.s:21298  .text.lcd_reverse:00000000 $t
     /tmp/ccQcaxb7.s:21303  .text.lcd_reverse:00000000 lcd_reverse
     /tmp/ccQcaxb7.s:21360  .text.lcd_reverse:00000050 $d
     /tmp/ccQcaxb7.s:21366  .text.lcd_segment_direction:00000000 $t
     /tmp/ccQcaxb7.s:21371  .text.lcd_segment_direction:00000000 lcd_segment_direction
     /tmp/ccQcaxb7.s:21428  .text.lcd_segment_direction:00000050 $d
     /tmp/ccQcaxb7.s:21434  .text.lcd_column_direction:00000000 $t
     /tmp/ccQcaxb7.s:21439  .text.lcd_column_direction:00000000 lcd_column_direction
     /tmp/ccQcaxb7.s:21496  .text.lcd_column_direction:00000050 $d
     /tmp/ccQcaxb7.s:21502  .text.lcd_contrast:00000000 $t
     /tmp/ccQcaxb7.s:21507  .text.lcd_contrast:00000000 lcd_contrast
     /tmp/ccQcaxb7.s:21562  .text.lcd_contrast:00000050 $d
     /tmp/ccQcaxb7.s:21568  .text.lcd_inverse_line:00000000 $t
     /tmp/ccQcaxb7.s:21573  .text.lcd_inverse_line:00000000 lcd_inverse_line
     /tmp/ccQcaxb7.s:21646  .text.lcd_inverse_line:00000078 $d
     /tmp/ccQcaxb7.s:21652  .text.lcd_start_line:00000000 $t
     /tmp/ccQcaxb7.s:21657  .text.lcd_start_line:00000000 lcd_start_line
     /tmp/ccQcaxb7.s:21709  .text.lcd_start_line:0000004c $d
     /tmp/ccQcaxb7.s:21715  .text.lcd_home:00000000 $t
     /tmp/ccQcaxb7.s:21766  .text.lcd_home:00000048 $d
     /tmp/ccQcaxb7.s:21772  .text.lcd_char:00000000 $t
     /tmp/ccQcaxb7.s:21777  .text.lcd_char:00000000 lcd_char
     /tmp/ccQcaxb7.s:21953  .text.lcd_char:00000140 $d
     /tmp/ccQcaxb7.s:21961  .text.lcd_str:00000000 $t
     /tmp/ccQcaxb7.s:21966  .text.lcd_str:00000000 lcd_str
     /tmp/ccQcaxb7.s:22040  .text.lcd_str_center:00000000 $t
     /tmp/ccQcaxb7.s:22045  .text.lcd_str_center:00000000 lcd_str_center
     /tmp/ccQcaxb7.s:22091  .text.lcd_big_char:00000000 $t
     /tmp/ccQcaxb7.s:22096  .text.lcd_big_char:00000000 lcd_big_char
     /tmp/ccQcaxb7.s:22240  .text.lcd_big_char:00000100 $d
     /tmp/ccQcaxb7.s:22248  .text.lcd_big_str:00000000 $t
     /tmp/ccQcaxb7.s:22253  .text.lcd_big_str:00000000 lcd_big_str
     /tmp/ccQcaxb7.s:22323  .text.lcd_big_str_center:00000000 $t
     /tmp/ccQcaxb7.s:22328  .text.lcd_big_str_center:00000000 lcd_big_str_center
     /tmp/ccQcaxb7.s:22373  .text.lcd_image:00000000 $t
     /tmp/ccQcaxb7.s:22378  .text.lcd_image:00000000 lcd_image
     /tmp/ccQcaxb7.s:22507  .text.lcd_image:000000e0 $d
     /tmp/ccQcaxb7.s:22514  .text.lcd_update:00000000 $t
     /tmp/ccQcaxb7.s:22519  .text.lcd_update:00000000 lcd_update
     /tmp/ccQcaxb7.s:22550  .text.lcd_update:00000024 $d
     /tmp/ccQcaxb7.s:22555  .text.lcd_pixel:00000000 $t
     /tmp/ccQcaxb7.s:22560  .text.lcd_pixel:00000000 lcd_pixel
     /tmp/ccQcaxb7.s:22691  .text.lcd_pixel:000000e0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
strlen
