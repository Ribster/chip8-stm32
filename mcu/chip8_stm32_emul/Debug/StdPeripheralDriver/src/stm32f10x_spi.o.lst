   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_spi.c"
  23              	.Ltext0:
  24              		.file 1 "../StdPeripheralDriver/src/stm32f10x_spi.c"
 17970              		.align	2
 17971              		.global	SPI_I2S_DeInit
 17972              		.thumb
 17973              		.thumb_func
 17975              	SPI_I2S_DeInit:
 17976              	.LFB29:
   1:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_spi.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @file    stm32f10x_spi.c
   4:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief   This file provides all the SPI firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_spi.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_spi.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_spi.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_spi.c **** #include "stm32f10x_spi.h"
  24:../StdPeripheralDriver/src/stm32f10x_spi.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_spi.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @{
  28:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
  29:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_spi.c **** /** @defgroup SPI 
  31:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief SPI driver modules
  32:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @{
  33:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */ 
  34:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @{
  37:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
  38:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  39:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
  40:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @}
  41:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */ 
  42:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  43:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  44:../StdPeripheralDriver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Defines
  45:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @{
  46:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
  47:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  48:../StdPeripheralDriver/src/stm32f10x_spi.c **** /* SPI SPE mask */
  49:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define CR1_SPE_Set          ((uint16_t)0x0040)
  50:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define CR1_SPE_Reset        ((uint16_t)0xFFBF)
  51:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  52:../StdPeripheralDriver/src/stm32f10x_spi.c **** /* I2S I2SE mask */
  53:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Set     ((uint16_t)0x0400)
  54:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Reset   ((uint16_t)0xFBFF)
  55:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  56:../StdPeripheralDriver/src/stm32f10x_spi.c **** /* SPI CRCNext mask */
  57:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define CR1_CRCNext_Set      ((uint16_t)0x1000)
  58:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  59:../StdPeripheralDriver/src/stm32f10x_spi.c **** /* SPI CRCEN mask */
  60:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Set        ((uint16_t)0x2000)
  61:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Reset      ((uint16_t)0xDFFF)
  62:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  63:../StdPeripheralDriver/src/stm32f10x_spi.c **** /* SPI SSOE mask */
  64:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define CR2_SSOE_Set         ((uint16_t)0x0004)
  65:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define CR2_SSOE_Reset       ((uint16_t)0xFFFB)
  66:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  67:../StdPeripheralDriver/src/stm32f10x_spi.c **** /* SPI registers Masks */
  68:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define CR1_CLEAR_Mask       ((uint16_t)0x3040)
  69:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define I2SCFGR_CLEAR_Mask   ((uint16_t)0xF040)
  70:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  71:../StdPeripheralDriver/src/stm32f10x_spi.c **** /* SPI or I2S mode selection masks */
  72:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define SPI_Mode_Select      ((uint16_t)0xF7FF)
  73:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define I2S_Mode_Select      ((uint16_t)0x0800) 
  74:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  75:../StdPeripheralDriver/src/stm32f10x_spi.c **** /* I2S clock source selection masks */
  76:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define I2S2_CLOCK_SRC       ((uint32_t)(0x00020000))
  77:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define I2S3_CLOCK_SRC       ((uint32_t)(0x00040000))
  78:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define I2S_MUL_MASK         ((uint32_t)(0x0000F000))
  79:../StdPeripheralDriver/src/stm32f10x_spi.c **** #define I2S_DIV_MASK         ((uint32_t)(0x000000F0))
  80:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  81:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
  82:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @}
  83:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
  84:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  85:../StdPeripheralDriver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Macros
  86:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @{
  87:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
  88:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  89:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
  90:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @}
  91:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
  92:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  93:../StdPeripheralDriver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Variables
  94:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @{
  95:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
  96:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
  97:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
  98:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @}
  99:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 100:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 101:../StdPeripheralDriver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_FunctionPrototypes
 102:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @{
 103:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 104:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 105:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 106:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @}
 107:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 108:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 109:../StdPeripheralDriver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Functions
 110:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @{
 111:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 112:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 113:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 114:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Deinitializes the SPIx peripheral registers to their default
 115:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *         reset values (Affects also the I2Ss).
 116:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 117:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 118:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 119:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 120:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 17977              		.loc 1 120 0
 17978              		.cfi_startproc
 17979              		@ args = 0, pretend = 0, frame = 8
 17980              		@ frame_needed = 1, uses_anonymous_args = 0
 17981 0000 80B5     		push	{r7, lr}
 17982              	.LCFI0:
 17983              		.cfi_def_cfa_offset 8
 17984 0002 82B0     		sub	sp, sp, #8
 17985              	.LCFI1:
 17986              		.cfi_def_cfa_offset 16
 17987 0004 00AF     		add	r7, sp, #0
 17988              		.cfi_offset 14, -4
 17989              		.cfi_offset 7, -8
 17990              	.LCFI2:
 17991              		.cfi_def_cfa_register 7
 17992 0006 7860     		str	r0, [r7, #4]
 121:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 122:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 123:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 124:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (SPIx == SPI1)
 17993              		.loc 1 124 0
 17994 0008 7A68     		ldr	r2, [r7, #4]
 17995 000a 1A4B     		ldr	r3, .L5
 17996 000c 9A42     		cmp	r2, r3
 17997 000e 0CD1     		bne	.L2
 125:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 126:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Enable SPI1 reset state */
 127:../StdPeripheralDriver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
 17998              		.loc 1 127 0
 17999 0010 4FF48050 		mov	r0, #4096
 18000 0014 4FF00101 		mov	r1, #1
 18001 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 128:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Release SPI1 from reset state */
 129:../StdPeripheralDriver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
 18002              		.loc 1 129 0
 18003 001c 4FF48050 		mov	r0, #4096
 18004 0020 4FF00001 		mov	r1, #0
 18005 0024 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 18006 0028 20E0     		b	.L1
 18007              	.L2:
 130:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 131:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else if (SPIx == SPI2)
 18008              		.loc 1 131 0
 18009 002a 7A68     		ldr	r2, [r7, #4]
 18010 002c 124B     		ldr	r3, .L5+4
 18011 002e 9A42     		cmp	r2, r3
 18012 0030 0CD1     		bne	.L4
 132:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 133:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Enable SPI2 reset state */
 134:../StdPeripheralDriver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
 18013              		.loc 1 134 0
 18014 0032 4FF48040 		mov	r0, #16384
 18015 0036 4FF00101 		mov	r1, #1
 18016 003a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 135:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Release SPI2 from reset state */
 136:../StdPeripheralDriver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
 18017              		.loc 1 136 0
 18018 003e 4FF48040 		mov	r0, #16384
 18019 0042 4FF00001 		mov	r1, #0
 18020 0046 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 18021 004a 0FE0     		b	.L1
 18022              	.L4:
 137:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 138:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 139:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 140:../StdPeripheralDriver/src/stm32f10x_spi.c ****     if (SPIx == SPI3)
 18023              		.loc 1 140 0
 18024 004c 7A68     		ldr	r2, [r7, #4]
 18025 004e 0B4B     		ldr	r3, .L5+8
 18026 0050 9A42     		cmp	r2, r3
 18027 0052 0BD1     		bne	.L1
 141:../StdPeripheralDriver/src/stm32f10x_spi.c ****     {
 142:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* Enable SPI3 reset state */
 143:../StdPeripheralDriver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
 18028              		.loc 1 143 0
 18029 0054 4FF40040 		mov	r0, #32768
 18030 0058 4FF00101 		mov	r1, #1
 18031 005c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 144:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* Release SPI3 from reset state */
 145:../StdPeripheralDriver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 18032              		.loc 1 145 0
 18033 0060 4FF40040 		mov	r0, #32768
 18034 0064 4FF00001 		mov	r1, #0
 18035 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 18036              	.L1:
 146:../StdPeripheralDriver/src/stm32f10x_spi.c ****     }
 147:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 148:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18037              		.loc 1 148 0
 18038 006c 07F10807 		add	r7, r7, #8
 18039 0070 BD46     		mov	sp, r7
 18040 0072 80BD     		pop	{r7, pc}
 18041              	.L6:
 18042              		.align	2
 18043              	.L5:
 18044 0074 00300140 		.word	1073819648
 18045 0078 00380040 		.word	1073756160
 18046 007c 003C0040 		.word	1073757184
 18047              		.cfi_endproc
 18048              	.LFE29:
 18050              		.section	.text.SPI_Init,"ax",%progbits
 18051              		.align	2
 18052              		.global	SPI_Init
 18053              		.thumb
 18054              		.thumb_func
 18056              	SPI_Init:
 18057              	.LFB30:
 149:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 150:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 151:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 152:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *         parameters in the SPI_InitStruct.
 153:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 154:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 155:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 156:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 157:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 158:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 159:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18058              		.loc 1 159 0
 18059              		.cfi_startproc
 18060              		@ args = 0, pretend = 0, frame = 16
 18061              		@ frame_needed = 1, uses_anonymous_args = 0
 18062              		@ link register save eliminated.
 18063 0000 80B4     		push	{r7}
 18064              	.LCFI3:
 18065              		.cfi_def_cfa_offset 4
 18066 0002 85B0     		sub	sp, sp, #20
 18067              	.LCFI4:
 18068              		.cfi_def_cfa_offset 24
 18069 0004 00AF     		add	r7, sp, #0
 18070              		.cfi_offset 7, -4
 18071              	.LCFI5:
 18072              		.cfi_def_cfa_register 7
 18073 0006 7860     		str	r0, [r7, #4]
 18074 0008 3960     		str	r1, [r7, #0]
 160:../StdPeripheralDriver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0;
 18075              		.loc 1 160 0
 18076 000a 4FF00003 		mov	r3, #0
 18077 000e FB81     		strh	r3, [r7, #14]	@ movhi
 161:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 162:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* check the parameters */
 163:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));   
 164:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 165:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the SPI parameters */
 166:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 167:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 168:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 169:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 170:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 171:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 172:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 173:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 174:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 175:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 176:../StdPeripheralDriver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 177:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Get the SPIx CR1 value */
 178:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg = SPIx->CR1;
 18078              		.loc 1 178 0
 18079 0010 7B68     		ldr	r3, [r7, #4]
 18080 0012 1B88     		ldrh	r3, [r3, #0]	@ movhi
 18081 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 179:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 180:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg &= CR1_CLEAR_Mask;
 18082              		.loc 1 180 0
 18083 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18084 0018 03F44153 		and	r3, r3, #12352
 18085 001c FB81     		strh	r3, [r7, #14]	@ movhi
 181:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 182:../StdPeripheralDriver/src/stm32f10x_spi.c ****      master/salve mode, CPOL and CPHA */
 183:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 184:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 185:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 186:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 187:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 188:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 189:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 18086              		.loc 1 189 0
 18087 001e 3B68     		ldr	r3, [r7, #0]
 18088 0020 1A88     		ldrh	r2, [r3, #0]
 18089 0022 3B68     		ldr	r3, [r7, #0]
 18090 0024 5B88     		ldrh	r3, [r3, #2]
 18091 0026 42EA0303 		orr	r3, r2, r3
 18092 002a 9AB2     		uxth	r2, r3
 190:../StdPeripheralDriver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 18093              		.loc 1 190 0
 18094 002c 3B68     		ldr	r3, [r7, #0]
 18095 002e 9B88     		ldrh	r3, [r3, #4]
 189:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 18096              		.loc 1 189 0
 18097 0030 42EA0303 		orr	r3, r2, r3
 18098 0034 9AB2     		uxth	r2, r3
 18099              		.loc 1 190 0
 18100 0036 3B68     		ldr	r3, [r7, #0]
 18101 0038 DB88     		ldrh	r3, [r3, #6]
 189:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 18102              		.loc 1 189 0
 18103 003a 42EA0303 		orr	r3, r2, r3
 18104 003e 9AB2     		uxth	r2, r3
 191:../StdPeripheralDriver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 18105              		.loc 1 191 0
 18106 0040 3B68     		ldr	r3, [r7, #0]
 18107 0042 1B89     		ldrh	r3, [r3, #8]
 189:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 18108              		.loc 1 189 0
 18109 0044 42EA0303 		orr	r3, r2, r3
 18110 0048 9AB2     		uxth	r2, r3
 18111              		.loc 1 191 0
 18112 004a 3B68     		ldr	r3, [r7, #0]
 18113 004c 5B89     		ldrh	r3, [r3, #10]
 189:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 18114              		.loc 1 189 0
 18115 004e 42EA0303 		orr	r3, r2, r3
 18116 0052 9AB2     		uxth	r2, r3
 192:../StdPeripheralDriver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 18117              		.loc 1 192 0
 18118 0054 3B68     		ldr	r3, [r7, #0]
 18119 0056 9B89     		ldrh	r3, [r3, #12]
 189:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 18120              		.loc 1 189 0
 18121 0058 42EA0303 		orr	r3, r2, r3
 18122 005c 9AB2     		uxth	r2, r3
 18123              		.loc 1 192 0
 18124 005e 3B68     		ldr	r3, [r7, #0]
 18125 0060 DB89     		ldrh	r3, [r3, #14]
 189:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 18126              		.loc 1 189 0
 18127 0062 42EA0303 		orr	r3, r2, r3
 18128 0066 9AB2     		uxth	r2, r3
 18129 0068 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18130 006a 42EA0303 		orr	r3, r2, r3
 18131 006e FB81     		strh	r3, [r7, #14]	@ movhi
 193:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Write to SPIx CR1 */
 194:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->CR1 = tmpreg;
 18132              		.loc 1 194 0
 18133 0070 7B68     		ldr	r3, [r7, #4]
 18134 0072 FA89     		ldrh	r2, [r7, #14]	@ movhi
 18135 0074 1A80     		strh	r2, [r3, #0]	@ movhi
 195:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 196:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 197:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= SPI_Mode_Select;		
 18136              		.loc 1 197 0
 18137 0076 7B68     		ldr	r3, [r7, #4]
 18138 0078 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 18139 007a 9BB2     		uxth	r3, r3
 18140 007c 23F40063 		bic	r3, r3, #2048
 18141 0080 9AB2     		uxth	r2, r3
 18142 0082 7B68     		ldr	r3, [r7, #4]
 18143 0084 9A83     		strh	r2, [r3, #28]	@ movhi
 198:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 199:../StdPeripheralDriver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 200:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Write to SPIx CRCPOLY */
 201:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 18144              		.loc 1 201 0
 18145 0086 3B68     		ldr	r3, [r7, #0]
 18146 0088 1A8A     		ldrh	r2, [r3, #16]
 18147 008a 7B68     		ldr	r3, [r7, #4]
 18148 008c 1A82     		strh	r2, [r3, #16]	@ movhi
 202:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18149              		.loc 1 202 0
 18150 008e 07F11407 		add	r7, r7, #20
 18151 0092 BD46     		mov	sp, r7
 18152 0094 80BC     		pop	{r7}
 18153 0096 7047     		bx	lr
 18154              		.cfi_endproc
 18155              	.LFE30:
 18157              		.section	.text.I2S_Init,"ax",%progbits
 18158              		.align	2
 18159              		.global	I2S_Init
 18160              		.thumb
 18161              		.thumb_func
 18163              	I2S_Init:
 18164              	.LFB31:
 203:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 204:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 205:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 206:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *         parameters in the I2S_InitStruct.
 207:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral
 208:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *         (configured in I2S mode).
 209:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 210:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 211:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *         configured in I2S mode.
 212:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @note
 213:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *  The function calculates the optimal prescaler needed to obtain the most 
 214:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *  accurate audio frequency (depending on the I2S clock source, the PLL values 
 215:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *  and the product configuration). But in case the prescaler value is greater 
 216:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *  than 511, the default value (0x02) will be configured instead.  *   
 217:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 218:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 219:../StdPeripheralDriver/src/stm32f10x_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 220:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18165              		.loc 1 220 0
 18166              		.cfi_startproc
 18167              		@ args = 0, pretend = 0, frame = 48
 18168              		@ frame_needed = 1, uses_anonymous_args = 0
 18169 0000 80B5     		push	{r7, lr}
 18170              	.LCFI6:
 18171              		.cfi_def_cfa_offset 8
 18172 0002 8CB0     		sub	sp, sp, #48
 18173              	.LCFI7:
 18174              		.cfi_def_cfa_offset 56
 18175 0004 00AF     		add	r7, sp, #0
 18176              		.cfi_offset 14, -4
 18177              		.cfi_offset 7, -8
 18178              	.LCFI8:
 18179              		.cfi_def_cfa_register 7
 18180 0006 7860     		str	r0, [r7, #4]
 18181 0008 3960     		str	r1, [r7, #0]
 221:../StdPeripheralDriver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 18182              		.loc 1 221 0
 18183 000a 4FF00003 		mov	r3, #0
 18184 000e 7B84     		strh	r3, [r7, #34]	@ movhi
 18185 0010 4FF00203 		mov	r3, #2
 18186 0014 FB85     		strh	r3, [r7, #46]	@ movhi
 18187 0016 4FF00003 		mov	r3, #0
 18188 001a BB85     		strh	r3, [r7, #44]	@ movhi
 18189 001c 4FF00103 		mov	r3, #1
 18190 0020 7B85     		strh	r3, [r7, #42]	@ movhi
 222:../StdPeripheralDriver/src/stm32f10x_spi.c ****   uint32_t tmp = 0;
 18191              		.loc 1 222 0
 18192 0022 4FF00003 		mov	r3, #0
 18193 0026 7B62     		str	r3, [r7, #36]
 223:../StdPeripheralDriver/src/stm32f10x_spi.c ****   RCC_ClocksTypeDef RCC_Clocks;
 224:../StdPeripheralDriver/src/stm32f10x_spi.c ****   uint32_t sourceclock = 0;
 18194              		.loc 1 224 0
 18195 0028 4FF00003 		mov	r3, #0
 18196 002c FB61     		str	r3, [r7, #28]
 225:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 226:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the I2S parameters */
 227:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 228:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 229:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 230:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 231:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 232:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 233:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 234:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 235:../StdPeripheralDriver/src/stm32f10x_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 236:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 237:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_Mask; 
 18197              		.loc 1 237 0
 18198 002e 7B68     		ldr	r3, [r7, #4]
 18199 0030 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 18200 0032 9BB2     		uxth	r3, r3
 18201 0034 23F47A63 		bic	r3, r3, #4000
 18202 0038 23F01F03 		bic	r3, r3, #31
 18203 003c 9AB2     		uxth	r2, r3
 18204 003e 7B68     		ldr	r3, [r7, #4]
 18205 0040 9A83     		strh	r2, [r3, #28]	@ movhi
 238:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->I2SPR = 0x0002;
 18206              		.loc 1 238 0
 18207 0042 7B68     		ldr	r3, [r7, #4]
 18208 0044 4FF00202 		mov	r2, #2
 18209 0048 1A84     		strh	r2, [r3, #32]	@ movhi
 239:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 240:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Get the I2SCFGR register value */
 241:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg = SPIx->I2SCFGR;
 18210              		.loc 1 241 0
 18211 004a 7B68     		ldr	r3, [r7, #4]
 18212 004c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 18213 004e 7B84     		strh	r3, [r7, #34]	@ movhi
 242:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 243:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 244:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 18214              		.loc 1 244 0
 18215 0050 3B68     		ldr	r3, [r7, #0]
 18216 0052 9B68     		ldr	r3, [r3, #8]
 18217 0054 022B     		cmp	r3, #2
 18218 0056 06D1     		bne	.L9
 245:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 246:../StdPeripheralDriver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)0;
 18219              		.loc 1 246 0
 18220 0058 4FF00003 		mov	r3, #0
 18221 005c BB85     		strh	r3, [r7, #44]	@ movhi
 247:../StdPeripheralDriver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)2;   
 18222              		.loc 1 247 0
 18223 005e 4FF00203 		mov	r3, #2
 18224 0062 FB85     		strh	r3, [r7, #46]	@ movhi
 18225 0064 61E0     		b	.L10
 18226              	.L9:
 248:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 249:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 250:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 251:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 252:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Check the frame length (For the Prescaler computing) */
 253:../StdPeripheralDriver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 18227              		.loc 1 253 0
 18228 0066 3B68     		ldr	r3, [r7, #0]
 18229 0068 9B88     		ldrh	r3, [r3, #4]
 18230 006a 002B     		cmp	r3, #0
 18231 006c 03D1     		bne	.L11
 254:../StdPeripheralDriver/src/stm32f10x_spi.c ****     {
 255:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* Packet length is 16 bits */
 256:../StdPeripheralDriver/src/stm32f10x_spi.c ****       packetlength = 1;
 18232              		.loc 1 256 0
 18233 006e 4FF00103 		mov	r3, #1
 18234 0072 7B85     		strh	r3, [r7, #42]	@ movhi
 18235 0074 02E0     		b	.L12
 18236              	.L11:
 257:../StdPeripheralDriver/src/stm32f10x_spi.c ****     }
 258:../StdPeripheralDriver/src/stm32f10x_spi.c ****     else
 259:../StdPeripheralDriver/src/stm32f10x_spi.c ****     {
 260:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* Packet length is 32 bits */
 261:../StdPeripheralDriver/src/stm32f10x_spi.c ****       packetlength = 2;
 18237              		.loc 1 261 0
 18238 0076 4FF00203 		mov	r3, #2
 18239 007a 7B85     		strh	r3, [r7, #42]	@ movhi
 18240              	.L12:
 262:../StdPeripheralDriver/src/stm32f10x_spi.c ****     }
 263:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 264:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Get the I2S clock source mask depending on the peripheral number */
 265:../StdPeripheralDriver/src/stm32f10x_spi.c ****     if(((uint32_t)SPIx) == SPI2_BASE)
 18241              		.loc 1 265 0
 18242 007c 7A68     		ldr	r2, [r7, #4]
 18243 007e 464B     		ldr	r3, .L19
 18244 0080 9A42     		cmp	r2, r3
 18245 0082 03D1     		bne	.L13
 266:../StdPeripheralDriver/src/stm32f10x_spi.c ****     {
 267:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S2 */
 268:../StdPeripheralDriver/src/stm32f10x_spi.c ****       tmp = I2S2_CLOCK_SRC;
 18246              		.loc 1 268 0
 18247 0084 4FF40033 		mov	r3, #131072
 18248 0088 7B62     		str	r3, [r7, #36]
 18249 008a 02E0     		b	.L14
 18250              	.L13:
 269:../StdPeripheralDriver/src/stm32f10x_spi.c ****     }
 270:../StdPeripheralDriver/src/stm32f10x_spi.c ****     else 
 271:../StdPeripheralDriver/src/stm32f10x_spi.c ****     {
 272:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S3 */      
 273:../StdPeripheralDriver/src/stm32f10x_spi.c ****       tmp = I2S3_CLOCK_SRC;
 18251              		.loc 1 273 0
 18252 008c 4FF48023 		mov	r3, #262144
 18253 0090 7B62     		str	r3, [r7, #36]
 18254              	.L14:
 274:../StdPeripheralDriver/src/stm32f10x_spi.c ****     }
 275:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 276:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Check the I2S clock source configuration depending on the Device:
 277:../StdPeripheralDriver/src/stm32f10x_spi.c ****        Only Connectivity line devices have the PLL3 VCO clock */
 278:../StdPeripheralDriver/src/stm32f10x_spi.c **** #ifdef STM32F10X_CL
 279:../StdPeripheralDriver/src/stm32f10x_spi.c ****     if((RCC->CFGR2 & tmp) != 0)
 280:../StdPeripheralDriver/src/stm32f10x_spi.c ****     {
 281:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* Get the configuration bits of RCC PLL3 multiplier */
 282:../StdPeripheralDriver/src/stm32f10x_spi.c ****       tmp = (uint32_t)((RCC->CFGR2 & I2S_MUL_MASK) >> 12);
 283:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 284:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* Get the value of the PLL3 multiplier */      
 285:../StdPeripheralDriver/src/stm32f10x_spi.c ****       if((tmp > 5) && (tmp < 15))
 286:../StdPeripheralDriver/src/stm32f10x_spi.c ****       {
 287:../StdPeripheralDriver/src/stm32f10x_spi.c ****         /* Multiplier is between 8 and 14 (value 15 is forbidden) */
 288:../StdPeripheralDriver/src/stm32f10x_spi.c ****         tmp += 2;
 289:../StdPeripheralDriver/src/stm32f10x_spi.c ****       }
 290:../StdPeripheralDriver/src/stm32f10x_spi.c ****       else
 291:../StdPeripheralDriver/src/stm32f10x_spi.c ****       {
 292:../StdPeripheralDriver/src/stm32f10x_spi.c ****         if (tmp == 15)
 293:../StdPeripheralDriver/src/stm32f10x_spi.c ****         {
 294:../StdPeripheralDriver/src/stm32f10x_spi.c ****           /* Multiplier is 20 */
 295:../StdPeripheralDriver/src/stm32f10x_spi.c ****           tmp = 20;
 296:../StdPeripheralDriver/src/stm32f10x_spi.c ****         }
 297:../StdPeripheralDriver/src/stm32f10x_spi.c ****       }      
 298:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* Get the PREDIV2 value */
 299:../StdPeripheralDriver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t)(((RCC->CFGR2 & I2S_DIV_MASK) >> 4) + 1);
 300:../StdPeripheralDriver/src/stm32f10x_spi.c ****       
 301:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* Calculate the Source Clock frequency based on PLL3 and PREDIV2 values */
 302:../StdPeripheralDriver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t) ((HSE_Value / sourceclock) * tmp * 2); 
 303:../StdPeripheralDriver/src/stm32f10x_spi.c ****     }
 304:../StdPeripheralDriver/src/stm32f10x_spi.c ****     else
 305:../StdPeripheralDriver/src/stm32f10x_spi.c ****     {
 306:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* I2S Clock source is System clock: Get System Clock frequency */
 307:../StdPeripheralDriver/src/stm32f10x_spi.c ****       RCC_GetClocksFreq(&RCC_Clocks);      
 308:../StdPeripheralDriver/src/stm32f10x_spi.c ****       
 309:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* Get the source clock value: based on System Clock value */
 310:../StdPeripheralDriver/src/stm32f10x_spi.c ****       sourceclock = RCC_Clocks.SYSCLK_Frequency;
 311:../StdPeripheralDriver/src/stm32f10x_spi.c ****     }        
 312:../StdPeripheralDriver/src/stm32f10x_spi.c **** #else /* STM32F10X_HD */
 313:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* I2S Clock source is System clock: Get System Clock frequency */
 314:../StdPeripheralDriver/src/stm32f10x_spi.c ****     RCC_GetClocksFreq(&RCC_Clocks);      
 18255              		.loc 1 314 0
 18256 0092 07F10803 		add	r3, r7, #8
 18257 0096 1846     		mov	r0, r3
 18258 0098 FFF7FEFF 		bl	RCC_GetClocksFreq
 315:../StdPeripheralDriver/src/stm32f10x_spi.c ****       
 316:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Get the source clock value: based on System Clock value */
 317:../StdPeripheralDriver/src/stm32f10x_spi.c ****     sourceclock = RCC_Clocks.SYSCLK_Frequency;    
 18259              		.loc 1 317 0
 18260 009c BB68     		ldr	r3, [r7, #8]
 18261 009e FB61     		str	r3, [r7, #28]
 318:../StdPeripheralDriver/src/stm32f10x_spi.c **** #endif /* STM32F10X_CL */    
 319:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 320:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Compute the Real divider depending on the MCLK output state with a floating point */
 321:../StdPeripheralDriver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 18262              		.loc 1 321 0
 18263 00a0 3B68     		ldr	r3, [r7, #0]
 18264 00a2 DB88     		ldrh	r3, [r3, #6]
 18265 00a4 B3F5007F 		cmp	r3, #512
 18266 00a8 13D1     		bne	.L15
 322:../StdPeripheralDriver/src/stm32f10x_spi.c ****     {
 323:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* MCLK output is enabled */
 324:../StdPeripheralDriver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 18267              		.loc 1 324 0
 18268 00aa FB69     		ldr	r3, [r7, #28]
 18269 00ac 4FEA1322 		lsr	r2, r3, #8
 18270 00b0 1346     		mov	r3, r2
 18271 00b2 4FEA8303 		lsl	r3, r3, #2
 18272 00b6 9B18     		adds	r3, r3, r2
 18273 00b8 4FEA4303 		lsl	r3, r3, #1
 18274 00bc 1A46     		mov	r2, r3
 18275 00be 3B68     		ldr	r3, [r7, #0]
 18276 00c0 9B68     		ldr	r3, [r3, #8]
 18277 00c2 B2FBF3F3 		udiv	r3, r2, r3
 18278 00c6 9BB2     		uxth	r3, r3
 18279 00c8 03F10503 		add	r3, r3, #5
 18280 00cc 9BB2     		uxth	r3, r3
 18281 00ce 7B62     		str	r3, [r7, #36]
 18282 00d0 15E0     		b	.L16
 18283              	.L15:
 325:../StdPeripheralDriver/src/stm32f10x_spi.c ****     }
 326:../StdPeripheralDriver/src/stm32f10x_spi.c ****     else
 327:../StdPeripheralDriver/src/stm32f10x_spi.c ****     {
 328:../StdPeripheralDriver/src/stm32f10x_spi.c ****       /* MCLK output is disabled */
 329:../StdPeripheralDriver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq
 18284              		.loc 1 329 0
 18285 00d2 7B8D     		ldrh	r3, [r7, #42]
 18286 00d4 4FEA4313 		lsl	r3, r3, #5
 18287 00d8 FA69     		ldr	r2, [r7, #28]
 18288 00da B2FBF3F2 		udiv	r2, r2, r3
 18289 00de 1346     		mov	r3, r2
 18290 00e0 4FEA8303 		lsl	r3, r3, #2
 18291 00e4 9B18     		adds	r3, r3, r2
 18292 00e6 4FEA4303 		lsl	r3, r3, #1
 18293 00ea 1A46     		mov	r2, r3
 18294 00ec 3B68     		ldr	r3, [r7, #0]
 18295 00ee 9B68     		ldr	r3, [r3, #8]
 18296 00f0 B2FBF3F3 		udiv	r3, r2, r3
 18297 00f4 9BB2     		uxth	r3, r3
 18298 00f6 03F10503 		add	r3, r3, #5
 18299 00fa 9BB2     		uxth	r3, r3
 18300 00fc 7B62     		str	r3, [r7, #36]
 18301              	.L16:
 330:../StdPeripheralDriver/src/stm32f10x_spi.c ****     }
 331:../StdPeripheralDriver/src/stm32f10x_spi.c ****     
 332:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Remove the floating point */
 333:../StdPeripheralDriver/src/stm32f10x_spi.c ****     tmp = tmp / 10;  
 18302              		.loc 1 333 0
 18303 00fe 7A6A     		ldr	r2, [r7, #36]
 18304 0100 264B     		ldr	r3, .L19+4
 18305 0102 A3FB0213 		umull	r1, r3, r3, r2
 18306 0106 4FEAD303 		lsr	r3, r3, #3
 18307 010a 7B62     		str	r3, [r7, #36]
 334:../StdPeripheralDriver/src/stm32f10x_spi.c ****       
 335:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Check the parity of the divider */
 336:../StdPeripheralDriver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 18308              		.loc 1 336 0
 18309 010c 7B6A     		ldr	r3, [r7, #36]
 18310 010e 9BB2     		uxth	r3, r3
 18311 0110 03F00103 		and	r3, r3, #1
 18312 0114 BB85     		strh	r3, [r7, #44]	@ movhi
 337:../StdPeripheralDriver/src/stm32f10x_spi.c ****    
 338:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Compute the i2sdiv prescaler */
 339:../StdPeripheralDriver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 18313              		.loc 1 339 0
 18314 0116 BB8D     		ldrh	r3, [r7, #44]
 18315 0118 7A6A     		ldr	r2, [r7, #36]
 18316 011a D31A     		subs	r3, r2, r3
 18317 011c 4FEA5303 		lsr	r3, r3, #1
 18318 0120 FB85     		strh	r3, [r7, #46]	@ movhi
 340:../StdPeripheralDriver/src/stm32f10x_spi.c ****    
 341:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 342:../StdPeripheralDriver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 18319              		.loc 1 342 0
 18320 0122 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 18321 0124 4FEA0323 		lsl	r3, r3, #8
 18322 0128 BB85     		strh	r3, [r7, #44]	@ movhi
 18323              	.L10:
 343:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 344:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 345:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 346:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 18324              		.loc 1 346 0
 18325 012a FB8D     		ldrh	r3, [r7, #46]
 18326 012c 012B     		cmp	r3, #1
 18327 012e 02D9     		bls	.L17
 18328              		.loc 1 346 0 is_stmt 0 discriminator 1
 18329 0130 FB8D     		ldrh	r3, [r7, #46]
 18330 0132 FF2B     		cmp	r3, #255
 18331 0134 05D9     		bls	.L18
 18332              	.L17:
 347:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 348:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Set the default values */
 349:../StdPeripheralDriver/src/stm32f10x_spi.c ****     i2sdiv = 2;
 18333              		.loc 1 349 0 is_stmt 1
 18334 0136 4FF00203 		mov	r3, #2
 18335 013a FB85     		strh	r3, [r7, #46]	@ movhi
 350:../StdPeripheralDriver/src/stm32f10x_spi.c ****     i2sodd = 0;
 18336              		.loc 1 350 0
 18337 013c 4FF00003 		mov	r3, #0
 18338 0140 BB85     		strh	r3, [r7, #44]	@ movhi
 18339              	.L18:
 351:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 352:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 353:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 354:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->I2SPR = (uint16_t)(i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCLKOutput));
 18340              		.loc 1 354 0
 18341 0142 3B68     		ldr	r3, [r7, #0]
 18342 0144 DA88     		ldrh	r2, [r3, #6]
 18343 0146 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 18344 0148 42EA0303 		orr	r3, r2, r3
 18345 014c 9AB2     		uxth	r2, r3
 18346 014e FB8D     		ldrh	r3, [r7, #46]	@ movhi
 18347 0150 42EA0303 		orr	r3, r2, r3
 18348 0154 9AB2     		uxth	r2, r3
 18349 0156 7B68     		ldr	r3, [r7, #4]
 18350 0158 1A84     		strh	r2, [r3, #32]	@ movhi
 355:../StdPeripheralDriver/src/stm32f10x_spi.c ****  
 356:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 357:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 18351              		.loc 1 357 0
 18352 015a 3B68     		ldr	r3, [r7, #0]
 18353 015c 1A88     		ldrh	r2, [r3, #0]
 358:../StdPeripheralDriver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 18354              		.loc 1 358 0
 18355 015e 3B68     		ldr	r3, [r7, #0]
 18356 0160 5988     		ldrh	r1, [r3, #2]
 18357 0162 3B68     		ldr	r3, [r7, #0]
 18358 0164 9888     		ldrh	r0, [r3, #4]
 359:../StdPeripheralDriver/src/stm32f10x_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 18359              		.loc 1 359 0
 18360 0166 3B68     		ldr	r3, [r7, #0]
 18361 0168 9B89     		ldrh	r3, [r3, #12]
 358:../StdPeripheralDriver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 18362              		.loc 1 358 0
 18363 016a 40EA0303 		orr	r3, r0, r3
 18364 016e 9BB2     		uxth	r3, r3
 18365 0170 41EA0303 		orr	r3, r1, r3
 18366 0174 9BB2     		uxth	r3, r3
 357:../StdPeripheralDriver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 18367              		.loc 1 357 0
 18368 0176 42EA0303 		orr	r3, r2, r3
 18369 017a 9AB2     		uxth	r2, r3
 18370 017c 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 18371 017e 42EA0303 		orr	r3, r2, r3
 18372 0182 9BB2     		uxth	r3, r3
 18373 0184 43F40063 		orr	r3, r3, #2048
 18374 0188 7B84     		strh	r3, [r7, #34]	@ movhi
 360:../StdPeripheralDriver/src/stm32f10x_spi.c ****  
 361:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SCFGR */  
 362:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR = tmpreg;   
 18375              		.loc 1 362 0
 18376 018a 7B68     		ldr	r3, [r7, #4]
 18377 018c 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 18378 018e 9A83     		strh	r2, [r3, #28]	@ movhi
 363:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18379              		.loc 1 363 0
 18380 0190 07F13007 		add	r7, r7, #48
 18381 0194 BD46     		mov	sp, r7
 18382 0196 80BD     		pop	{r7, pc}
 18383              	.L20:
 18384              		.align	2
 18385              	.L19:
 18386 0198 00380040 		.word	1073756160
 18387 019c CDCCCCCC 		.word	-858993459
 18388              		.cfi_endproc
 18389              	.LFE31:
 18391              		.section	.text.SPI_StructInit,"ax",%progbits
 18392              		.align	2
 18393              		.global	SPI_StructInit
 18394              		.thumb
 18395              		.thumb_func
 18397              	SPI_StructInit:
 18398              	.LFB32:
 364:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 365:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 366:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 367:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct : pointer to a SPI_InitTypeDef structure which will be initialized.
 368:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 369:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 370:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 371:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18399              		.loc 1 371 0
 18400              		.cfi_startproc
 18401              		@ args = 0, pretend = 0, frame = 8
 18402              		@ frame_needed = 1, uses_anonymous_args = 0
 18403              		@ link register save eliminated.
 18404 0000 80B4     		push	{r7}
 18405              	.LCFI9:
 18406              		.cfi_def_cfa_offset 4
 18407 0002 83B0     		sub	sp, sp, #12
 18408              	.LCFI10:
 18409              		.cfi_def_cfa_offset 16
 18410 0004 00AF     		add	r7, sp, #0
 18411              		.cfi_offset 7, -4
 18412              	.LCFI11:
 18413              		.cfi_def_cfa_register 7
 18414 0006 7860     		str	r0, [r7, #4]
 372:../StdPeripheralDriver/src/stm32f10x_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 373:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the SPI_Direction member */
 374:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 18415              		.loc 1 374 0
 18416 0008 7B68     		ldr	r3, [r7, #4]
 18417 000a 4FF00002 		mov	r2, #0
 18418 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 375:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* initialize the SPI_Mode member */
 376:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 18419              		.loc 1 376 0
 18420 0010 7B68     		ldr	r3, [r7, #4]
 18421 0012 4FF00002 		mov	r2, #0
 18422 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 377:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* initialize the SPI_DataSize member */
 378:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 18423              		.loc 1 378 0
 18424 0018 7B68     		ldr	r3, [r7, #4]
 18425 001a 4FF00002 		mov	r2, #0
 18426 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 379:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPOL member */
 380:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 18427              		.loc 1 380 0
 18428 0020 7B68     		ldr	r3, [r7, #4]
 18429 0022 4FF00002 		mov	r2, #0
 18430 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 381:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPHA member */
 382:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 18431              		.loc 1 382 0
 18432 0028 7B68     		ldr	r3, [r7, #4]
 18433 002a 4FF00002 		mov	r2, #0
 18434 002e 1A81     		strh	r2, [r3, #8]	@ movhi
 383:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the SPI_NSS member */
 384:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 18435              		.loc 1 384 0
 18436 0030 7B68     		ldr	r3, [r7, #4]
 18437 0032 4FF00002 		mov	r2, #0
 18438 0036 5A81     		strh	r2, [r3, #10]	@ movhi
 385:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 386:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 18439              		.loc 1 386 0
 18440 0038 7B68     		ldr	r3, [r7, #4]
 18441 003a 4FF00002 		mov	r2, #0
 18442 003e 9A81     		strh	r2, [r3, #12]	@ movhi
 387:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the SPI_FirstBit member */
 388:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 18443              		.loc 1 388 0
 18444 0040 7B68     		ldr	r3, [r7, #4]
 18445 0042 4FF00002 		mov	r2, #0
 18446 0046 DA81     		strh	r2, [r3, #14]	@ movhi
 389:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 390:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 18447              		.loc 1 390 0
 18448 0048 7B68     		ldr	r3, [r7, #4]
 18449 004a 4FF00702 		mov	r2, #7
 18450 004e 1A82     		strh	r2, [r3, #16]	@ movhi
 391:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18451              		.loc 1 391 0
 18452 0050 07F10C07 		add	r7, r7, #12
 18453 0054 BD46     		mov	sp, r7
 18454 0056 80BC     		pop	{r7}
 18455 0058 7047     		bx	lr
 18456              		.cfi_endproc
 18457              	.LFE32:
 18459 005a 00BF     		.section	.text.I2S_StructInit,"ax",%progbits
 18460              		.align	2
 18461              		.global	I2S_StructInit
 18462              		.thumb
 18463              		.thumb_func
 18465              	I2S_StructInit:
 18466              	.LFB33:
 392:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 393:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 394:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 395:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct : pointer to a I2S_InitTypeDef structure which will be initialized.
 396:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 397:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 398:../StdPeripheralDriver/src/stm32f10x_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 399:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18467              		.loc 1 399 0
 18468              		.cfi_startproc
 18469              		@ args = 0, pretend = 0, frame = 8
 18470              		@ frame_needed = 1, uses_anonymous_args = 0
 18471              		@ link register save eliminated.
 18472 0000 80B4     		push	{r7}
 18473              	.LCFI12:
 18474              		.cfi_def_cfa_offset 4
 18475 0002 83B0     		sub	sp, sp, #12
 18476              	.LCFI13:
 18477              		.cfi_def_cfa_offset 16
 18478 0004 00AF     		add	r7, sp, #0
 18479              		.cfi_offset 7, -4
 18480              	.LCFI14:
 18481              		.cfi_def_cfa_register 7
 18482 0006 7860     		str	r0, [r7, #4]
 400:../StdPeripheralDriver/src/stm32f10x_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 401:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Mode member */
 402:../StdPeripheralDriver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 18483              		.loc 1 402 0
 18484 0008 7B68     		ldr	r3, [r7, #4]
 18485 000a 4FF00002 		mov	r2, #0
 18486 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 403:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 404:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Standard member */
 405:../StdPeripheralDriver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 18487              		.loc 1 405 0
 18488 0010 7B68     		ldr	r3, [r7, #4]
 18489 0012 4FF00002 		mov	r2, #0
 18490 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 406:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 407:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the I2S_DataFormat member */
 408:../StdPeripheralDriver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 18491              		.loc 1 408 0
 18492 0018 7B68     		ldr	r3, [r7, #4]
 18493 001a 4FF00002 		mov	r2, #0
 18494 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 409:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 410:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 411:../StdPeripheralDriver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 18495              		.loc 1 411 0
 18496 0020 7B68     		ldr	r3, [r7, #4]
 18497 0022 4FF00002 		mov	r2, #0
 18498 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 412:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 413:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the I2S_AudioFreq member */
 414:../StdPeripheralDriver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 18499              		.loc 1 414 0
 18500 0028 7B68     		ldr	r3, [r7, #4]
 18501 002a 4FF00202 		mov	r2, #2
 18502 002e 9A60     		str	r2, [r3, #8]
 415:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 416:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Initialize the I2S_CPOL member */
 417:../StdPeripheralDriver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 18503              		.loc 1 417 0
 18504 0030 7B68     		ldr	r3, [r7, #4]
 18505 0032 4FF00002 		mov	r2, #0
 18506 0036 9A81     		strh	r2, [r3, #12]	@ movhi
 418:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18507              		.loc 1 418 0
 18508 0038 07F10C07 		add	r7, r7, #12
 18509 003c BD46     		mov	sp, r7
 18510 003e 80BC     		pop	{r7}
 18511 0040 7047     		bx	lr
 18512              		.cfi_endproc
 18513              	.LFE33:
 18515 0042 00BF     		.section	.text.SPI_Cmd,"ax",%progbits
 18516              		.align	2
 18517              		.global	SPI_Cmd
 18518              		.thumb
 18519              		.thumb_func
 18521              	SPI_Cmd:
 18522              	.LFB34:
 419:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 420:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 421:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 422:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 423:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 424:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 425:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 426:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 427:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 428:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18523              		.loc 1 428 0
 18524              		.cfi_startproc
 18525              		@ args = 0, pretend = 0, frame = 8
 18526              		@ frame_needed = 1, uses_anonymous_args = 0
 18527              		@ link register save eliminated.
 18528 0000 80B4     		push	{r7}
 18529              	.LCFI15:
 18530              		.cfi_def_cfa_offset 4
 18531 0002 83B0     		sub	sp, sp, #12
 18532              	.LCFI16:
 18533              		.cfi_def_cfa_offset 16
 18534 0004 00AF     		add	r7, sp, #0
 18535              		.cfi_offset 7, -4
 18536              	.LCFI17:
 18537              		.cfi_def_cfa_register 7
 18538 0006 7860     		str	r0, [r7, #4]
 18539 0008 0B46     		mov	r3, r1
 18540 000a FB70     		strb	r3, [r7, #3]
 429:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 430:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 431:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 432:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 18541              		.loc 1 432 0
 18542 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18543 000e 002B     		cmp	r3, #0
 18544 0010 08D0     		beq	.L24
 433:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 434:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral */
 435:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_SPE_Set;
 18545              		.loc 1 435 0
 18546 0012 7B68     		ldr	r3, [r7, #4]
 18547 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 18548 0016 9BB2     		uxth	r3, r3
 18549 0018 43F04003 		orr	r3, r3, #64
 18550 001c 9AB2     		uxth	r2, r3
 18551 001e 7B68     		ldr	r3, [r7, #4]
 18552 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 18553 0022 07E0     		b	.L23
 18554              	.L24:
 436:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 437:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 438:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 439:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral */
 440:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_SPE_Reset;
 18555              		.loc 1 440 0
 18556 0024 7B68     		ldr	r3, [r7, #4]
 18557 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 18558 0028 9BB2     		uxth	r3, r3
 18559 002a 23F04003 		bic	r3, r3, #64
 18560 002e 9AB2     		uxth	r2, r3
 18561 0030 7B68     		ldr	r3, [r7, #4]
 18562 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 18563              	.L23:
 441:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 442:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18564              		.loc 1 442 0
 18565 0034 07F10C07 		add	r7, r7, #12
 18566 0038 BD46     		mov	sp, r7
 18567 003a 80BC     		pop	{r7}
 18568 003c 7047     		bx	lr
 18569              		.cfi_endproc
 18570              	.LFE34:
 18572 003e 00BF     		.section	.text.I2S_Cmd,"ax",%progbits
 18573              		.align	2
 18574              		.global	I2S_Cmd
 18575              		.thumb
 18576              		.thumb_func
 18578              	I2S_Cmd:
 18579              	.LFB35:
 443:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 444:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 445:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 446:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral.
 447:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 448:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 449:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 450:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 451:../StdPeripheralDriver/src/stm32f10x_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 452:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18580              		.loc 1 452 0
 18581              		.cfi_startproc
 18582              		@ args = 0, pretend = 0, frame = 8
 18583              		@ frame_needed = 1, uses_anonymous_args = 0
 18584              		@ link register save eliminated.
 18585 0000 80B4     		push	{r7}
 18586              	.LCFI18:
 18587              		.cfi_def_cfa_offset 4
 18588 0002 83B0     		sub	sp, sp, #12
 18589              	.LCFI19:
 18590              		.cfi_def_cfa_offset 16
 18591 0004 00AF     		add	r7, sp, #0
 18592              		.cfi_offset 7, -4
 18593              	.LCFI20:
 18594              		.cfi_def_cfa_register 7
 18595 0006 7860     		str	r0, [r7, #4]
 18596 0008 0B46     		mov	r3, r1
 18597 000a FB70     		strb	r3, [r7, #3]
 453:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 454:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 455:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 456:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 18598              		.loc 1 456 0
 18599 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18600 000e 002B     		cmp	r3, #0
 18601 0010 08D0     		beq	.L27
 457:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 458:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 459:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR |= I2SCFGR_I2SE_Set;
 18602              		.loc 1 459 0
 18603 0012 7B68     		ldr	r3, [r7, #4]
 18604 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 18605 0016 9BB2     		uxth	r3, r3
 18606 0018 43F48063 		orr	r3, r3, #1024
 18607 001c 9AB2     		uxth	r2, r3
 18608 001e 7B68     		ldr	r3, [r7, #4]
 18609 0020 9A83     		strh	r2, [r3, #28]	@ movhi
 18610 0022 07E0     		b	.L26
 18611              	.L27:
 460:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 461:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 462:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 463:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral (in I2S mode) */
 464:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR &= I2SCFGR_I2SE_Reset;
 18612              		.loc 1 464 0
 18613 0024 7B68     		ldr	r3, [r7, #4]
 18614 0026 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 18615 0028 9BB2     		uxth	r3, r3
 18616 002a 23F48063 		bic	r3, r3, #1024
 18617 002e 9AB2     		uxth	r2, r3
 18618 0030 7B68     		ldr	r3, [r7, #4]
 18619 0032 9A83     		strh	r2, [r3, #28]	@ movhi
 18620              	.L26:
 465:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 466:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18621              		.loc 1 466 0
 18622 0034 07F10C07 		add	r7, r7, #12
 18623 0038 BD46     		mov	sp, r7
 18624 003a 80BC     		pop	{r7}
 18625 003c 7047     		bx	lr
 18626              		.cfi_endproc
 18627              	.LFE35:
 18629 003e 00BF     		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 18630              		.align	2
 18631              		.global	SPI_I2S_ITConfig
 18632              		.thumb
 18633              		.thumb_func
 18635              	SPI_I2S_ITConfig:
 18636              	.LFB36:
 467:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 468:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 469:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
 470:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 471:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 472:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 473:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to be enabled or disabled. 
 474:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 475:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
 476:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
 477:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_ERR: Error interrupt mask
 478:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the specified SPI/I2S interrupt.
 479:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 480:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 481:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 482:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
 483:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18637              		.loc 1 483 0
 18638              		.cfi_startproc
 18639              		@ args = 0, pretend = 0, frame = 16
 18640              		@ frame_needed = 1, uses_anonymous_args = 0
 18641              		@ link register save eliminated.
 18642 0000 80B4     		push	{r7}
 18643              	.LCFI21:
 18644              		.cfi_def_cfa_offset 4
 18645 0002 85B0     		sub	sp, sp, #20
 18646              	.LCFI22:
 18647              		.cfi_def_cfa_offset 24
 18648 0004 00AF     		add	r7, sp, #0
 18649              		.cfi_offset 7, -4
 18650              	.LCFI23:
 18651              		.cfi_def_cfa_register 7
 18652 0006 7860     		str	r0, [r7, #4]
 18653 0008 1346     		mov	r3, r2
 18654 000a 0A46     		mov	r2, r1
 18655 000c FA70     		strb	r2, [r7, #3]
 18656 000e BB70     		strb	r3, [r7, #2]
 484:../StdPeripheralDriver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 18657              		.loc 1 484 0
 18658 0010 4FF00003 		mov	r3, #0
 18659 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 18660 0016 4FF00003 		mov	r3, #0
 18661 001a BB81     		strh	r3, [r7, #12]	@ movhi
 485:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 486:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 487:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 488:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
 489:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 490:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 491:../StdPeripheralDriver/src/stm32f10x_spi.c ****   itpos = SPI_I2S_IT >> 4;
 18662              		.loc 1 491 0
 18663 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18664 001e 4FEA1313 		lsr	r3, r3, #4
 18665 0022 DBB2     		uxtb	r3, r3
 18666 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 492:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 493:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 494:../StdPeripheralDriver/src/stm32f10x_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 18667              		.loc 1 494 0
 18668 0026 FB89     		ldrh	r3, [r7, #14]
 18669 0028 4FF00102 		mov	r2, #1
 18670 002c 02FA03F3 		lsl	r3, r2, r3
 18671 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 495:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 496:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 18672              		.loc 1 496 0
 18673 0032 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 18674 0034 002B     		cmp	r3, #0
 18675 0036 09D0     		beq	.L30
 497:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 498:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S interrupt */
 499:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR2 |= itmask;
 18676              		.loc 1 499 0
 18677 0038 7B68     		ldr	r3, [r7, #4]
 18678 003a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 18679 003c 9AB2     		uxth	r2, r3
 18680 003e BB89     		ldrh	r3, [r7, #12]	@ movhi
 18681 0040 42EA0303 		orr	r3, r2, r3
 18682 0044 9AB2     		uxth	r2, r3
 18683 0046 7B68     		ldr	r3, [r7, #4]
 18684 0048 9A80     		strh	r2, [r3, #4]	@ movhi
 18685 004a 0BE0     		b	.L29
 18686              	.L30:
 500:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 501:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 502:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 503:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S interrupt */
 504:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 18687              		.loc 1 504 0
 18688 004c 7B68     		ldr	r3, [r7, #4]
 18689 004e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 18690 0050 9AB2     		uxth	r2, r3
 18691 0052 BB89     		ldrh	r3, [r7, #12]	@ movhi
 18692 0054 6FEA0303 		mvn	r3, r3
 18693 0058 9BB2     		uxth	r3, r3
 18694 005a 02EA0303 		and	r3, r2, r3
 18695 005e 9AB2     		uxth	r2, r3
 18696 0060 7B68     		ldr	r3, [r7, #4]
 18697 0062 9A80     		strh	r2, [r3, #4]	@ movhi
 18698              	.L29:
 505:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 506:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18699              		.loc 1 506 0
 18700 0064 07F11407 		add	r7, r7, #20
 18701 0068 BD46     		mov	sp, r7
 18702 006a 80BC     		pop	{r7}
 18703 006c 7047     		bx	lr
 18704              		.cfi_endproc
 18705              	.LFE36:
 18707 006e 00BF     		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 18708              		.align	2
 18709              		.global	SPI_I2S_DMACmd
 18710              		.thumb
 18711              		.thumb_func
 18713              	SPI_I2S_DMACmd:
 18714              	.LFB37:
 507:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 508:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 509:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 510:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 511:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 512:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 513:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI/I2S DMA transfer request to be enabled or disabled. 
 514:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be any combination of the following values:
 515:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
 516:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
 517:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the selected SPI/I2S DMA transfer request.
 518:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 519:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 520:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 521:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
 522:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18715              		.loc 1 522 0
 18716              		.cfi_startproc
 18717              		@ args = 0, pretend = 0, frame = 8
 18718              		@ frame_needed = 1, uses_anonymous_args = 0
 18719              		@ link register save eliminated.
 18720 0000 80B4     		push	{r7}
 18721              	.LCFI24:
 18722              		.cfi_def_cfa_offset 4
 18723 0002 83B0     		sub	sp, sp, #12
 18724              	.LCFI25:
 18725              		.cfi_def_cfa_offset 16
 18726 0004 00AF     		add	r7, sp, #0
 18727              		.cfi_offset 7, -4
 18728              	.LCFI26:
 18729              		.cfi_def_cfa_register 7
 18730 0006 7860     		str	r0, [r7, #4]
 18731 0008 1346     		mov	r3, r2
 18732 000a 0A46     		mov	r2, r1	@ movhi
 18733 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 18734 000e 7B70     		strb	r3, [r7, #1]
 523:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 524:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 525:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 526:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
 527:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 18735              		.loc 1 527 0
 18736 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 18737 0012 002B     		cmp	r3, #0
 18738 0014 09D0     		beq	.L33
 528:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 529:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S DMA requests */
 530:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 18739              		.loc 1 530 0
 18740 0016 7B68     		ldr	r3, [r7, #4]
 18741 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 18742 001a 9AB2     		uxth	r2, r3
 18743 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18744 001e 42EA0303 		orr	r3, r2, r3
 18745 0022 9AB2     		uxth	r2, r3
 18746 0024 7B68     		ldr	r3, [r7, #4]
 18747 0026 9A80     		strh	r2, [r3, #4]	@ movhi
 18748 0028 0BE0     		b	.L32
 18749              	.L33:
 531:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 532:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 533:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 534:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S DMA requests */
 535:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 18750              		.loc 1 535 0
 18751 002a 7B68     		ldr	r3, [r7, #4]
 18752 002c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 18753 002e 9AB2     		uxth	r2, r3
 18754 0030 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18755 0032 6FEA0303 		mvn	r3, r3
 18756 0036 9BB2     		uxth	r3, r3
 18757 0038 02EA0303 		and	r3, r2, r3
 18758 003c 9AB2     		uxth	r2, r3
 18759 003e 7B68     		ldr	r3, [r7, #4]
 18760 0040 9A80     		strh	r2, [r3, #4]	@ movhi
 18761              	.L32:
 536:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 537:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18762              		.loc 1 537 0
 18763 0042 07F10C07 		add	r7, r7, #12
 18764 0046 BD46     		mov	sp, r7
 18765 0048 80BC     		pop	{r7}
 18766 004a 7047     		bx	lr
 18767              		.cfi_endproc
 18768              	.LFE37:
 18770              		.section	.text.SPI_I2S_SendData,"ax",%progbits
 18771              		.align	2
 18772              		.global	SPI_I2S_SendData
 18773              		.thumb
 18774              		.thumb_func
 18776              	SPI_I2S_SendData:
 18777              	.LFB38:
 538:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 539:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 540:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 541:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 542:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 543:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 544:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  Data : Data to be transmitted.
 545:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 546:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 547:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 548:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18778              		.loc 1 548 0
 18779              		.cfi_startproc
 18780              		@ args = 0, pretend = 0, frame = 8
 18781              		@ frame_needed = 1, uses_anonymous_args = 0
 18782              		@ link register save eliminated.
 18783 0000 80B4     		push	{r7}
 18784              	.LCFI27:
 18785              		.cfi_def_cfa_offset 4
 18786 0002 83B0     		sub	sp, sp, #12
 18787              	.LCFI28:
 18788              		.cfi_def_cfa_offset 16
 18789 0004 00AF     		add	r7, sp, #0
 18790              		.cfi_offset 7, -4
 18791              	.LCFI29:
 18792              		.cfi_def_cfa_register 7
 18793 0006 7860     		str	r0, [r7, #4]
 18794 0008 0B46     		mov	r3, r1
 18795 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 549:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 550:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 551:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 552:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Write in the DR register the data to be sent */
 553:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->DR = Data;
 18796              		.loc 1 553 0
 18797 000c 7B68     		ldr	r3, [r7, #4]
 18798 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 18799 0010 9A81     		strh	r2, [r3, #12]	@ movhi
 554:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18800              		.loc 1 554 0
 18801 0012 07F10C07 		add	r7, r7, #12
 18802 0016 BD46     		mov	sp, r7
 18803 0018 80BC     		pop	{r7}
 18804 001a 7047     		bx	lr
 18805              		.cfi_endproc
 18806              	.LFE38:
 18808              		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 18809              		.align	2
 18810              		.global	SPI_I2S_ReceiveData
 18811              		.thumb
 18812              		.thumb_func
 18814              	SPI_I2S_ReceiveData:
 18815              	.LFB39:
 555:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 556:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 557:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 558:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 559:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 560:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 561:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval The value of the received data.
 562:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 563:../StdPeripheralDriver/src/stm32f10x_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 564:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18816              		.loc 1 564 0
 18817              		.cfi_startproc
 18818              		@ args = 0, pretend = 0, frame = 8
 18819              		@ frame_needed = 1, uses_anonymous_args = 0
 18820              		@ link register save eliminated.
 18821 0000 80B4     		push	{r7}
 18822              	.LCFI30:
 18823              		.cfi_def_cfa_offset 4
 18824 0002 83B0     		sub	sp, sp, #12
 18825              	.LCFI31:
 18826              		.cfi_def_cfa_offset 16
 18827 0004 00AF     		add	r7, sp, #0
 18828              		.cfi_offset 7, -4
 18829              	.LCFI32:
 18830              		.cfi_def_cfa_register 7
 18831 0006 7860     		str	r0, [r7, #4]
 565:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 566:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 567:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 568:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Return the data in the DR register */
 569:../StdPeripheralDriver/src/stm32f10x_spi.c ****   return SPIx->DR;
 18832              		.loc 1 569 0
 18833 0008 7B68     		ldr	r3, [r7, #4]
 18834 000a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 18835 000c 9BB2     		uxth	r3, r3
 570:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18836              		.loc 1 570 0
 18837 000e 1846     		mov	r0, r3
 18838 0010 07F10C07 		add	r7, r7, #12
 18839 0014 BD46     		mov	sp, r7
 18840 0016 80BC     		pop	{r7}
 18841 0018 7047     		bx	lr
 18842              		.cfi_endproc
 18843              	.LFE39:
 18845 001a 00BF     		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 18846              		.align	2
 18847              		.global	SPI_NSSInternalSoftwareConfig
 18848              		.thumb
 18849              		.thumb_func
 18851              	SPI_NSSInternalSoftwareConfig:
 18852              	.LFB40:
 571:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 572:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 573:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 574:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 575:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 576:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 577:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 578:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 579:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 580:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 581:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 582:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18853              		.loc 1 582 0
 18854              		.cfi_startproc
 18855              		@ args = 0, pretend = 0, frame = 8
 18856              		@ frame_needed = 1, uses_anonymous_args = 0
 18857              		@ link register save eliminated.
 18858 0000 80B4     		push	{r7}
 18859              	.LCFI33:
 18860              		.cfi_def_cfa_offset 4
 18861 0002 83B0     		sub	sp, sp, #12
 18862              	.LCFI34:
 18863              		.cfi_def_cfa_offset 16
 18864 0004 00AF     		add	r7, sp, #0
 18865              		.cfi_offset 7, -4
 18866              	.LCFI35:
 18867              		.cfi_def_cfa_register 7
 18868 0006 7860     		str	r0, [r7, #4]
 18869 0008 0B46     		mov	r3, r1
 18870 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 583:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 584:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 585:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 586:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 18871              		.loc 1 586 0
 18872 000c 7A88     		ldrh	r2, [r7, #2]
 18873 000e 4FF6FF63 		movw	r3, #65279
 18874 0012 9A42     		cmp	r2, r3
 18875 0014 08D0     		beq	.L38
 587:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 588:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Set NSS pin internally by software */
 589:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 18876              		.loc 1 589 0
 18877 0016 7B68     		ldr	r3, [r7, #4]
 18878 0018 1B88     		ldrh	r3, [r3, #0]	@ movhi
 18879 001a 9BB2     		uxth	r3, r3
 18880 001c 43F48073 		orr	r3, r3, #256
 18881 0020 9AB2     		uxth	r2, r3
 18882 0022 7B68     		ldr	r3, [r7, #4]
 18883 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 18884 0026 07E0     		b	.L37
 18885              	.L38:
 590:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 591:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 592:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 593:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Reset NSS pin internally by software */
 594:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 18886              		.loc 1 594 0
 18887 0028 7B68     		ldr	r3, [r7, #4]
 18888 002a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 18889 002c 9BB2     		uxth	r3, r3
 18890 002e 23F48073 		bic	r3, r3, #256
 18891 0032 9AB2     		uxth	r2, r3
 18892 0034 7B68     		ldr	r3, [r7, #4]
 18893 0036 1A80     		strh	r2, [r3, #0]	@ movhi
 18894              	.L37:
 595:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 596:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18895              		.loc 1 596 0
 18896 0038 07F10C07 		add	r7, r7, #12
 18897 003c BD46     		mov	sp, r7
 18898 003e 80BC     		pop	{r7}
 18899 0040 7047     		bx	lr
 18900              		.cfi_endproc
 18901              	.LFE40:
 18903 0042 00BF     		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 18904              		.align	2
 18905              		.global	SPI_SSOutputCmd
 18906              		.thumb
 18907              		.thumb_func
 18909              	SPI_SSOutputCmd:
 18910              	.LFB41:
 597:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 598:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 599:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 600:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 601:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 602:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 603:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 604:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 605:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 606:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18911              		.loc 1 606 0
 18912              		.cfi_startproc
 18913              		@ args = 0, pretend = 0, frame = 8
 18914              		@ frame_needed = 1, uses_anonymous_args = 0
 18915              		@ link register save eliminated.
 18916 0000 80B4     		push	{r7}
 18917              	.LCFI36:
 18918              		.cfi_def_cfa_offset 4
 18919 0002 83B0     		sub	sp, sp, #12
 18920              	.LCFI37:
 18921              		.cfi_def_cfa_offset 16
 18922 0004 00AF     		add	r7, sp, #0
 18923              		.cfi_offset 7, -4
 18924              	.LCFI38:
 18925              		.cfi_def_cfa_register 7
 18926 0006 7860     		str	r0, [r7, #4]
 18927 0008 0B46     		mov	r3, r1
 18928 000a FB70     		strb	r3, [r7, #3]
 607:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 608:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 609:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 610:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 18929              		.loc 1 610 0
 18930 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18931 000e 002B     		cmp	r3, #0
 18932 0010 08D0     		beq	.L41
 611:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 612:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Enable the selected SPI SS output */
 613:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR2 |= CR2_SSOE_Set;
 18933              		.loc 1 613 0
 18934 0012 7B68     		ldr	r3, [r7, #4]
 18935 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 18936 0016 9BB2     		uxth	r3, r3
 18937 0018 43F00403 		orr	r3, r3, #4
 18938 001c 9AB2     		uxth	r2, r3
 18939 001e 7B68     		ldr	r3, [r7, #4]
 18940 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 18941 0022 07E0     		b	.L40
 18942              	.L41:
 614:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 615:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 616:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 617:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Disable the selected SPI SS output */
 618:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR2 &= CR2_SSOE_Reset;
 18943              		.loc 1 618 0
 18944 0024 7B68     		ldr	r3, [r7, #4]
 18945 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 18946 0028 9BB2     		uxth	r3, r3
 18947 002a 23F00403 		bic	r3, r3, #4
 18948 002e 9AB2     		uxth	r2, r3
 18949 0030 7B68     		ldr	r3, [r7, #4]
 18950 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 18951              	.L40:
 619:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 620:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 18952              		.loc 1 620 0
 18953 0034 07F10C07 		add	r7, r7, #12
 18954 0038 BD46     		mov	sp, r7
 18955 003a 80BC     		pop	{r7}
 18956 003c 7047     		bx	lr
 18957              		.cfi_endproc
 18958              	.LFE41:
 18960 003e 00BF     		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 18961              		.align	2
 18962              		.global	SPI_DataSizeConfig
 18963              		.thumb
 18964              		.thumb_func
 18966              	SPI_DataSizeConfig:
 18967              	.LFB42:
 621:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 622:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 623:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Configures the data size for the selected SPI.
 624:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 625:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 626:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 627:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_16b: Set data frame format to 16bit
 628:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_8b: Set data frame format to 8bit
 629:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 630:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 631:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 632:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 18968              		.loc 1 632 0
 18969              		.cfi_startproc
 18970              		@ args = 0, pretend = 0, frame = 8
 18971              		@ frame_needed = 1, uses_anonymous_args = 0
 18972              		@ link register save eliminated.
 18973 0000 80B4     		push	{r7}
 18974              	.LCFI39:
 18975              		.cfi_def_cfa_offset 4
 18976 0002 83B0     		sub	sp, sp, #12
 18977              	.LCFI40:
 18978              		.cfi_def_cfa_offset 16
 18979 0004 00AF     		add	r7, sp, #0
 18980              		.cfi_offset 7, -4
 18981              	.LCFI41:
 18982              		.cfi_def_cfa_register 7
 18983 0006 7860     		str	r0, [r7, #4]
 18984 0008 0B46     		mov	r3, r1
 18985 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 633:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 634:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 635:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 636:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Clear DFF bit */
 637:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 18986              		.loc 1 637 0
 18987 000c 7B68     		ldr	r3, [r7, #4]
 18988 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 18989 0010 9BB2     		uxth	r3, r3
 18990 0012 23F40063 		bic	r3, r3, #2048
 18991 0016 9AB2     		uxth	r2, r3
 18992 0018 7B68     		ldr	r3, [r7, #4]
 18993 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 638:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Set new DFF bit value */
 639:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 18994              		.loc 1 639 0
 18995 001c 7B68     		ldr	r3, [r7, #4]
 18996 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 18997 0020 9AB2     		uxth	r2, r3
 18998 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18999 0024 42EA0303 		orr	r3, r2, r3
 19000 0028 9AB2     		uxth	r2, r3
 19001 002a 7B68     		ldr	r3, [r7, #4]
 19002 002c 1A80     		strh	r2, [r3, #0]	@ movhi
 640:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19003              		.loc 1 640 0
 19004 002e 07F10C07 		add	r7, r7, #12
 19005 0032 BD46     		mov	sp, r7
 19006 0034 80BC     		pop	{r7}
 19007 0036 7047     		bx	lr
 19008              		.cfi_endproc
 19009              	.LFE42:
 19011              		.section	.text.SPI_TransmitCRC,"ax",%progbits
 19012              		.align	2
 19013              		.global	SPI_TransmitCRC
 19014              		.thumb
 19015              		.thumb_func
 19017              	SPI_TransmitCRC:
 19018              	.LFB43:
 641:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 642:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 643:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Transmit the SPIx CRC value.
 644:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 645:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 646:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 647:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 648:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 19019              		.loc 1 648 0
 19020              		.cfi_startproc
 19021              		@ args = 0, pretend = 0, frame = 8
 19022              		@ frame_needed = 1, uses_anonymous_args = 0
 19023              		@ link register save eliminated.
 19024 0000 80B4     		push	{r7}
 19025              	.LCFI42:
 19026              		.cfi_def_cfa_offset 4
 19027 0002 83B0     		sub	sp, sp, #12
 19028              	.LCFI43:
 19029              		.cfi_def_cfa_offset 16
 19030 0004 00AF     		add	r7, sp, #0
 19031              		.cfi_offset 7, -4
 19032              	.LCFI44:
 19033              		.cfi_def_cfa_register 7
 19034 0006 7860     		str	r0, [r7, #4]
 649:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 650:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 651:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 652:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Enable the selected SPI CRC transmission */
 653:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->CR1 |= CR1_CRCNext_Set;
 19035              		.loc 1 653 0
 19036 0008 7B68     		ldr	r3, [r7, #4]
 19037 000a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 19038 000c 9BB2     		uxth	r3, r3
 19039 000e 43F48053 		orr	r3, r3, #4096
 19040 0012 9AB2     		uxth	r2, r3
 19041 0014 7B68     		ldr	r3, [r7, #4]
 19042 0016 1A80     		strh	r2, [r3, #0]	@ movhi
 654:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19043              		.loc 1 654 0
 19044 0018 07F10C07 		add	r7, r7, #12
 19045 001c BD46     		mov	sp, r7
 19046 001e 80BC     		pop	{r7}
 19047 0020 7047     		bx	lr
 19048              		.cfi_endproc
 19049              	.LFE43:
 19051 0022 00BF     		.section	.text.SPI_CalculateCRC,"ax",%progbits
 19052              		.align	2
 19053              		.global	SPI_CalculateCRC
 19054              		.thumb
 19055              		.thumb_func
 19057              	SPI_CalculateCRC:
 19058              	.LFB44:
 655:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 656:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 657:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 658:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 659:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 660:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 661:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 662:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 663:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 664:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 19059              		.loc 1 664 0
 19060              		.cfi_startproc
 19061              		@ args = 0, pretend = 0, frame = 8
 19062              		@ frame_needed = 1, uses_anonymous_args = 0
 19063              		@ link register save eliminated.
 19064 0000 80B4     		push	{r7}
 19065              	.LCFI45:
 19066              		.cfi_def_cfa_offset 4
 19067 0002 83B0     		sub	sp, sp, #12
 19068              	.LCFI46:
 19069              		.cfi_def_cfa_offset 16
 19070 0004 00AF     		add	r7, sp, #0
 19071              		.cfi_offset 7, -4
 19072              	.LCFI47:
 19073              		.cfi_def_cfa_register 7
 19074 0006 7860     		str	r0, [r7, #4]
 19075 0008 0B46     		mov	r3, r1
 19076 000a FB70     		strb	r3, [r7, #3]
 665:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 666:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 667:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 668:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 19077              		.loc 1 668 0
 19078 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 19079 000e 002B     		cmp	r3, #0
 19080 0010 08D0     		beq	.L46
 669:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 670:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Enable the selected SPI CRC calculation */
 671:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_CRCEN_Set;
 19081              		.loc 1 671 0
 19082 0012 7B68     		ldr	r3, [r7, #4]
 19083 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 19084 0016 9BB2     		uxth	r3, r3
 19085 0018 43F40053 		orr	r3, r3, #8192
 19086 001c 9AB2     		uxth	r2, r3
 19087 001e 7B68     		ldr	r3, [r7, #4]
 19088 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 19089 0022 07E0     		b	.L45
 19090              	.L46:
 672:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 673:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 674:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 675:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Disable the selected SPI CRC calculation */
 676:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_CRCEN_Reset;
 19091              		.loc 1 676 0
 19092 0024 7B68     		ldr	r3, [r7, #4]
 19093 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 19094 0028 9BB2     		uxth	r3, r3
 19095 002a 23F40053 		bic	r3, r3, #8192
 19096 002e 9AB2     		uxth	r2, r3
 19097 0030 7B68     		ldr	r3, [r7, #4]
 19098 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 19099              	.L45:
 677:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 678:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19100              		.loc 1 678 0
 19101 0034 07F10C07 		add	r7, r7, #12
 19102 0038 BD46     		mov	sp, r7
 19103 003a 80BC     		pop	{r7}
 19104 003c 7047     		bx	lr
 19105              		.cfi_endproc
 19106              	.LFE44:
 19108 003e 00BF     		.section	.text.SPI_GetCRC,"ax",%progbits
 19109              		.align	2
 19110              		.global	SPI_GetCRC
 19111              		.thumb
 19112              		.thumb_func
 19114              	SPI_GetCRC:
 19115              	.LFB45:
 679:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 680:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 681:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 682:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 683:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 684:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 685:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Tx: Selects Tx CRC register
 686:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Rx: Selects Rx CRC register
 687:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval The selected CRC register value..
 688:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 689:../StdPeripheralDriver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 690:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 19116              		.loc 1 690 0
 19117              		.cfi_startproc
 19118              		@ args = 0, pretend = 0, frame = 16
 19119              		@ frame_needed = 1, uses_anonymous_args = 0
 19120              		@ link register save eliminated.
 19121 0000 80B4     		push	{r7}
 19122              	.LCFI48:
 19123              		.cfi_def_cfa_offset 4
 19124 0002 85B0     		sub	sp, sp, #20
 19125              	.LCFI49:
 19126              		.cfi_def_cfa_offset 24
 19127 0004 00AF     		add	r7, sp, #0
 19128              		.cfi_offset 7, -4
 19129              	.LCFI50:
 19130              		.cfi_def_cfa_register 7
 19131 0006 7860     		str	r0, [r7, #4]
 19132 0008 0B46     		mov	r3, r1
 19133 000a FB70     		strb	r3, [r7, #3]
 691:../StdPeripheralDriver/src/stm32f10x_spi.c ****   uint16_t crcreg = 0;
 19134              		.loc 1 691 0
 19135 000c 4FF00003 		mov	r3, #0
 19136 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 692:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 693:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 694:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 695:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 19137              		.loc 1 695 0
 19138 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 19139 0014 012B     		cmp	r3, #1
 19140 0016 03D0     		beq	.L49
 696:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 697:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Get the Tx CRC register */
 698:../StdPeripheralDriver/src/stm32f10x_spi.c ****     crcreg = SPIx->TXCRCR;
 19141              		.loc 1 698 0
 19142 0018 7B68     		ldr	r3, [r7, #4]
 19143 001a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 19144 001c FB81     		strh	r3, [r7, #14]	@ movhi
 19145 001e 02E0     		b	.L50
 19146              	.L49:
 699:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 700:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 701:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 702:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Get the Rx CRC register */
 703:../StdPeripheralDriver/src/stm32f10x_spi.c ****     crcreg = SPIx->RXCRCR;
 19147              		.loc 1 703 0
 19148 0020 7B68     		ldr	r3, [r7, #4]
 19149 0022 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 19150 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 19151              	.L50:
 704:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 705:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Return the selected CRC register */
 706:../StdPeripheralDriver/src/stm32f10x_spi.c ****   return crcreg;
 19152              		.loc 1 706 0
 19153 0026 FB89     		ldrh	r3, [r7, #14]
 707:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19154              		.loc 1 707 0
 19155 0028 1846     		mov	r0, r3
 19156 002a 07F11407 		add	r7, r7, #20
 19157 002e BD46     		mov	sp, r7
 19158 0030 80BC     		pop	{r7}
 19159 0032 7047     		bx	lr
 19160              		.cfi_endproc
 19161              	.LFE45:
 19163              		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 19164              		.align	2
 19165              		.global	SPI_GetCRCPolynomial
 19166              		.thumb
 19167              		.thumb_func
 19169              	SPI_GetCRCPolynomial:
 19170              	.LFB46:
 708:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 709:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 710:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 711:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 712:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval The CRC Polynomial register value.
 713:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 714:../StdPeripheralDriver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 715:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 19171              		.loc 1 715 0
 19172              		.cfi_startproc
 19173              		@ args = 0, pretend = 0, frame = 8
 19174              		@ frame_needed = 1, uses_anonymous_args = 0
 19175              		@ link register save eliminated.
 19176 0000 80B4     		push	{r7}
 19177              	.LCFI51:
 19178              		.cfi_def_cfa_offset 4
 19179 0002 83B0     		sub	sp, sp, #12
 19180              	.LCFI52:
 19181              		.cfi_def_cfa_offset 16
 19182 0004 00AF     		add	r7, sp, #0
 19183              		.cfi_offset 7, -4
 19184              	.LCFI53:
 19185              		.cfi_def_cfa_register 7
 19186 0006 7860     		str	r0, [r7, #4]
 716:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 717:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 718:../StdPeripheralDriver/src/stm32f10x_spi.c ****   
 719:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Return the CRC polynomial register */
 720:../StdPeripheralDriver/src/stm32f10x_spi.c ****   return SPIx->CRCPR;
 19187              		.loc 1 720 0
 19188 0008 7B68     		ldr	r3, [r7, #4]
 19189 000a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 19190 000c 9BB2     		uxth	r3, r3
 721:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19191              		.loc 1 721 0
 19192 000e 1846     		mov	r0, r3
 19193 0010 07F10C07 		add	r7, r7, #12
 19194 0014 BD46     		mov	sp, r7
 19195 0016 80BC     		pop	{r7}
 19196 0018 7047     		bx	lr
 19197              		.cfi_endproc
 19198              	.LFE46:
 19200 001a 00BF     		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 19201              		.align	2
 19202              		.global	SPI_BiDirectionalLineConfig
 19203              		.thumb
 19204              		.thumb_func
 19206              	SPI_BiDirectionalLineConfig:
 19207              	.LFB47:
 722:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 723:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 724:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Selects the data transfer direction in bi-directional mode for the specified SPI.
 725:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 726:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bi-directional mode. 
 727:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 728:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Tx: Selects Tx transmission direction
 729:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Rx: Selects Rx receive direction
 730:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 731:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 732:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 733:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 19208              		.loc 1 733 0
 19209              		.cfi_startproc
 19210              		@ args = 0, pretend = 0, frame = 8
 19211              		@ frame_needed = 1, uses_anonymous_args = 0
 19212              		@ link register save eliminated.
 19213 0000 80B4     		push	{r7}
 19214              	.LCFI54:
 19215              		.cfi_def_cfa_offset 4
 19216 0002 83B0     		sub	sp, sp, #12
 19217              	.LCFI55:
 19218              		.cfi_def_cfa_offset 16
 19219 0004 00AF     		add	r7, sp, #0
 19220              		.cfi_offset 7, -4
 19221              	.LCFI56:
 19222              		.cfi_def_cfa_register 7
 19223 0006 7860     		str	r0, [r7, #4]
 19224 0008 0B46     		mov	r3, r1
 19225 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 734:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 735:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 736:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 737:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 19226              		.loc 1 737 0
 19227 000c 7B88     		ldrh	r3, [r7, #2]
 19228 000e B3F5804F 		cmp	r3, #16384
 19229 0012 08D1     		bne	.L53
 738:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 739:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Set the Tx only mode */
 740:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 19230              		.loc 1 740 0
 19231 0014 7B68     		ldr	r3, [r7, #4]
 19232 0016 1B88     		ldrh	r3, [r3, #0]	@ movhi
 19233 0018 9BB2     		uxth	r3, r3
 19234 001a 43F48043 		orr	r3, r3, #16384
 19235 001e 9AB2     		uxth	r2, r3
 19236 0020 7B68     		ldr	r3, [r7, #4]
 19237 0022 1A80     		strh	r2, [r3, #0]	@ movhi
 19238 0024 07E0     		b	.L52
 19239              	.L53:
 741:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 742:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 743:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 744:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Set the Rx only mode */
 745:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 19240              		.loc 1 745 0
 19241 0026 7B68     		ldr	r3, [r7, #4]
 19242 0028 1B88     		ldrh	r3, [r3, #0]	@ movhi
 19243 002a 9BB2     		uxth	r3, r3
 19244 002c 23F48043 		bic	r3, r3, #16384
 19245 0030 9AB2     		uxth	r2, r3
 19246 0032 7B68     		ldr	r3, [r7, #4]
 19247 0034 1A80     		strh	r2, [r3, #0]	@ movhi
 19248              	.L52:
 746:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 747:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19249              		.loc 1 747 0
 19250 0036 07F10C07 		add	r7, r7, #12
 19251 003a BD46     		mov	sp, r7
 19252 003c 80BC     		pop	{r7}
 19253 003e 7047     		bx	lr
 19254              		.cfi_endproc
 19255              	.LFE47:
 19257              		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 19258              		.align	2
 19259              		.global	SPI_I2S_GetFlagStatus
 19260              		.thumb
 19261              		.thumb_func
 19263              	SPI_I2S_GetFlagStatus:
 19264              	.LFB48:
 748:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 749:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 750:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S flag is set or not.
 751:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 752:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 753:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 754:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI/I2S flag to check. 
 755:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 756:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
 757:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
 758:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_BSY: Busy flag.
 759:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_OVR: Overrun flag.
 760:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_MODF: Mode Fault flag.
 761:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_CRCERR: CRC Error flag.
 762:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_UDR: Underrun Error flag.
 763:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_CHSIDE: Channel Side flag.
 764:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
 765:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 766:../StdPeripheralDriver/src/stm32f10x_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 767:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 19265              		.loc 1 767 0
 19266              		.cfi_startproc
 19267              		@ args = 0, pretend = 0, frame = 16
 19268              		@ frame_needed = 1, uses_anonymous_args = 0
 19269              		@ link register save eliminated.
 19270 0000 80B4     		push	{r7}
 19271              	.LCFI57:
 19272              		.cfi_def_cfa_offset 4
 19273 0002 85B0     		sub	sp, sp, #20
 19274              	.LCFI58:
 19275              		.cfi_def_cfa_offset 24
 19276 0004 00AF     		add	r7, sp, #0
 19277              		.cfi_offset 7, -4
 19278              	.LCFI59:
 19279              		.cfi_def_cfa_register 7
 19280 0006 7860     		str	r0, [r7, #4]
 19281 0008 0B46     		mov	r3, r1
 19282 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 768:../StdPeripheralDriver/src/stm32f10x_spi.c ****   FlagStatus bitstatus = RESET;
 19283              		.loc 1 768 0
 19284 000c 4FF00003 		mov	r3, #0
 19285 0010 FB73     		strb	r3, [r7, #15]
 769:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 770:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 771:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 772:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S flag */
 773:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 19286              		.loc 1 773 0
 19287 0012 7B68     		ldr	r3, [r7, #4]
 19288 0014 1B89     		ldrh	r3, [r3, #8]	@ movhi
 19289 0016 9AB2     		uxth	r2, r3
 19290 0018 7B88     		ldrh	r3, [r7, #2]	@ movhi
 19291 001a 02EA0303 		and	r3, r2, r3
 19292 001e 9BB2     		uxth	r3, r3
 19293 0020 002B     		cmp	r3, #0
 19294 0022 03D0     		beq	.L56
 774:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 775:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is set */
 776:../StdPeripheralDriver/src/stm32f10x_spi.c ****     bitstatus = SET;
 19295              		.loc 1 776 0
 19296 0024 4FF00103 		mov	r3, #1
 19297 0028 FB73     		strb	r3, [r7, #15]
 19298 002a 02E0     		b	.L57
 19299              	.L56:
 777:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 778:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 779:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 780:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is reset */
 781:../StdPeripheralDriver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 19300              		.loc 1 781 0
 19301 002c 4FF00003 		mov	r3, #0
 19302 0030 FB73     		strb	r3, [r7, #15]
 19303              	.L57:
 782:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 783:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_FLAG status */
 784:../StdPeripheralDriver/src/stm32f10x_spi.c ****   return  bitstatus;
 19304              		.loc 1 784 0
 19305 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 785:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19306              		.loc 1 785 0
 19307 0034 1846     		mov	r0, r3
 19308 0036 07F11407 		add	r7, r7, #20
 19309 003a BD46     		mov	sp, r7
 19310 003c 80BC     		pop	{r7}
 19311 003e 7047     		bx	lr
 19312              		.cfi_endproc
 19313              	.LFE48:
 19315              		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 19316              		.align	2
 19317              		.global	SPI_I2S_ClearFlag
 19318              		.thumb
 19319              		.thumb_func
 19321              	SPI_I2S_ClearFlag:
 19322              	.LFB49:
 786:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 787:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 788:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
 789:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 790:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 791:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
 792:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR flag.
 793:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @note
 794:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - OVR (OverRun error) flag is cleared by software sequence: a read 
 795:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
 796:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
 797:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun error) flag is cleared by a read operation to 
 798:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     SPI_SR register (SPI_I2S_GetFlagStatus()).
 799:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) flag is cleared by software sequence: a read/write 
 800:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
 801:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
 802:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 803:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 804:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 805:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 19323              		.loc 1 805 0
 19324              		.cfi_startproc
 19325              		@ args = 0, pretend = 0, frame = 8
 19326              		@ frame_needed = 1, uses_anonymous_args = 0
 19327              		@ link register save eliminated.
 19328 0000 80B4     		push	{r7}
 19329              	.LCFI60:
 19330              		.cfi_def_cfa_offset 4
 19331 0002 83B0     		sub	sp, sp, #12
 19332              	.LCFI61:
 19333              		.cfi_def_cfa_offset 16
 19334 0004 00AF     		add	r7, sp, #0
 19335              		.cfi_offset 7, -4
 19336              	.LCFI62:
 19337              		.cfi_def_cfa_register 7
 19338 0006 7860     		str	r0, [r7, #4]
 19339 0008 0B46     		mov	r3, r1
 19340 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 806:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 807:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 808:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 809:../StdPeripheralDriver/src/stm32f10x_spi.c ****     
 810:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* Clear the selected SPI CRC Error (CRCERR) flag */
 811:../StdPeripheralDriver/src/stm32f10x_spi.c ****     SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 19341              		.loc 1 811 0
 19342 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 19343 000e 6FEA0303 		mvn	r3, r3
 19344 0012 9AB2     		uxth	r2, r3
 19345 0014 7B68     		ldr	r3, [r7, #4]
 19346 0016 1A81     		strh	r2, [r3, #8]	@ movhi
 812:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19347              		.loc 1 812 0
 19348 0018 07F10C07 		add	r7, r7, #12
 19349 001c BD46     		mov	sp, r7
 19350 001e 80BC     		pop	{r7}
 19351 0020 7047     		bx	lr
 19352              		.cfi_endproc
 19353              	.LFE49:
 19355 0022 00BF     		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 19356              		.align	2
 19357              		.global	SPI_I2S_GetITStatus
 19358              		.thumb
 19359              		.thumb_func
 19361              	SPI_I2S_GetITStatus:
 19362              	.LFB50:
 813:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 814:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 815:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S interrupt has occurred or not.
 816:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 817:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 818:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 819:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to check. 
 820:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 821:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
 822:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
 823:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_OVR: Overrun interrupt.
 824:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_MODF: Mode Fault interrupt.
 825:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_CRCERR: CRC Error interrupt.
 826:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     @arg I2S_IT_UDR: Underrun Error interrupt.
 827:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
 828:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 829:../StdPeripheralDriver/src/stm32f10x_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 830:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 19363              		.loc 1 830 0
 19364              		.cfi_startproc
 19365              		@ args = 0, pretend = 0, frame = 16
 19366              		@ frame_needed = 1, uses_anonymous_args = 0
 19367              		@ link register save eliminated.
 19368 0000 80B4     		push	{r7}
 19369              	.LCFI63:
 19370              		.cfi_def_cfa_offset 4
 19371 0002 85B0     		sub	sp, sp, #20
 19372              	.LCFI64:
 19373              		.cfi_def_cfa_offset 24
 19374 0004 00AF     		add	r7, sp, #0
 19375              		.cfi_offset 7, -4
 19376              	.LCFI65:
 19377              		.cfi_def_cfa_register 7
 19378 0006 7860     		str	r0, [r7, #4]
 19379 0008 0B46     		mov	r3, r1
 19380 000a FB70     		strb	r3, [r7, #3]
 831:../StdPeripheralDriver/src/stm32f10x_spi.c ****   ITStatus bitstatus = RESET;
 19381              		.loc 1 831 0
 19382 000c 4FF00003 		mov	r3, #0
 19383 0010 FB73     		strb	r3, [r7, #15]
 832:../StdPeripheralDriver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
 19384              		.loc 1 832 0
 19385 0012 4FF00003 		mov	r3, #0
 19386 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 19387 0018 4FF00003 		mov	r3, #0
 19388 001c 7B81     		strh	r3, [r7, #10]	@ movhi
 19389 001e 4FF00003 		mov	r3, #0
 19390 0022 3B81     		strh	r3, [r7, #8]	@ movhi
 833:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 834:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 835:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 836:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 837:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 838:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 839:../StdPeripheralDriver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 19391              		.loc 1 839 0
 19392 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 19393 0026 03F00F03 		and	r3, r3, #15
 19394 002a 4FF00102 		mov	r2, #1
 19395 002e 02FA03F3 		lsl	r3, r2, r3
 19396 0032 BB81     		strh	r3, [r7, #12]	@ movhi
 840:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 841:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT mask */
 842:../StdPeripheralDriver/src/stm32f10x_spi.c ****   itmask = SPI_I2S_IT >> 4;
 19397              		.loc 1 842 0
 19398 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 19399 0036 4FEA1313 		lsr	r3, r3, #4
 19400 003a DBB2     		uxtb	r3, r3
 19401 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 843:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 844:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 845:../StdPeripheralDriver/src/stm32f10x_spi.c ****   itmask = 0x01 << itmask;
 19402              		.loc 1 845 0
 19403 003e 7B89     		ldrh	r3, [r7, #10]
 19404 0040 4FF00102 		mov	r2, #1
 19405 0044 02FA03F3 		lsl	r3, r2, r3
 19406 0048 7B81     		strh	r3, [r7, #10]	@ movhi
 846:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 847:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
 848:../StdPeripheralDriver/src/stm32f10x_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 19407              		.loc 1 848 0
 19408 004a 7B68     		ldr	r3, [r7, #4]
 19409 004c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 19410 004e 9AB2     		uxth	r2, r3
 19411 0050 7B89     		ldrh	r3, [r7, #10]	@ movhi
 19412 0052 02EA0303 		and	r3, r2, r3
 19413 0056 3B81     		strh	r3, [r7, #8]	@ movhi
 849:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 850:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S interrupt */
 851:../StdPeripheralDriver/src/stm32f10x_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 19414              		.loc 1 851 0
 19415 0058 7B68     		ldr	r3, [r7, #4]
 19416 005a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 19417 005c 9AB2     		uxth	r2, r3
 19418 005e BB89     		ldrh	r3, [r7, #12]	@ movhi
 19419 0060 02EA0303 		and	r3, r2, r3
 19420 0064 9BB2     		uxth	r3, r3
 19421 0066 002B     		cmp	r3, #0
 19422 0068 06D0     		beq	.L60
 19423              		.loc 1 851 0 is_stmt 0 discriminator 1
 19424 006a 3B89     		ldrh	r3, [r7, #8]
 19425 006c 002B     		cmp	r3, #0
 19426 006e 03D0     		beq	.L60
 852:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 853:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is set */
 854:../StdPeripheralDriver/src/stm32f10x_spi.c ****     bitstatus = SET;
 19427              		.loc 1 854 0 is_stmt 1
 19428 0070 4FF00103 		mov	r3, #1
 19429 0074 FB73     		strb	r3, [r7, #15]
 19430 0076 02E0     		b	.L61
 19431              	.L60:
 855:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 856:../StdPeripheralDriver/src/stm32f10x_spi.c ****   else
 857:../StdPeripheralDriver/src/stm32f10x_spi.c ****   {
 858:../StdPeripheralDriver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is reset */
 859:../StdPeripheralDriver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 19432              		.loc 1 859 0
 19433 0078 4FF00003 		mov	r3, #0
 19434 007c FB73     		strb	r3, [r7, #15]
 19435              	.L61:
 860:../StdPeripheralDriver/src/stm32f10x_spi.c ****   }
 861:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_IT status */
 862:../StdPeripheralDriver/src/stm32f10x_spi.c ****   return bitstatus;
 19436              		.loc 1 862 0
 19437 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 863:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19438              		.loc 1 863 0
 19439 0080 1846     		mov	r0, r3
 19440 0082 07F11407 		add	r7, r7, #20
 19441 0086 BD46     		mov	sp, r7
 19442 0088 80BC     		pop	{r7}
 19443 008a 7047     		bx	lr
 19444              		.cfi_endproc
 19445              	.LFE50:
 19447              		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 19448              		.align	2
 19449              		.global	SPI_I2S_ClearITPendingBit
 19450              		.thumb
 19451              		.thumb_func
 19453              	SPI_I2S_ClearITPendingBit:
 19454              	.LFB51:
 864:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 865:../StdPeripheralDriver/src/stm32f10x_spi.c **** /**
 866:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
 867:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 868:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 869:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
 870:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR interrupt pending bit.   
 871:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @note
 872:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - OVR (OverRun Error) interrupt pending bit is cleared by software 
 873:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
 874:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
 875:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun Error) interrupt pending bit is cleared by a read 
 876:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetITStatus()).
 877:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
 878:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
 879:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
 880:../StdPeripheralDriver/src/stm32f10x_spi.c ****   *     the SPI).
 881:../StdPeripheralDriver/src/stm32f10x_spi.c ****   * @retval None
 882:../StdPeripheralDriver/src/stm32f10x_spi.c ****   */
 883:../StdPeripheralDriver/src/stm32f10x_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 884:../StdPeripheralDriver/src/stm32f10x_spi.c **** {
 19455              		.loc 1 884 0
 19456              		.cfi_startproc
 19457              		@ args = 0, pretend = 0, frame = 16
 19458              		@ frame_needed = 1, uses_anonymous_args = 0
 19459              		@ link register save eliminated.
 19460 0000 80B4     		push	{r7}
 19461              	.LCFI66:
 19462              		.cfi_def_cfa_offset 4
 19463 0002 85B0     		sub	sp, sp, #20
 19464              	.LCFI67:
 19465              		.cfi_def_cfa_offset 24
 19466 0004 00AF     		add	r7, sp, #0
 19467              		.cfi_offset 7, -4
 19468              	.LCFI68:
 19469              		.cfi_def_cfa_register 7
 19470 0006 7860     		str	r0, [r7, #4]
 19471 0008 0B46     		mov	r3, r1
 19472 000a FB70     		strb	r3, [r7, #3]
 885:../StdPeripheralDriver/src/stm32f10x_spi.c ****   uint16_t itpos = 0;
 19473              		.loc 1 885 0
 19474 000c 4FF00003 		mov	r3, #0
 19475 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 886:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Check the parameters */
 887:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 888:../StdPeripheralDriver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
 889:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 890:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Get the SPI IT index */
 891:../StdPeripheralDriver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 19476              		.loc 1 891 0
 19477 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 19478 0014 03F00F03 		and	r3, r3, #15
 19479 0018 4FF00102 		mov	r2, #1
 19480 001c 02FA03F3 		lsl	r3, r2, r3
 19481 0020 FB81     		strh	r3, [r7, #14]	@ movhi
 892:../StdPeripheralDriver/src/stm32f10x_spi.c **** 
 893:../StdPeripheralDriver/src/stm32f10x_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
 894:../StdPeripheralDriver/src/stm32f10x_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 19482              		.loc 1 894 0
 19483 0022 FB89     		ldrh	r3, [r7, #14]	@ movhi
 19484 0024 6FEA0303 		mvn	r3, r3
 19485 0028 9AB2     		uxth	r2, r3
 19486 002a 7B68     		ldr	r3, [r7, #4]
 19487 002c 1A81     		strh	r2, [r3, #8]	@ movhi
 895:../StdPeripheralDriver/src/stm32f10x_spi.c **** }
 19488              		.loc 1 895 0
 19489 002e 07F11407 		add	r7, r7, #20
 19490 0032 BD46     		mov	sp, r7
 19491 0034 80BC     		pop	{r7}
 19492 0036 7047     		bx	lr
 19493              		.cfi_endproc
 19494              	.LFE51:
 19496              		.text
 19497              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_spi.c
     /tmp/cccmC88j.s:17970  .text.SPI_I2S_DeInit:00000000 $t
     /tmp/cccmC88j.s:17975  .text.SPI_I2S_DeInit:00000000 SPI_I2S_DeInit
     /tmp/cccmC88j.s:18044  .text.SPI_I2S_DeInit:00000074 $d
     /tmp/cccmC88j.s:18051  .text.SPI_Init:00000000 $t
     /tmp/cccmC88j.s:18056  .text.SPI_Init:00000000 SPI_Init
     /tmp/cccmC88j.s:18158  .text.I2S_Init:00000000 $t
     /tmp/cccmC88j.s:18163  .text.I2S_Init:00000000 I2S_Init
     /tmp/cccmC88j.s:18386  .text.I2S_Init:00000198 $d
     /tmp/cccmC88j.s:18392  .text.SPI_StructInit:00000000 $t
     /tmp/cccmC88j.s:18397  .text.SPI_StructInit:00000000 SPI_StructInit
     /tmp/cccmC88j.s:18460  .text.I2S_StructInit:00000000 $t
     /tmp/cccmC88j.s:18465  .text.I2S_StructInit:00000000 I2S_StructInit
     /tmp/cccmC88j.s:18516  .text.SPI_Cmd:00000000 $t
     /tmp/cccmC88j.s:18521  .text.SPI_Cmd:00000000 SPI_Cmd
     /tmp/cccmC88j.s:18573  .text.I2S_Cmd:00000000 $t
     /tmp/cccmC88j.s:18578  .text.I2S_Cmd:00000000 I2S_Cmd
     /tmp/cccmC88j.s:18630  .text.SPI_I2S_ITConfig:00000000 $t
     /tmp/cccmC88j.s:18635  .text.SPI_I2S_ITConfig:00000000 SPI_I2S_ITConfig
     /tmp/cccmC88j.s:18708  .text.SPI_I2S_DMACmd:00000000 $t
     /tmp/cccmC88j.s:18713  .text.SPI_I2S_DMACmd:00000000 SPI_I2S_DMACmd
     /tmp/cccmC88j.s:18771  .text.SPI_I2S_SendData:00000000 $t
     /tmp/cccmC88j.s:18776  .text.SPI_I2S_SendData:00000000 SPI_I2S_SendData
     /tmp/cccmC88j.s:18809  .text.SPI_I2S_ReceiveData:00000000 $t
     /tmp/cccmC88j.s:18814  .text.SPI_I2S_ReceiveData:00000000 SPI_I2S_ReceiveData
     /tmp/cccmC88j.s:18846  .text.SPI_NSSInternalSoftwareConfig:00000000 $t
     /tmp/cccmC88j.s:18851  .text.SPI_NSSInternalSoftwareConfig:00000000 SPI_NSSInternalSoftwareConfig
     /tmp/cccmC88j.s:18904  .text.SPI_SSOutputCmd:00000000 $t
     /tmp/cccmC88j.s:18909  .text.SPI_SSOutputCmd:00000000 SPI_SSOutputCmd
     /tmp/cccmC88j.s:18961  .text.SPI_DataSizeConfig:00000000 $t
     /tmp/cccmC88j.s:18966  .text.SPI_DataSizeConfig:00000000 SPI_DataSizeConfig
     /tmp/cccmC88j.s:19012  .text.SPI_TransmitCRC:00000000 $t
     /tmp/cccmC88j.s:19017  .text.SPI_TransmitCRC:00000000 SPI_TransmitCRC
     /tmp/cccmC88j.s:19052  .text.SPI_CalculateCRC:00000000 $t
     /tmp/cccmC88j.s:19057  .text.SPI_CalculateCRC:00000000 SPI_CalculateCRC
     /tmp/cccmC88j.s:19109  .text.SPI_GetCRC:00000000 $t
     /tmp/cccmC88j.s:19114  .text.SPI_GetCRC:00000000 SPI_GetCRC
     /tmp/cccmC88j.s:19164  .text.SPI_GetCRCPolynomial:00000000 $t
     /tmp/cccmC88j.s:19169  .text.SPI_GetCRCPolynomial:00000000 SPI_GetCRCPolynomial
     /tmp/cccmC88j.s:19201  .text.SPI_BiDirectionalLineConfig:00000000 $t
     /tmp/cccmC88j.s:19206  .text.SPI_BiDirectionalLineConfig:00000000 SPI_BiDirectionalLineConfig
     /tmp/cccmC88j.s:19258  .text.SPI_I2S_GetFlagStatus:00000000 $t
     /tmp/cccmC88j.s:19263  .text.SPI_I2S_GetFlagStatus:00000000 SPI_I2S_GetFlagStatus
     /tmp/cccmC88j.s:19316  .text.SPI_I2S_ClearFlag:00000000 $t
     /tmp/cccmC88j.s:19321  .text.SPI_I2S_ClearFlag:00000000 SPI_I2S_ClearFlag
     /tmp/cccmC88j.s:19356  .text.SPI_I2S_GetITStatus:00000000 $t
     /tmp/cccmC88j.s:19361  .text.SPI_I2S_GetITStatus:00000000 SPI_I2S_GetITStatus
     /tmp/cccmC88j.s:19448  .text.SPI_I2S_ClearITPendingBit:00000000 $t
     /tmp/cccmC88j.s:19453  .text.SPI_I2S_ClearITPendingBit:00000000 SPI_I2S_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
