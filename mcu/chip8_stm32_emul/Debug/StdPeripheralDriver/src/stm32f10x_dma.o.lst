   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_dma.c"
  23              	.Ltext0:
  24              		.file 1 "../StdPeripheralDriver/src/stm32f10x_dma.c"
 18105              		.align	2
 18106              		.global	DMA_DeInit
 18107              		.thumb
 18108              		.thumb_func
 18110              	DMA_DeInit:
 18111              	.LFB29:
   1:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @file    stm32f10x_dma.c
   4:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief   This file provides all the DMA firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_dma.c **** #include "stm32f10x_dma.h"
  24:../StdPeripheralDriver/src/stm32f10x_dma.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  28:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  29:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA 
  31:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief DMA driver modules
  32:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  33:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */ 
  34:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  37:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */ 
  38:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  39:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  40:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  41:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  42:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Defines
  43:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  44:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  45:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  46:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA1 Channelx interrupt pending bit masks */
  48:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel1_IT_Mask    ((uint32_t)(DMA_ISR_GIF1 | DMA_ISR_TCIF1 | DMA_ISR_HTIF1 | DMA_ISR
  49:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel2_IT_Mask    ((uint32_t)(DMA_ISR_GIF2 | DMA_ISR_TCIF2 | DMA_ISR_HTIF2 | DMA_ISR
  50:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel3_IT_Mask    ((uint32_t)(DMA_ISR_GIF3 | DMA_ISR_TCIF3 | DMA_ISR_HTIF3 | DMA_ISR
  51:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel4_IT_Mask    ((uint32_t)(DMA_ISR_GIF4 | DMA_ISR_TCIF4 | DMA_ISR_HTIF4 | DMA_ISR
  52:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel5_IT_Mask    ((uint32_t)(DMA_ISR_GIF5 | DMA_ISR_TCIF5 | DMA_ISR_HTIF5 | DMA_ISR
  53:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel6_IT_Mask    ((uint32_t)(DMA_ISR_GIF6 | DMA_ISR_TCIF6 | DMA_ISR_HTIF6 | DMA_ISR
  54:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA1_Channel7_IT_Mask    ((uint32_t)(DMA_ISR_GIF7 | DMA_ISR_TCIF7 | DMA_ISR_HTIF7 | DMA_ISR
  55:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  56:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA2 Channelx interrupt pending bit masks */
  57:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel1_IT_Mask    ((uint32_t)(DMA_ISR_GIF1 | DMA_ISR_TCIF1 | DMA_ISR_HTIF1 | DMA_ISR
  58:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel2_IT_Mask    ((uint32_t)(DMA_ISR_GIF2 | DMA_ISR_TCIF2 | DMA_ISR_HTIF2 | DMA_ISR
  59:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel3_IT_Mask    ((uint32_t)(DMA_ISR_GIF3 | DMA_ISR_TCIF3 | DMA_ISR_HTIF3 | DMA_ISR
  60:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel4_IT_Mask    ((uint32_t)(DMA_ISR_GIF4 | DMA_ISR_TCIF4 | DMA_ISR_HTIF4 | DMA_ISR
  61:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define DMA2_Channel5_IT_Mask    ((uint32_t)(DMA_ISR_GIF5 | DMA_ISR_TCIF5 | DMA_ISR_HTIF5 | DMA_ISR
  62:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  63:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA2 FLAG mask */
  64:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define FLAG_Mask                ((uint32_t)0x10000000)
  65:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  66:../StdPeripheralDriver/src/stm32f10x_dma.c **** /* DMA registers Masks */
  67:../StdPeripheralDriver/src/stm32f10x_dma.c **** #define CCR_CLEAR_Mask           ((uint32_t)0xFFFF800F)
  68:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  69:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  70:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  71:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  72:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  73:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Macros
  74:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  75:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  76:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  77:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  78:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  79:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  80:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  81:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Variables
  82:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  83:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  84:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  85:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  86:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  87:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  88:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  89:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_FunctionPrototypes
  90:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  91:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  92:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  93:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
  94:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @}
  95:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
  96:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
  97:../StdPeripheralDriver/src/stm32f10x_dma.c **** /** @defgroup DMA_Private_Functions
  98:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @{
  99:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 100:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 101:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 102:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Deinitializes the DMAy Channelx registers to their default reset
 103:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         values.
 104:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and
 105:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 106:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 107:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 108:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_DeInit(DMA_Channel_TypeDef* DMAy_Channelx)
 109:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18112              		.loc 1 109 0
 18113              		.cfi_startproc
 18114              		@ args = 0, pretend = 0, frame = 8
 18115              		@ frame_needed = 1, uses_anonymous_args = 0
 18116              		@ link register save eliminated.
 18117 0000 80B4     		push	{r7}
 18118              	.LCFI0:
 18119              		.cfi_def_cfa_offset 4
 18120 0002 83B0     		sub	sp, sp, #12
 18121              	.LCFI1:
 18122              		.cfi_def_cfa_offset 16
 18123 0004 00AF     		add	r7, sp, #0
 18124              		.cfi_offset 7, -4
 18125              	.LCFI2:
 18126              		.cfi_def_cfa_register 7
 18127 0006 7860     		str	r0, [r7, #4]
 110:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 111:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 112:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 113:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Disable the selected DMAy Channelx */
 114:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR1_EN);
 18128              		.loc 1 114 0
 18129 0008 7B68     		ldr	r3, [r7, #4]
 18130 000a 1A68     		ldr	r2, [r3, #0]
 18131 000c 4FF6FE73 		movw	r3, #65534
 18132 0010 02EA0303 		and	r3, r2, r3
 18133 0014 7A68     		ldr	r2, [r7, #4]
 18134 0016 1360     		str	r3, [r2, #0]
 115:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 116:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx control register */
 117:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR  = 0;
 18135              		.loc 1 117 0
 18136 0018 7B68     		ldr	r3, [r7, #4]
 18137 001a 4FF00002 		mov	r2, #0
 18138 001e 1A60     		str	r2, [r3, #0]
 118:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 119:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx remaining bytes register */
 120:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = 0;
 18139              		.loc 1 120 0
 18140 0020 7B68     		ldr	r3, [r7, #4]
 18141 0022 4FF00002 		mov	r2, #0
 18142 0026 5A60     		str	r2, [r3, #4]
 121:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 122:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx peripheral address register */
 123:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CPAR  = 0;
 18143              		.loc 1 123 0
 18144 0028 7B68     		ldr	r3, [r7, #4]
 18145 002a 4FF00002 		mov	r2, #0
 18146 002e 9A60     		str	r2, [r3, #8]
 124:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 125:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Reset DMAy Channelx memory address register */
 126:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CMAR = 0;
 18147              		.loc 1 126 0
 18148 0030 7B68     		ldr	r3, [r7, #4]
 18149 0032 4FF00002 		mov	r2, #0
 18150 0036 DA60     		str	r2, [r3, #12]
 127:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 128:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if (DMAy_Channelx == DMA1_Channel1)
 18151              		.loc 1 128 0
 18152 0038 7A68     		ldr	r2, [r7, #4]
 18153 003a 434B     		ldr	r3, .L14
 18154 003c 9A42     		cmp	r2, r3
 18155 003e 06D1     		bne	.L2
 129:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 130:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel1 */
 131:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel1_IT_Mask;
 18156              		.loc 1 131 0
 18157 0040 424B     		ldr	r3, .L14+4
 18158 0042 424A     		ldr	r2, .L14+4
 18159 0044 5268     		ldr	r2, [r2, #4]
 18160 0046 42F00F02 		orr	r2, r2, #15
 18161 004a 5A60     		str	r2, [r3, #4]
 18162 004c 77E0     		b	.L1
 18163              	.L2:
 132:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 133:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel2)
 18164              		.loc 1 133 0
 18165 004e 7A68     		ldr	r2, [r7, #4]
 18166 0050 3F4B     		ldr	r3, .L14+8
 18167 0052 9A42     		cmp	r2, r3
 18168 0054 06D1     		bne	.L4
 134:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 135:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel2 */
 136:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel2_IT_Mask;
 18169              		.loc 1 136 0
 18170 0056 3D4B     		ldr	r3, .L14+4
 18171 0058 3C4A     		ldr	r2, .L14+4
 18172 005a 5268     		ldr	r2, [r2, #4]
 18173 005c 42F0F002 		orr	r2, r2, #240
 18174 0060 5A60     		str	r2, [r3, #4]
 18175 0062 6CE0     		b	.L1
 18176              	.L4:
 137:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 138:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel3)
 18177              		.loc 1 138 0
 18178 0064 7A68     		ldr	r2, [r7, #4]
 18179 0066 3B4B     		ldr	r3, .L14+12
 18180 0068 9A42     		cmp	r2, r3
 18181 006a 06D1     		bne	.L5
 139:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 140:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel3 */
 141:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel3_IT_Mask;
 18182              		.loc 1 141 0
 18183 006c 374B     		ldr	r3, .L14+4
 18184 006e 374A     		ldr	r2, .L14+4
 18185 0070 5268     		ldr	r2, [r2, #4]
 18186 0072 42F47062 		orr	r2, r2, #3840
 18187 0076 5A60     		str	r2, [r3, #4]
 18188 0078 61E0     		b	.L1
 18189              	.L5:
 142:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 143:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel4)
 18190              		.loc 1 143 0
 18191 007a 7A68     		ldr	r2, [r7, #4]
 18192 007c 364B     		ldr	r3, .L14+16
 18193 007e 9A42     		cmp	r2, r3
 18194 0080 06D1     		bne	.L6
 144:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 145:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel4 */
 146:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel4_IT_Mask;
 18195              		.loc 1 146 0
 18196 0082 324B     		ldr	r3, .L14+4
 18197 0084 314A     		ldr	r2, .L14+4
 18198 0086 5268     		ldr	r2, [r2, #4]
 18199 0088 42F47042 		orr	r2, r2, #61440
 18200 008c 5A60     		str	r2, [r3, #4]
 18201 008e 56E0     		b	.L1
 18202              	.L6:
 147:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 148:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel5)
 18203              		.loc 1 148 0
 18204 0090 7A68     		ldr	r2, [r7, #4]
 18205 0092 324B     		ldr	r3, .L14+20
 18206 0094 9A42     		cmp	r2, r3
 18207 0096 06D1     		bne	.L7
 149:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 150:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel5 */
 151:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel5_IT_Mask;
 18208              		.loc 1 151 0
 18209 0098 2C4B     		ldr	r3, .L14+4
 18210 009a 2C4A     		ldr	r2, .L14+4
 18211 009c 5268     		ldr	r2, [r2, #4]
 18212 009e 42F47022 		orr	r2, r2, #983040
 18213 00a2 5A60     		str	r2, [r3, #4]
 18214 00a4 4BE0     		b	.L1
 18215              	.L7:
 152:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 153:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel6)
 18216              		.loc 1 153 0
 18217 00a6 7A68     		ldr	r2, [r7, #4]
 18218 00a8 2D4B     		ldr	r3, .L14+24
 18219 00aa 9A42     		cmp	r2, r3
 18220 00ac 06D1     		bne	.L8
 154:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 155:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel6 */
 156:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel6_IT_Mask;
 18221              		.loc 1 156 0
 18222 00ae 274B     		ldr	r3, .L14+4
 18223 00b0 264A     		ldr	r2, .L14+4
 18224 00b2 5268     		ldr	r2, [r2, #4]
 18225 00b4 42F47002 		orr	r2, r2, #15728640
 18226 00b8 5A60     		str	r2, [r3, #4]
 18227 00ba 40E0     		b	.L1
 18228              	.L8:
 157:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 158:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA1_Channel7)
 18229              		.loc 1 158 0
 18230 00bc 7A68     		ldr	r2, [r7, #4]
 18231 00be 294B     		ldr	r3, .L14+28
 18232 00c0 9A42     		cmp	r2, r3
 18233 00c2 06D1     		bne	.L9
 159:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 160:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel7 */
 161:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR |= DMA1_Channel7_IT_Mask;
 18234              		.loc 1 161 0
 18235 00c4 214B     		ldr	r3, .L14+4
 18236 00c6 214A     		ldr	r2, .L14+4
 18237 00c8 5268     		ldr	r2, [r2, #4]
 18238 00ca 42F07062 		orr	r2, r2, #251658240
 18239 00ce 5A60     		str	r2, [r3, #4]
 18240 00d0 35E0     		b	.L1
 18241              	.L9:
 162:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 163:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel1)
 18242              		.loc 1 163 0
 18243 00d2 7A68     		ldr	r2, [r7, #4]
 18244 00d4 244B     		ldr	r3, .L14+32
 18245 00d6 9A42     		cmp	r2, r3
 18246 00d8 06D1     		bne	.L10
 164:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 165:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel1 */
 166:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel1_IT_Mask;
 18247              		.loc 1 166 0
 18248 00da 244B     		ldr	r3, .L14+36
 18249 00dc 234A     		ldr	r2, .L14+36
 18250 00de 5268     		ldr	r2, [r2, #4]
 18251 00e0 42F00F02 		orr	r2, r2, #15
 18252 00e4 5A60     		str	r2, [r3, #4]
 18253 00e6 2AE0     		b	.L1
 18254              	.L10:
 167:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 168:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel2)
 18255              		.loc 1 168 0
 18256 00e8 7A68     		ldr	r2, [r7, #4]
 18257 00ea 214B     		ldr	r3, .L14+40
 18258 00ec 9A42     		cmp	r2, r3
 18259 00ee 06D1     		bne	.L11
 169:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 170:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel2 */
 171:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel2_IT_Mask;
 18260              		.loc 1 171 0
 18261 00f0 1E4B     		ldr	r3, .L14+36
 18262 00f2 1E4A     		ldr	r2, .L14+36
 18263 00f4 5268     		ldr	r2, [r2, #4]
 18264 00f6 42F0F002 		orr	r2, r2, #240
 18265 00fa 5A60     		str	r2, [r3, #4]
 18266 00fc 1FE0     		b	.L1
 18267              	.L11:
 172:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 173:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel3)
 18268              		.loc 1 173 0
 18269 00fe 7A68     		ldr	r2, [r7, #4]
 18270 0100 1C4B     		ldr	r3, .L14+44
 18271 0102 9A42     		cmp	r2, r3
 18272 0104 06D1     		bne	.L12
 174:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 175:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel3 */
 176:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel3_IT_Mask;
 18273              		.loc 1 176 0
 18274 0106 194B     		ldr	r3, .L14+36
 18275 0108 184A     		ldr	r2, .L14+36
 18276 010a 5268     		ldr	r2, [r2, #4]
 18277 010c 42F47062 		orr	r2, r2, #3840
 18278 0110 5A60     		str	r2, [r3, #4]
 18279 0112 14E0     		b	.L1
 18280              	.L12:
 177:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 178:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else if (DMAy_Channelx == DMA2_Channel4)
 18281              		.loc 1 178 0
 18282 0114 7A68     		ldr	r2, [r7, #4]
 18283 0116 184B     		ldr	r3, .L14+48
 18284 0118 9A42     		cmp	r2, r3
 18285 011a 06D1     		bne	.L13
 179:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 180:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Reset interrupt pending bits for DMA2 Channel4 */
 181:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR |= DMA2_Channel4_IT_Mask;
 18286              		.loc 1 181 0
 18287 011c 134B     		ldr	r3, .L14+36
 18288 011e 134A     		ldr	r2, .L14+36
 18289 0120 5268     		ldr	r2, [r2, #4]
 18290 0122 42F47042 		orr	r2, r2, #61440
 18291 0126 5A60     		str	r2, [r3, #4]
 18292 0128 09E0     		b	.L1
 18293              	.L13:
 182:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 183:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 184:../StdPeripheralDriver/src/stm32f10x_dma.c ****   { 
 185:../StdPeripheralDriver/src/stm32f10x_dma.c ****     if (DMAy_Channelx == DMA2_Channel5)
 18294              		.loc 1 185 0
 18295 012a 7A68     		ldr	r2, [r7, #4]
 18296 012c 134B     		ldr	r3, .L14+52
 18297 012e 9A42     		cmp	r2, r3
 18298 0130 05D1     		bne	.L1
 186:../StdPeripheralDriver/src/stm32f10x_dma.c ****     {
 187:../StdPeripheralDriver/src/stm32f10x_dma.c ****       /* Reset interrupt pending bits for DMA2 Channel5 */
 188:../StdPeripheralDriver/src/stm32f10x_dma.c ****       DMA2->IFCR |= DMA2_Channel5_IT_Mask;
 18299              		.loc 1 188 0
 18300 0132 0E4B     		ldr	r3, .L14+36
 18301 0134 0D4A     		ldr	r2, .L14+36
 18302 0136 5268     		ldr	r2, [r2, #4]
 18303 0138 42F47022 		orr	r2, r2, #983040
 18304 013c 5A60     		str	r2, [r3, #4]
 18305              	.L1:
 189:../StdPeripheralDriver/src/stm32f10x_dma.c ****     }
 190:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 191:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18306              		.loc 1 191 0
 18307 013e 07F10C07 		add	r7, r7, #12
 18308 0142 BD46     		mov	sp, r7
 18309 0144 80BC     		pop	{r7}
 18310 0146 7047     		bx	lr
 18311              	.L15:
 18312              		.align	2
 18313              	.L14:
 18314 0148 08000240 		.word	1073872904
 18315 014c 00000240 		.word	1073872896
 18316 0150 1C000240 		.word	1073872924
 18317 0154 30000240 		.word	1073872944
 18318 0158 44000240 		.word	1073872964
 18319 015c 58000240 		.word	1073872984
 18320 0160 6C000240 		.word	1073873004
 18321 0164 80000240 		.word	1073873024
 18322 0168 08040240 		.word	1073873928
 18323 016c 00040240 		.word	1073873920
 18324 0170 1C040240 		.word	1073873948
 18325 0174 30040240 		.word	1073873968
 18326 0178 44040240 		.word	1073873988
 18327 017c 58040240 		.word	1073874008
 18328              		.cfi_endproc
 18329              	.LFE29:
 18331              		.section	.text.DMA_Init,"ax",%progbits
 18332              		.align	2
 18333              		.global	DMA_Init
 18334              		.thumb
 18335              		.thumb_func
 18337              	DMA_Init:
 18338              	.LFB30:
 192:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 193:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 194:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Initializes the DMAy Channelx according to the specified
 195:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         parameters in the DMA_InitStruct.
 196:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 197:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 198:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure that
 199:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         contains the configuration information for the specified DMA Channel.
 200:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 201:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 202:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_Init(DMA_Channel_TypeDef* DMAy_Channelx, DMA_InitTypeDef* DMA_InitStruct)
 203:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18339              		.loc 1 203 0
 18340              		.cfi_startproc
 18341              		@ args = 0, pretend = 0, frame = 16
 18342              		@ frame_needed = 1, uses_anonymous_args = 0
 18343              		@ link register save eliminated.
 18344 0000 80B4     		push	{r7}
 18345              	.LCFI3:
 18346              		.cfi_def_cfa_offset 4
 18347 0002 85B0     		sub	sp, sp, #20
 18348              	.LCFI4:
 18349              		.cfi_def_cfa_offset 24
 18350 0004 00AF     		add	r7, sp, #0
 18351              		.cfi_offset 7, -4
 18352              	.LCFI5:
 18353              		.cfi_def_cfa_register 7
 18354 0006 7860     		str	r0, [r7, #4]
 18355 0008 3960     		str	r1, [r7, #0]
 204:../StdPeripheralDriver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 18356              		.loc 1 204 0
 18357 000a 4FF00003 		mov	r3, #0
 18358 000e FB60     		str	r3, [r7, #12]
 205:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 206:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 207:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 208:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_DIR(DMA_InitStruct->DMA_DIR));
 209:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DMA_InitStruct->DMA_BufferSize));
 210:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(DMA_InitStruct->DMA_PeripheralInc));
 211:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(DMA_InitStruct->DMA_MemoryInc));   
 212:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(DMA_InitStruct->DMA_PeripheralDataSize));
 213:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(DMA_InitStruct->DMA_MemoryDataSize));
 214:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_MODE(DMA_InitStruct->DMA_Mode));
 215:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
 216:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_M2M_STATE(DMA_InitStruct->DMA_M2M));
 217:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 218:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CCR Configuration -----------------*/
 219:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Get the DMAy_Channelx CCR value */
 220:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg = DMAy_Channelx->CCR;
 18359              		.loc 1 220 0
 18360 0010 7B68     		ldr	r3, [r7, #4]
 18361 0012 1B68     		ldr	r3, [r3, #0]
 18362 0014 FB60     		str	r3, [r7, #12]
 221:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Clear MEM2MEM, PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
 222:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg &= CCR_CLEAR_Mask;
 18363              		.loc 1 222 0
 18364 0016 FB68     		ldr	r3, [r7, #12]
 18365 0018 23F4FE43 		bic	r3, r3, #32512
 18366 001c 23F0F003 		bic	r3, r3, #240
 18367 0020 FB60     		str	r3, [r7, #12]
 223:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Configure DMAy Channelx: data transfer, data size, priority level and mode */
 224:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set DIR bit according to DMA_DIR value */
 225:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set CIRC bit according to DMA_Mode value */
 226:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set PINC bit according to DMA_PeripheralInc value */
 227:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set MINC bit according to DMA_MemoryInc value */
 228:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set PSIZE bits according to DMA_PeripheralDataSize value */
 229:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set MSIZE bits according to DMA_MemoryDataSize value */
 230:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set PL bits according to DMA_Priority value */
 231:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Set the MEM2MEM bit according to DMA_M2M value */
 232:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 18368              		.loc 1 232 0
 18369 0022 3B68     		ldr	r3, [r7, #0]
 18370 0024 9A68     		ldr	r2, [r3, #8]
 18371 0026 3B68     		ldr	r3, [r7, #0]
 18372 0028 1B6A     		ldr	r3, [r3, #32]
 18373 002a 1A43     		orrs	r2, r2, r3
 233:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 18374              		.loc 1 233 0
 18375 002c 3B68     		ldr	r3, [r7, #0]
 18376 002e 1B69     		ldr	r3, [r3, #16]
 232:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 18377              		.loc 1 232 0
 18378 0030 1A43     		orrs	r2, r2, r3
 18379              		.loc 1 233 0
 18380 0032 3B68     		ldr	r3, [r7, #0]
 18381 0034 5B69     		ldr	r3, [r3, #20]
 18382 0036 1A43     		orrs	r2, r2, r3
 234:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 18383              		.loc 1 234 0
 18384 0038 3B68     		ldr	r3, [r7, #0]
 18385 003a 9B69     		ldr	r3, [r3, #24]
 233:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 18386              		.loc 1 233 0
 18387 003c 1A43     		orrs	r2, r2, r3
 18388              		.loc 1 234 0
 18389 003e 3B68     		ldr	r3, [r7, #0]
 18390 0040 DB69     		ldr	r3, [r3, #28]
 18391 0042 1A43     		orrs	r2, r2, r3
 235:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_Priority | DMA_InitStruct->DMA_M2M;
 18392              		.loc 1 235 0
 18393 0044 3B68     		ldr	r3, [r7, #0]
 18394 0046 5B6A     		ldr	r3, [r3, #36]
 234:../StdPeripheralDriver/src/stm32f10x_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 18395              		.loc 1 234 0
 18396 0048 1A43     		orrs	r2, r2, r3
 18397              		.loc 1 235 0
 18398 004a 3B68     		ldr	r3, [r7, #0]
 18399 004c 9B6A     		ldr	r3, [r3, #40]
 18400 004e 42EA0303 		orr	r3, r2, r3
 232:../StdPeripheralDriver/src/stm32f10x_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 18401              		.loc 1 232 0
 18402 0052 FA68     		ldr	r2, [r7, #12]
 18403 0054 42EA0303 		orr	r3, r2, r3
 18404 0058 FB60     		str	r3, [r7, #12]
 236:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 237:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CCR */
 238:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CCR = tmpreg;
 18405              		.loc 1 238 0
 18406 005a 7B68     		ldr	r3, [r7, #4]
 18407 005c FA68     		ldr	r2, [r7, #12]
 18408 005e 1A60     		str	r2, [r3, #0]
 239:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 240:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration ---------------*/
 241:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CNDTR */
 242:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = DMA_InitStruct->DMA_BufferSize;
 18409              		.loc 1 242 0
 18410 0060 3B68     		ldr	r3, [r7, #0]
 18411 0062 DA68     		ldr	r2, [r3, #12]
 18412 0064 7B68     		ldr	r3, [r7, #4]
 18413 0066 5A60     		str	r2, [r3, #4]
 243:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 244:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CPAR Configuration ----------------*/
 245:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CPAR */
 246:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CPAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
 18414              		.loc 1 246 0
 18415 0068 3B68     		ldr	r3, [r7, #0]
 18416 006a 1A68     		ldr	r2, [r3, #0]
 18417 006c 7B68     		ldr	r3, [r7, #4]
 18418 006e 9A60     		str	r2, [r3, #8]
 247:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 248:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CMAR Configuration ----------------*/
 249:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CMAR */
 250:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CMAR = DMA_InitStruct->DMA_MemoryBaseAddr;
 18419              		.loc 1 250 0
 18420 0070 3B68     		ldr	r3, [r7, #0]
 18421 0072 5A68     		ldr	r2, [r3, #4]
 18422 0074 7B68     		ldr	r3, [r7, #4]
 18423 0076 DA60     		str	r2, [r3, #12]
 251:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18424              		.loc 1 251 0
 18425 0078 07F11407 		add	r7, r7, #20
 18426 007c BD46     		mov	sp, r7
 18427 007e 80BC     		pop	{r7}
 18428 0080 7047     		bx	lr
 18429              		.cfi_endproc
 18430              	.LFE30:
 18432 0082 00BF     		.section	.text.DMA_StructInit,"ax",%progbits
 18433              		.align	2
 18434              		.global	DMA_StructInit
 18435              		.thumb
 18436              		.thumb_func
 18438              	DMA_StructInit:
 18439              	.LFB31:
 252:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 253:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 254:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Fills each DMA_InitStruct member with its default value.
 255:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMA_InitStruct : pointer to a DMA_InitTypeDef structure which will
 256:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         be initialized.
 257:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 258:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 259:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)
 260:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18440              		.loc 1 260 0
 18441              		.cfi_startproc
 18442              		@ args = 0, pretend = 0, frame = 8
 18443              		@ frame_needed = 1, uses_anonymous_args = 0
 18444              		@ link register save eliminated.
 18445 0000 80B4     		push	{r7}
 18446              	.LCFI6:
 18447              		.cfi_def_cfa_offset 4
 18448 0002 83B0     		sub	sp, sp, #12
 18449              	.LCFI7:
 18450              		.cfi_def_cfa_offset 16
 18451 0004 00AF     		add	r7, sp, #0
 18452              		.cfi_offset 7, -4
 18453              	.LCFI8:
 18454              		.cfi_def_cfa_register 7
 18455 0006 7860     		str	r0, [r7, #4]
 261:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*-------------- Reset DMA init structure parameters values ------------------*/
 262:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralBaseAddr member */
 263:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
 18456              		.loc 1 263 0
 18457 0008 7B68     		ldr	r3, [r7, #4]
 18458 000a 4FF00002 		mov	r2, #0
 18459 000e 1A60     		str	r2, [r3, #0]
 264:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryBaseAddr member */
 265:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryBaseAddr = 0;
 18460              		.loc 1 265 0
 18461 0010 7B68     		ldr	r3, [r7, #4]
 18462 0012 4FF00002 		mov	r2, #0
 18463 0016 5A60     		str	r2, [r3, #4]
 266:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_DIR member */
 267:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralSRC;
 18464              		.loc 1 267 0
 18465 0018 7B68     		ldr	r3, [r7, #4]
 18466 001a 4FF00002 		mov	r2, #0
 18467 001e 9A60     		str	r2, [r3, #8]
 268:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_BufferSize member */
 269:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_BufferSize = 0;
 18468              		.loc 1 269 0
 18469 0020 7B68     		ldr	r3, [r7, #4]
 18470 0022 4FF00002 		mov	r2, #0
 18471 0026 DA60     		str	r2, [r3, #12]
 270:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralInc member */
 271:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 18472              		.loc 1 271 0
 18473 0028 7B68     		ldr	r3, [r7, #4]
 18474 002a 4FF00002 		mov	r2, #0
 18475 002e 1A61     		str	r2, [r3, #16]
 272:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryInc member */
 273:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
 18476              		.loc 1 273 0
 18477 0030 7B68     		ldr	r3, [r7, #4]
 18478 0032 4FF00002 		mov	r2, #0
 18479 0036 5A61     		str	r2, [r3, #20]
 274:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_PeripheralDataSize member */
 275:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 18480              		.loc 1 275 0
 18481 0038 7B68     		ldr	r3, [r7, #4]
 18482 003a 4FF00002 		mov	r2, #0
 18483 003e 9A61     		str	r2, [r3, #24]
 276:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_MemoryDataSize member */
 277:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 18484              		.loc 1 277 0
 18485 0040 7B68     		ldr	r3, [r7, #4]
 18486 0042 4FF00002 		mov	r2, #0
 18487 0046 DA61     		str	r2, [r3, #28]
 278:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_Mode member */
 279:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
 18488              		.loc 1 279 0
 18489 0048 7B68     		ldr	r3, [r7, #4]
 18490 004a 4FF00002 		mov	r2, #0
 18491 004e 1A62     		str	r2, [r3, #32]
 280:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_Priority member */
 281:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
 18492              		.loc 1 281 0
 18493 0050 7B68     		ldr	r3, [r7, #4]
 18494 0052 4FF00002 		mov	r2, #0
 18495 0056 5A62     		str	r2, [r3, #36]
 282:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Initialize the DMA_M2M member */
 283:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMA_InitStruct->DMA_M2M = DMA_M2M_Disable;
 18496              		.loc 1 283 0
 18497 0058 7B68     		ldr	r3, [r7, #4]
 18498 005a 4FF00002 		mov	r2, #0
 18499 005e 9A62     		str	r2, [r3, #40]
 284:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18500              		.loc 1 284 0
 18501 0060 07F10C07 		add	r7, r7, #12
 18502 0064 BD46     		mov	sp, r7
 18503 0066 80BC     		pop	{r7}
 18504 0068 7047     		bx	lr
 18505              		.cfi_endproc
 18506              	.LFE31:
 18508 006a 00BF     		.section	.text.DMA_Cmd,"ax",%progbits
 18509              		.align	2
 18510              		.global	DMA_Cmd
 18511              		.thumb
 18512              		.thumb_func
 18514              	DMA_Cmd:
 18515              	.LFB32:
 285:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 286:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 287:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx.
 288:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 289:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 290:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  NewState: new state of the DMAy Channelx. 
 291:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be: ENABLE or DISABLE.
 292:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 293:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 294:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_Cmd(DMA_Channel_TypeDef* DMAy_Channelx, FunctionalState NewState)
 295:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18516              		.loc 1 295 0
 18517              		.cfi_startproc
 18518              		@ args = 0, pretend = 0, frame = 8
 18519              		@ frame_needed = 1, uses_anonymous_args = 0
 18520              		@ link register save eliminated.
 18521 0000 80B4     		push	{r7}
 18522              	.LCFI9:
 18523              		.cfi_def_cfa_offset 4
 18524 0002 83B0     		sub	sp, sp, #12
 18525              	.LCFI10:
 18526              		.cfi_def_cfa_offset 16
 18527 0004 00AF     		add	r7, sp, #0
 18528              		.cfi_offset 7, -4
 18529              	.LCFI11:
 18530              		.cfi_def_cfa_register 7
 18531 0006 7860     		str	r0, [r7, #4]
 18532 0008 0B46     		mov	r3, r1
 18533 000a FB70     		strb	r3, [r7, #3]
 296:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 297:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 298:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 299:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 300:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if (NewState != DISABLE)
 18534              		.loc 1 300 0
 18535 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18536 000e 002B     		cmp	r3, #0
 18537 0010 06D0     		beq	.L19
 301:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 302:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Enable the selected DMAy Channelx */
 303:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR |= DMA_CCR1_EN;
 18538              		.loc 1 303 0
 18539 0012 7B68     		ldr	r3, [r7, #4]
 18540 0014 1B68     		ldr	r3, [r3, #0]
 18541 0016 43F00102 		orr	r2, r3, #1
 18542 001a 7B68     		ldr	r3, [r7, #4]
 18543 001c 1A60     		str	r2, [r3, #0]
 18544 001e 07E0     		b	.L18
 18545              	.L19:
 304:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 305:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 306:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 307:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Disable the selected DMAy Channelx */
 308:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR1_EN);
 18546              		.loc 1 308 0
 18547 0020 7B68     		ldr	r3, [r7, #4]
 18548 0022 1A68     		ldr	r2, [r3, #0]
 18549 0024 4FF6FE73 		movw	r3, #65534
 18550 0028 02EA0303 		and	r3, r2, r3
 18551 002c 7A68     		ldr	r2, [r7, #4]
 18552 002e 1360     		str	r3, [r2, #0]
 18553              	.L18:
 309:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 310:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18554              		.loc 1 310 0
 18555 0030 07F10C07 		add	r7, r7, #12
 18556 0034 BD46     		mov	sp, r7
 18557 0036 80BC     		pop	{r7}
 18558 0038 7047     		bx	lr
 18559              		.cfi_endproc
 18560              	.LFE32:
 18562 003a 00BF     		.section	.text.DMA_ITConfig,"ax",%progbits
 18563              		.align	2
 18564              		.global	DMA_ITConfig
 18565              		.thumb
 18566              		.thumb_func
 18568              	DMA_ITConfig:
 18569              	.LFB33:
 311:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 312:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 313:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx interrupts.
 314:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 315:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 316:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMA_IT: specifies the DMA interrupts sources to be enabled
 317:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   or disabled. 
 318:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be any combination of the following values:
 319:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_TC:  Transfer complete interrupt mask
 320:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_HT:  Half transfer interrupt mask
 321:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA_IT_TE:  Transfer error interrupt mask
 322:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  NewState: new state of the specified DMA interrupts.
 323:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be: ENABLE or DISABLE.
 324:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 325:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 326:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_ITConfig(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState)
 327:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18570              		.loc 1 327 0
 18571              		.cfi_startproc
 18572              		@ args = 0, pretend = 0, frame = 16
 18573              		@ frame_needed = 1, uses_anonymous_args = 0
 18574              		@ link register save eliminated.
 18575 0000 80B4     		push	{r7}
 18576              	.LCFI12:
 18577              		.cfi_def_cfa_offset 4
 18578 0002 85B0     		sub	sp, sp, #20
 18579              	.LCFI13:
 18580              		.cfi_def_cfa_offset 24
 18581 0004 00AF     		add	r7, sp, #0
 18582              		.cfi_offset 7, -4
 18583              	.LCFI14:
 18584              		.cfi_def_cfa_register 7
 18585 0006 F860     		str	r0, [r7, #12]
 18586 0008 B960     		str	r1, [r7, #8]
 18587 000a 1346     		mov	r3, r2
 18588 000c FB71     		strb	r3, [r7, #7]
 328:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 329:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 330:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CONFIG_IT(DMA_IT));
 331:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 332:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if (NewState != DISABLE)
 18589              		.loc 1 332 0
 18590 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18591 0010 002B     		cmp	r3, #0
 18592 0012 06D0     		beq	.L22
 333:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 334:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Enable the selected DMA interrupts */
 335:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR |= DMA_IT;
 18593              		.loc 1 335 0
 18594 0014 FB68     		ldr	r3, [r7, #12]
 18595 0016 1A68     		ldr	r2, [r3, #0]
 18596 0018 BB68     		ldr	r3, [r7, #8]
 18597 001a 1A43     		orrs	r2, r2, r3
 18598 001c FB68     		ldr	r3, [r7, #12]
 18599 001e 1A60     		str	r2, [r3, #0]
 18600 0020 07E0     		b	.L21
 18601              	.L22:
 336:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 337:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 338:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 339:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Disable the selected DMA interrupts */
 340:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMAy_Channelx->CCR &= ~DMA_IT;
 18602              		.loc 1 340 0
 18603 0022 FB68     		ldr	r3, [r7, #12]
 18604 0024 1A68     		ldr	r2, [r3, #0]
 18605 0026 BB68     		ldr	r3, [r7, #8]
 18606 0028 6FEA0303 		mvn	r3, r3
 18607 002c 1A40     		ands	r2, r2, r3
 18608 002e FB68     		ldr	r3, [r7, #12]
 18609 0030 1A60     		str	r2, [r3, #0]
 18610              	.L21:
 341:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 342:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18611              		.loc 1 342 0
 18612 0032 07F11407 		add	r7, r7, #20
 18613 0036 BD46     		mov	sp, r7
 18614 0038 80BC     		pop	{r7}
 18615 003a 7047     		bx	lr
 18616              		.cfi_endproc
 18617              	.LFE33:
 18619              		.section	.text.DMA_SetCurrDataCounter,"ax",%progbits
 18620              		.align	2
 18621              		.global	DMA_SetCurrDataCounter
 18622              		.thumb
 18623              		.thumb_func
 18625              	DMA_SetCurrDataCounter:
 18626              	.LFB34:
 343:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 344:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 345:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Sets the number of data units in the current DMAy Channelx transfer.
 346:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 347:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 348:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DataNumber: The number of data units in the current DMAy Channelx
 349:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         transfer.   
 350:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @note   This function can only be used when the DMAy_Channelx is disabled.                 
 351:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None.
 352:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 353:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_SetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx, uint16_t DataNumber)
 354:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18627              		.loc 1 354 0
 18628              		.cfi_startproc
 18629              		@ args = 0, pretend = 0, frame = 8
 18630              		@ frame_needed = 1, uses_anonymous_args = 0
 18631              		@ link register save eliminated.
 18632 0000 80B4     		push	{r7}
 18633              	.LCFI15:
 18634              		.cfi_def_cfa_offset 4
 18635 0002 83B0     		sub	sp, sp, #12
 18636              	.LCFI16:
 18637              		.cfi_def_cfa_offset 16
 18638 0004 00AF     		add	r7, sp, #0
 18639              		.cfi_offset 7, -4
 18640              	.LCFI17:
 18641              		.cfi_def_cfa_register 7
 18642 0006 7860     		str	r0, [r7, #4]
 18643 0008 0B46     		mov	r3, r1
 18644 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 355:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 356:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 357:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 358:../StdPeripheralDriver/src/stm32f10x_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration ---------------*/
 359:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Write to DMAy Channelx CNDTR */
 360:../StdPeripheralDriver/src/stm32f10x_dma.c ****   DMAy_Channelx->CNDTR = DataNumber;  
 18645              		.loc 1 360 0
 18646 000c 7A88     		ldrh	r2, [r7, #2]
 18647 000e 7B68     		ldr	r3, [r7, #4]
 18648 0010 5A60     		str	r2, [r3, #4]
 361:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18649              		.loc 1 361 0
 18650 0012 07F10C07 		add	r7, r7, #12
 18651 0016 BD46     		mov	sp, r7
 18652 0018 80BC     		pop	{r7}
 18653 001a 7047     		bx	lr
 18654              		.cfi_endproc
 18655              	.LFE34:
 18657              		.section	.text.DMA_GetCurrDataCounter,"ax",%progbits
 18658              		.align	2
 18659              		.global	DMA_GetCurrDataCounter
 18660              		.thumb
 18661              		.thumb_func
 18663              	DMA_GetCurrDataCounter:
 18664              	.LFB35:
 362:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 363:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 364:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Returns the number of remaining data units in the current
 365:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         DMAy Channelx transfer.
 366:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_Channelx: where y can be 1 or 2 to select the DMA and 
 367:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   x can be 1 to 7 for DMA1 and 1 to 5 for DMA2 to select the DMA Channel.
 368:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval The number of remaining data units in the current DMAy Channelx
 369:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *         transfer.
 370:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 371:../StdPeripheralDriver/src/stm32f10x_dma.c **** uint16_t DMA_GetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx)
 372:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18665              		.loc 1 372 0
 18666              		.cfi_startproc
 18667              		@ args = 0, pretend = 0, frame = 8
 18668              		@ frame_needed = 1, uses_anonymous_args = 0
 18669              		@ link register save eliminated.
 18670 0000 80B4     		push	{r7}
 18671              	.LCFI18:
 18672              		.cfi_def_cfa_offset 4
 18673 0002 83B0     		sub	sp, sp, #12
 18674              	.LCFI19:
 18675              		.cfi_def_cfa_offset 16
 18676 0004 00AF     		add	r7, sp, #0
 18677              		.cfi_offset 7, -4
 18678              	.LCFI20:
 18679              		.cfi_def_cfa_register 7
 18680 0006 7860     		str	r0, [r7, #4]
 373:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 374:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 375:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Return the number of remaining data units for DMAy Channelx */
 376:../StdPeripheralDriver/src/stm32f10x_dma.c ****   return ((uint16_t)(DMAy_Channelx->CNDTR));
 18681              		.loc 1 376 0
 18682 0008 7B68     		ldr	r3, [r7, #4]
 18683 000a 5B68     		ldr	r3, [r3, #4]
 18684 000c 9BB2     		uxth	r3, r3
 377:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18685              		.loc 1 377 0
 18686 000e 1846     		mov	r0, r3
 18687 0010 07F10C07 		add	r7, r7, #12
 18688 0014 BD46     		mov	sp, r7
 18689 0016 80BC     		pop	{r7}
 18690 0018 7047     		bx	lr
 18691              		.cfi_endproc
 18692              	.LFE35:
 18694 001a 00BF     		.section	.text.DMA_GetFlagStatus,"ax",%progbits
 18695              		.align	2
 18696              		.global	DMA_GetFlagStatus
 18697              		.thumb
 18698              		.thumb_func
 18700              	DMA_GetFlagStatus:
 18701              	.LFB36:
 378:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 379:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 380:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Checks whether the specified DMAy Channelx flag is set or not.
 381:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_FLAG: specifies the flag to check.
 382:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be one of the following values:
 383:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 384:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 385:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 386:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 387:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 388:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 389:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
 390:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 391:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 392:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 393:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 394:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 395:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 396:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 397:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 398:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 399:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 400:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
 401:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 402:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 403:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL6: DMA1 Channel6 global flag.
 404:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC6: DMA1 Channel6 transfer complete flag.
 405:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT6: DMA1 Channel6 half transfer flag.
 406:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE6: DMA1 Channel6 transfer error flag.
 407:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL7: DMA1 Channel7 global flag.
 408:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC7: DMA1 Channel7 transfer complete flag.
 409:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT7: DMA1 Channel7 half transfer flag.
 410:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE7: DMA1 Channel7 transfer error flag.
 411:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL1: DMA2 Channel1 global flag.
 412:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC1: DMA2 Channel1 transfer complete flag.
 413:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT1: DMA2 Channel1 half transfer flag.
 414:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE1: DMA2 Channel1 transfer error flag.
 415:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL2: DMA2 Channel2 global flag.
 416:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC2: DMA2 Channel2 transfer complete flag.
 417:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT2: DMA2 Channel2 half transfer flag.
 418:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE2: DMA2 Channel2 transfer error flag.
 419:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL3: DMA2 Channel3 global flag.
 420:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC3: DMA2 Channel3 transfer complete flag.
 421:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT3: DMA2 Channel3 half transfer flag.
 422:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE3: DMA2 Channel3 transfer error flag.
 423:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL4: DMA2 Channel4 global flag.
 424:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC4: DMA2 Channel4 transfer complete flag.
 425:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT4: DMA2 Channel4 half transfer flag.
 426:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE4: DMA2 Channel4 transfer error flag.
 427:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL5: DMA2 Channel5 global flag.
 428:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC5: DMA2 Channel5 transfer complete flag.
 429:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
 430:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
 431:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval The new state of DMAy_FLAG (SET or RESET).
 432:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 433:../StdPeripheralDriver/src/stm32f10x_dma.c **** FlagStatus DMA_GetFlagStatus(uint32_t DMAy_FLAG)
 434:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18702              		.loc 1 434 0
 18703              		.cfi_startproc
 18704              		@ args = 0, pretend = 0, frame = 16
 18705              		@ frame_needed = 1, uses_anonymous_args = 0
 18706              		@ link register save eliminated.
 18707 0000 80B4     		push	{r7}
 18708              	.LCFI21:
 18709              		.cfi_def_cfa_offset 4
 18710 0002 85B0     		sub	sp, sp, #20
 18711              	.LCFI22:
 18712              		.cfi_def_cfa_offset 24
 18713 0004 00AF     		add	r7, sp, #0
 18714              		.cfi_offset 7, -4
 18715              	.LCFI23:
 18716              		.cfi_def_cfa_register 7
 18717 0006 7860     		str	r0, [r7, #4]
 435:../StdPeripheralDriver/src/stm32f10x_dma.c ****   FlagStatus bitstatus = RESET;
 18718              		.loc 1 435 0
 18719 0008 4FF00003 		mov	r3, #0
 18720 000c FB73     		strb	r3, [r7, #15]
 436:../StdPeripheralDriver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 18721              		.loc 1 436 0
 18722 000e 4FF00003 		mov	r3, #0
 18723 0012 BB60     		str	r3, [r7, #8]
 437:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 438:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 439:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_GET_FLAG(DMAy_FLAG));
 440:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 441:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 442:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
 18724              		.loc 1 442 0
 18725 0014 7B68     		ldr	r3, [r7, #4]
 18726 0016 03F08053 		and	r3, r3, #268435456
 18727 001a 002B     		cmp	r3, #0
 18728 001c 03D0     		beq	.L27
 443:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 444:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA2 ISR register value */
 445:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA2->ISR ;
 18729              		.loc 1 445 0
 18730 001e 0D4B     		ldr	r3, .L31
 18731 0020 1B68     		ldr	r3, [r3, #0]
 18732 0022 BB60     		str	r3, [r7, #8]
 18733 0024 02E0     		b	.L28
 18734              	.L27:
 446:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 447:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 448:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 449:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA1 ISR register value */
 450:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA1->ISR ;
 18735              		.loc 1 450 0
 18736 0026 0C4B     		ldr	r3, .L31+4
 18737 0028 1B68     		ldr	r3, [r3, #0]
 18738 002a BB60     		str	r3, [r7, #8]
 18739              	.L28:
 451:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 452:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 453:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the status of the specified DMAy flag */
 454:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((tmpreg & DMAy_FLAG) != (uint32_t)RESET)
 18740              		.loc 1 454 0
 18741 002c BA68     		ldr	r2, [r7, #8]
 18742 002e 7B68     		ldr	r3, [r7, #4]
 18743 0030 02EA0303 		and	r3, r2, r3
 18744 0034 002B     		cmp	r3, #0
 18745 0036 03D0     		beq	.L29
 455:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 456:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_FLAG is set */
 457:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = SET;
 18746              		.loc 1 457 0
 18747 0038 4FF00103 		mov	r3, #1
 18748 003c FB73     		strb	r3, [r7, #15]
 18749 003e 02E0     		b	.L30
 18750              	.L29:
 458:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 459:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 460:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 461:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_FLAG is reset */
 462:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = RESET;
 18751              		.loc 1 462 0
 18752 0040 4FF00003 		mov	r3, #0
 18753 0044 FB73     		strb	r3, [r7, #15]
 18754              	.L30:
 463:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 464:../StdPeripheralDriver/src/stm32f10x_dma.c ****   
 465:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Return the DMAy_FLAG status */
 466:../StdPeripheralDriver/src/stm32f10x_dma.c ****   return  bitstatus;
 18755              		.loc 1 466 0
 18756 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 467:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18757              		.loc 1 467 0
 18758 0048 1846     		mov	r0, r3
 18759 004a 07F11407 		add	r7, r7, #20
 18760 004e BD46     		mov	sp, r7
 18761 0050 80BC     		pop	{r7}
 18762 0052 7047     		bx	lr
 18763              	.L32:
 18764              		.align	2
 18765              	.L31:
 18766 0054 00040240 		.word	1073873920
 18767 0058 00000240 		.word	1073872896
 18768              		.cfi_endproc
 18769              	.LFE36:
 18771              		.section	.text.DMA_ClearFlag,"ax",%progbits
 18772              		.align	2
 18773              		.global	DMA_ClearFlag
 18774              		.thumb
 18775              		.thumb_func
 18777              	DMA_ClearFlag:
 18778              	.LFB37:
 468:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 469:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 470:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Clears the DMAy Channelx's pending flags.
 471:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_FLAG: specifies the flag to clear.
 472:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 473:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 474:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 475:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 476:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 477:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 478:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 479:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
 480:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 481:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 482:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 483:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 484:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 485:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 486:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 487:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 488:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 489:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 490:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
 491:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 492:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 493:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL6: DMA1 Channel6 global flag.
 494:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC6: DMA1 Channel6 transfer complete flag.
 495:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT6: DMA1 Channel6 half transfer flag.
 496:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE6: DMA1 Channel6 transfer error flag.
 497:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_GL7: DMA1 Channel7 global flag.
 498:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TC7: DMA1 Channel7 transfer complete flag.
 499:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_HT7: DMA1 Channel7 half transfer flag.
 500:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_FLAG_TE7: DMA1 Channel7 transfer error flag.
 501:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL1: DMA2 Channel1 global flag.
 502:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC1: DMA2 Channel1 transfer complete flag.
 503:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT1: DMA2 Channel1 half transfer flag.
 504:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE1: DMA2 Channel1 transfer error flag.
 505:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL2: DMA2 Channel2 global flag.
 506:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC2: DMA2 Channel2 transfer complete flag.
 507:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT2: DMA2 Channel2 half transfer flag.
 508:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE2: DMA2 Channel2 transfer error flag.
 509:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL3: DMA2 Channel3 global flag.
 510:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC3: DMA2 Channel3 transfer complete flag.
 511:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT3: DMA2 Channel3 half transfer flag.
 512:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE3: DMA2 Channel3 transfer error flag.
 513:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL4: DMA2 Channel4 global flag.
 514:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC4: DMA2 Channel4 transfer complete flag.
 515:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT4: DMA2 Channel4 half transfer flag.
 516:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE4: DMA2 Channel4 transfer error flag.
 517:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_GL5: DMA2 Channel5 global flag.
 518:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TC5: DMA2 Channel5 transfer complete flag.
 519:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
 520:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
 521:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 522:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 523:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_ClearFlag(uint32_t DMAy_FLAG)
 524:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18779              		.loc 1 524 0
 18780              		.cfi_startproc
 18781              		@ args = 0, pretend = 0, frame = 8
 18782              		@ frame_needed = 1, uses_anonymous_args = 0
 18783              		@ link register save eliminated.
 18784 0000 80B4     		push	{r7}
 18785              	.LCFI24:
 18786              		.cfi_def_cfa_offset 4
 18787 0002 83B0     		sub	sp, sp, #12
 18788              	.LCFI25:
 18789              		.cfi_def_cfa_offset 16
 18790 0004 00AF     		add	r7, sp, #0
 18791              		.cfi_offset 7, -4
 18792              	.LCFI26:
 18793              		.cfi_def_cfa_register 7
 18794 0006 7860     		str	r0, [r7, #4]
 525:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 526:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CLEAR_FLAG(DMAy_FLAG));
 527:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 528:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 529:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
 18795              		.loc 1 529 0
 18796 0008 7B68     		ldr	r3, [r7, #4]
 18797 000a 03F08053 		and	r3, r3, #268435456
 18798 000e 002B     		cmp	r3, #0
 18799 0010 03D0     		beq	.L34
 530:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 531:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy flags */
 532:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR = DMAy_FLAG;
 18800              		.loc 1 532 0
 18801 0012 064B     		ldr	r3, .L36
 18802 0014 7A68     		ldr	r2, [r7, #4]
 18803 0016 5A60     		str	r2, [r3, #4]
 18804 0018 02E0     		b	.L33
 18805              	.L34:
 533:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 534:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 535:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 536:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy flags */
 537:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR = DMAy_FLAG;
 18806              		.loc 1 537 0
 18807 001a 054B     		ldr	r3, .L36+4
 18808 001c 7A68     		ldr	r2, [r7, #4]
 18809 001e 5A60     		str	r2, [r3, #4]
 18810              	.L33:
 538:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 539:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18811              		.loc 1 539 0
 18812 0020 07F10C07 		add	r7, r7, #12
 18813 0024 BD46     		mov	sp, r7
 18814 0026 80BC     		pop	{r7}
 18815 0028 7047     		bx	lr
 18816              	.L37:
 18817 002a 00BF     		.align	2
 18818              	.L36:
 18819 002c 00040240 		.word	1073873920
 18820 0030 00000240 		.word	1073872896
 18821              		.cfi_endproc
 18822              	.LFE37:
 18824              		.section	.text.DMA_GetITStatus,"ax",%progbits
 18825              		.align	2
 18826              		.global	DMA_GetITStatus
 18827              		.thumb
 18828              		.thumb_func
 18830              	DMA_GetITStatus:
 18831              	.LFB38:
 540:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 541:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 542:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Checks whether the specified DMAy Channelx interrupt has occurred or not.
 543:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_IT: specifies the DMAy interrupt source to check. 
 544:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be one of the following values:
 545:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 546:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 547:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 548:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 549:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
 550:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 551:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 552:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 553:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 554:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 555:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 556:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 557:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 558:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 559:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 560:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 561:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
 562:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 563:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 564:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 565:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL6: DMA1 Channel6 global interrupt.
 566:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC6: DMA1 Channel6 transfer complete interrupt.
 567:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT6: DMA1 Channel6 half transfer interrupt.
 568:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE6: DMA1 Channel6 transfer error interrupt.
 569:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL7: DMA1 Channel7 global interrupt.
 570:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC7: DMA1 Channel7 transfer complete interrupt.
 571:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT7: DMA1 Channel7 half transfer interrupt.
 572:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE7: DMA1 Channel7 transfer error interrupt.
 573:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL1: DMA2 Channel1 global interrupt.
 574:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC1: DMA2 Channel1 transfer complete interrupt.
 575:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT1: DMA2 Channel1 half transfer interrupt.
 576:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE1: DMA2 Channel1 transfer error interrupt.
 577:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL2: DMA2 Channel2 global interrupt.
 578:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC2: DMA2 Channel2 transfer complete interrupt.
 579:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT2: DMA2 Channel2 half transfer interrupt.
 580:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE2: DMA2 Channel2 transfer error interrupt.
 581:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL3: DMA2 Channel3 global interrupt.
 582:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC3: DMA2 Channel3 transfer complete interrupt.
 583:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT3: DMA2 Channel3 half transfer interrupt.
 584:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE3: DMA2 Channel3 transfer error interrupt.
 585:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL4: DMA2 Channel4 global interrupt.
 586:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC4: DMA2 Channel4 transfer complete interrupt.
 587:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT4: DMA2 Channel4 half transfer interrupt.
 588:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE4: DMA2 Channel4 transfer error interrupt.
 589:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL5: DMA2 Channel5 global interrupt.
 590:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC5: DMA2 Channel5 transfer complete interrupt.
 591:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT5: DMA2 Channel5 half transfer interrupt.
 592:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE5: DMA2 Channel5 transfer error interrupt.
 593:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval The new state of DMAy_IT (SET or RESET).
 594:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 595:../StdPeripheralDriver/src/stm32f10x_dma.c **** ITStatus DMA_GetITStatus(uint32_t DMAy_IT)
 596:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18832              		.loc 1 596 0
 18833              		.cfi_startproc
 18834              		@ args = 0, pretend = 0, frame = 16
 18835              		@ frame_needed = 1, uses_anonymous_args = 0
 18836              		@ link register save eliminated.
 18837 0000 80B4     		push	{r7}
 18838              	.LCFI27:
 18839              		.cfi_def_cfa_offset 4
 18840 0002 85B0     		sub	sp, sp, #20
 18841              	.LCFI28:
 18842              		.cfi_def_cfa_offset 24
 18843 0004 00AF     		add	r7, sp, #0
 18844              		.cfi_offset 7, -4
 18845              	.LCFI29:
 18846              		.cfi_def_cfa_register 7
 18847 0006 7860     		str	r0, [r7, #4]
 597:../StdPeripheralDriver/src/stm32f10x_dma.c ****   ITStatus bitstatus = RESET;
 18848              		.loc 1 597 0
 18849 0008 4FF00003 		mov	r3, #0
 18850 000c FB73     		strb	r3, [r7, #15]
 598:../StdPeripheralDriver/src/stm32f10x_dma.c ****   uint32_t tmpreg = 0;
 18851              		.loc 1 598 0
 18852 000e 4FF00003 		mov	r3, #0
 18853 0012 BB60     		str	r3, [r7, #8]
 599:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 600:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 601:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_GET_IT(DMAy_IT));
 602:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 603:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMA */
 604:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_IT & FLAG_Mask) != (uint32_t)RESET)
 18854              		.loc 1 604 0
 18855 0014 7B68     		ldr	r3, [r7, #4]
 18856 0016 03F08053 		and	r3, r3, #268435456
 18857 001a 002B     		cmp	r3, #0
 18858 001c 03D0     		beq	.L39
 605:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 606:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA2 ISR register value */
 607:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA2->ISR;
 18859              		.loc 1 607 0
 18860 001e 0D4B     		ldr	r3, .L43
 18861 0020 1B68     		ldr	r3, [r3, #0]
 18862 0022 BB60     		str	r3, [r7, #8]
 18863 0024 02E0     		b	.L40
 18864              	.L39:
 608:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 609:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 610:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 611:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Get DMA1 ISR register value */
 612:../StdPeripheralDriver/src/stm32f10x_dma.c ****     tmpreg = DMA1->ISR;
 18865              		.loc 1 612 0
 18866 0026 0C4B     		ldr	r3, .L43+4
 18867 0028 1B68     		ldr	r3, [r3, #0]
 18868 002a BB60     		str	r3, [r7, #8]
 18869              	.L40:
 613:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 614:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 615:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the status of the specified DMAy interrupt */
 616:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((tmpreg & DMAy_IT) != (uint32_t)RESET)
 18870              		.loc 1 616 0
 18871 002c BA68     		ldr	r2, [r7, #8]
 18872 002e 7B68     		ldr	r3, [r7, #4]
 18873 0030 02EA0303 		and	r3, r2, r3
 18874 0034 002B     		cmp	r3, #0
 18875 0036 03D0     		beq	.L41
 617:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 618:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_IT is set */
 619:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = SET;
 18876              		.loc 1 619 0
 18877 0038 4FF00103 		mov	r3, #1
 18878 003c FB73     		strb	r3, [r7, #15]
 18879 003e 02E0     		b	.L42
 18880              	.L41:
 620:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 621:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 622:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 623:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* DMAy_IT is reset */
 624:../StdPeripheralDriver/src/stm32f10x_dma.c ****     bitstatus = RESET;
 18881              		.loc 1 624 0
 18882 0040 4FF00003 		mov	r3, #0
 18883 0044 FB73     		strb	r3, [r7, #15]
 18884              	.L42:
 625:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 626:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Return the DMA_IT status */
 627:../StdPeripheralDriver/src/stm32f10x_dma.c ****   return  bitstatus;
 18885              		.loc 1 627 0
 18886 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 628:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18887              		.loc 1 628 0
 18888 0048 1846     		mov	r0, r3
 18889 004a 07F11407 		add	r7, r7, #20
 18890 004e BD46     		mov	sp, r7
 18891 0050 80BC     		pop	{r7}
 18892 0052 7047     		bx	lr
 18893              	.L44:
 18894              		.align	2
 18895              	.L43:
 18896 0054 00040240 		.word	1073873920
 18897 0058 00000240 		.word	1073872896
 18898              		.cfi_endproc
 18899              	.LFE38:
 18901              		.section	.text.DMA_ClearITPendingBit,"ax",%progbits
 18902              		.align	2
 18903              		.global	DMA_ClearITPendingBit
 18904              		.thumb
 18905              		.thumb_func
 18907              	DMA_ClearITPendingBit:
 18908              	.LFB39:
 629:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 630:../StdPeripheralDriver/src/stm32f10x_dma.c **** /**
 631:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @brief  Clears the DMAy Channelx's interrupt pending bits.
 632:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @param  DMAy_IT: specifies the DMAy interrupt pending bit to clear.
 633:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 634:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 635:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 636:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 637:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 638:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
 639:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 640:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 641:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 642:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 643:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 644:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 645:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 646:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 647:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 648:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 649:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 650:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
 651:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 652:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 653:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 654:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL6: DMA1 Channel6 global interrupt.
 655:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC6: DMA1 Channel6 transfer complete interrupt.
 656:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT6: DMA1 Channel6 half transfer interrupt.
 657:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE6: DMA1 Channel6 transfer error interrupt.
 658:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_GL7: DMA1 Channel7 global interrupt.
 659:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TC7: DMA1 Channel7 transfer complete interrupt.
 660:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_HT7: DMA1 Channel7 half transfer interrupt.
 661:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA1_IT_TE7: DMA1 Channel7 transfer error interrupt.
 662:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL1: DMA2 Channel1 global interrupt.
 663:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC1: DMA2 Channel1 transfer complete interrupt.
 664:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT1: DMA2 Channel1 half transfer interrupt.
 665:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE1: DMA2 Channel1 transfer error interrupt.
 666:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL2: DMA2 Channel2 global interrupt.
 667:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC2: DMA2 Channel2 transfer complete interrupt.
 668:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT2: DMA2 Channel2 half transfer interrupt.
 669:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE2: DMA2 Channel2 transfer error interrupt.
 670:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL3: DMA2 Channel3 global interrupt.
 671:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC3: DMA2 Channel3 transfer complete interrupt.
 672:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT3: DMA2 Channel3 half transfer interrupt.
 673:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE3: DMA2 Channel3 transfer error interrupt.
 674:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL4: DMA2 Channel4 global interrupt.
 675:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC4: DMA2 Channel4 transfer complete interrupt.
 676:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT4: DMA2 Channel4 half transfer interrupt.
 677:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE4: DMA2 Channel4 transfer error interrupt.
 678:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_GL5: DMA2 Channel5 global interrupt.
 679:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TC5: DMA2 Channel5 transfer complete interrupt.
 680:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_HT5: DMA2 Channel5 half transfer interrupt.
 681:../StdPeripheralDriver/src/stm32f10x_dma.c ****   *     @arg DMA2_IT_TE5: DMA2 Channel5 transfer error interrupt.
 682:../StdPeripheralDriver/src/stm32f10x_dma.c ****   * @retval None
 683:../StdPeripheralDriver/src/stm32f10x_dma.c ****   */
 684:../StdPeripheralDriver/src/stm32f10x_dma.c **** void DMA_ClearITPendingBit(uint32_t DMAy_IT)
 685:../StdPeripheralDriver/src/stm32f10x_dma.c **** {
 18909              		.loc 1 685 0
 18910              		.cfi_startproc
 18911              		@ args = 0, pretend = 0, frame = 8
 18912              		@ frame_needed = 1, uses_anonymous_args = 0
 18913              		@ link register save eliminated.
 18914 0000 80B4     		push	{r7}
 18915              	.LCFI30:
 18916              		.cfi_def_cfa_offset 4
 18917 0002 83B0     		sub	sp, sp, #12
 18918              	.LCFI31:
 18919              		.cfi_def_cfa_offset 16
 18920 0004 00AF     		add	r7, sp, #0
 18921              		.cfi_offset 7, -4
 18922              	.LCFI32:
 18923              		.cfi_def_cfa_register 7
 18924 0006 7860     		str	r0, [r7, #4]
 686:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Check the parameters */
 687:../StdPeripheralDriver/src/stm32f10x_dma.c ****   assert_param(IS_DMA_CLEAR_IT(DMAy_IT));
 688:../StdPeripheralDriver/src/stm32f10x_dma.c **** 
 689:../StdPeripheralDriver/src/stm32f10x_dma.c ****   /* Calculate the used DMAy */
 690:../StdPeripheralDriver/src/stm32f10x_dma.c ****   if ((DMAy_IT & FLAG_Mask) != (uint32_t)RESET)
 18925              		.loc 1 690 0
 18926 0008 7B68     		ldr	r3, [r7, #4]
 18927 000a 03F08053 		and	r3, r3, #268435456
 18928 000e 002B     		cmp	r3, #0
 18929 0010 03D0     		beq	.L46
 691:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 692:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy interrupt pending bits */
 693:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA2->IFCR = DMAy_IT;
 18930              		.loc 1 693 0
 18931 0012 064B     		ldr	r3, .L48
 18932 0014 7A68     		ldr	r2, [r7, #4]
 18933 0016 5A60     		str	r2, [r3, #4]
 18934 0018 02E0     		b	.L45
 18935              	.L46:
 694:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 695:../StdPeripheralDriver/src/stm32f10x_dma.c ****   else
 696:../StdPeripheralDriver/src/stm32f10x_dma.c ****   {
 697:../StdPeripheralDriver/src/stm32f10x_dma.c ****     /* Clear the selected DMAy interrupt pending bits */
 698:../StdPeripheralDriver/src/stm32f10x_dma.c ****     DMA1->IFCR = DMAy_IT;
 18936              		.loc 1 698 0
 18937 001a 054B     		ldr	r3, .L48+4
 18938 001c 7A68     		ldr	r2, [r7, #4]
 18939 001e 5A60     		str	r2, [r3, #4]
 18940              	.L45:
 699:../StdPeripheralDriver/src/stm32f10x_dma.c ****   }
 700:../StdPeripheralDriver/src/stm32f10x_dma.c **** }
 18941              		.loc 1 700 0
 18942 0020 07F10C07 		add	r7, r7, #12
 18943 0024 BD46     		mov	sp, r7
 18944 0026 80BC     		pop	{r7}
 18945 0028 7047     		bx	lr
 18946              	.L49:
 18947 002a 00BF     		.align	2
 18948              	.L48:
 18949 002c 00040240 		.word	1073873920
 18950 0030 00000240 		.word	1073872896
 18951              		.cfi_endproc
 18952              	.LFE39:
 18954              		.text
 18955              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_dma.c
     /tmp/ccHfWl8W.s:18105  .text.DMA_DeInit:00000000 $t
     /tmp/ccHfWl8W.s:18110  .text.DMA_DeInit:00000000 DMA_DeInit
     /tmp/ccHfWl8W.s:18314  .text.DMA_DeInit:00000148 $d
     /tmp/ccHfWl8W.s:18332  .text.DMA_Init:00000000 $t
     /tmp/ccHfWl8W.s:18337  .text.DMA_Init:00000000 DMA_Init
     /tmp/ccHfWl8W.s:18433  .text.DMA_StructInit:00000000 $t
     /tmp/ccHfWl8W.s:18438  .text.DMA_StructInit:00000000 DMA_StructInit
     /tmp/ccHfWl8W.s:18509  .text.DMA_Cmd:00000000 $t
     /tmp/ccHfWl8W.s:18514  .text.DMA_Cmd:00000000 DMA_Cmd
     /tmp/ccHfWl8W.s:18563  .text.DMA_ITConfig:00000000 $t
     /tmp/ccHfWl8W.s:18568  .text.DMA_ITConfig:00000000 DMA_ITConfig
     /tmp/ccHfWl8W.s:18620  .text.DMA_SetCurrDataCounter:00000000 $t
     /tmp/ccHfWl8W.s:18625  .text.DMA_SetCurrDataCounter:00000000 DMA_SetCurrDataCounter
     /tmp/ccHfWl8W.s:18658  .text.DMA_GetCurrDataCounter:00000000 $t
     /tmp/ccHfWl8W.s:18663  .text.DMA_GetCurrDataCounter:00000000 DMA_GetCurrDataCounter
     /tmp/ccHfWl8W.s:18695  .text.DMA_GetFlagStatus:00000000 $t
     /tmp/ccHfWl8W.s:18700  .text.DMA_GetFlagStatus:00000000 DMA_GetFlagStatus
     /tmp/ccHfWl8W.s:18766  .text.DMA_GetFlagStatus:00000054 $d
     /tmp/ccHfWl8W.s:18772  .text.DMA_ClearFlag:00000000 $t
     /tmp/ccHfWl8W.s:18777  .text.DMA_ClearFlag:00000000 DMA_ClearFlag
     /tmp/ccHfWl8W.s:18819  .text.DMA_ClearFlag:0000002c $d
     /tmp/ccHfWl8W.s:18825  .text.DMA_GetITStatus:00000000 $t
     /tmp/ccHfWl8W.s:18830  .text.DMA_GetITStatus:00000000 DMA_GetITStatus
     /tmp/ccHfWl8W.s:18896  .text.DMA_GetITStatus:00000054 $d
     /tmp/ccHfWl8W.s:18902  .text.DMA_ClearITPendingBit:00000000 $t
     /tmp/ccHfWl8W.s:18907  .text.DMA_ClearITPendingBit:00000000 DMA_ClearITPendingBit
     /tmp/ccHfWl8W.s:18949  .text.DMA_ClearITPendingBit:0000002c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
